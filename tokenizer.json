{
  "version": "1.0",
  "truncation": null,
  "padding": null,
  "added_tokens": [
    {
      "id": 0,
      "content": "[UNK]",
      "single_word": false,
      "lstrip": false,
      "rstrip": false,
      "normalized": false,
      "special": true
    },
    {
      "id": 1,
      "content": "[CLS]",
      "single_word": false,
      "lstrip": false,
      "rstrip": false,
      "normalized": false,
      "special": true
    },
    {
      "id": 2,
      "content": "[SEP]",
      "single_word": false,
      "lstrip": false,
      "rstrip": false,
      "normalized": false,
      "special": true
    },
    {
      "id": 3,
      "content": "[PAD]",
      "single_word": false,
      "lstrip": false,
      "rstrip": false,
      "normalized": false,
      "special": true
    },
    {
      "id": 4,
      "content": "[MASK]",
      "single_word": false,
      "lstrip": false,
      "rstrip": false,
      "normalized": false,
      "special": true
    }
  ],
  "normalizer": {
    "type": "Sequence",
    "normalizers": [
      {
        "type": "NFD"
      },
      {
        "type": "Lowercase"
      },
      {
        "type": "StripAccents"
      }
    ]
  },
  "pre_tokenizer": {
    "type": "Sequence",
    "pretokenizers": [
      {
        "type": "Whitespace"
      },
      {
        "type": "Digits",
        "individual_digits": true
      }
    ]
  },
  "post_processor": {
    "type": "TemplateProcessing",
    "single": [
      {
        "SpecialToken": {
          "id": "[CLS]",
          "type_id": 0
        }
      },
      {
        "Sequence": {
          "id": "A",
          "type_id": 0
        }
      },
      {
        "SpecialToken": {
          "id": "[SEP]",
          "type_id": 0
        }
      }
    ],
    "pair": [
      {
        "SpecialToken": {
          "id": "[CLS]",
          "type_id": 0
        }
      },
      {
        "Sequence": {
          "id": "A",
          "type_id": 0
        }
      },
      {
        "SpecialToken": {
          "id": "[SEP]",
          "type_id": 0
        }
      },
      {
        "Sequence": {
          "id": "B",
          "type_id": 1
        }
      },
      {
        "SpecialToken": {
          "id": "[SEP]",
          "type_id": 1
        }
      }
    ],
    "special_tokens": {
      "[CLS]": {
        "id": "[CLS]",
        "ids": [
          1
        ],
        "tokens": [
          "[CLS]"
        ]
      },
      "[SEP]": {
        "id": "[SEP]",
        "ids": [
          2
        ],
        "tokens": [
          "[SEP]"
        ]
      }
    }
  },
  "decoder": null,
  "model": {
    "type": "WordLevel",
    "vocab": {
      "[UNK]": 0,
      "[CLS]": 1,
      "[SEP]": 2,
      "[PAD]": 3,
      "[MASK]": 4,
      "i": 5,
      ";": 6,
      "a": 7,
      "n": 8,
      "[": 9,
      "j": 10,
      "(": 11,
      "=": 12,
      "0": 13,
      "1": 14,
      "int": 15,
      ",": 16,
      "<": 17,
      "d": 18,
      "(\"%": 19,
      "printf": 20,
      "for": 21,
      "}": 22,
      "namespace": 23,
      "k": 24,
      "];": 25,
      "]);": 26,
      "-": 27,
      "v": 28,
      ");": 29,
      "+": 30,
      "scanf": 31,
      "]": 32,
      "){": 33,
      "++){": 34,
      ">": 35,
      "{": 36,
      ")": 37,
      "void": 38,
      "\");": 39,
      "h": 40,
      ".": 41,
      "std": 42,
      "include": 43,
      "++)": 44,
      "if": 45,
      "return": 46,
      ";}": 47,
      "#": 48,
      "main": 49,
      "stdio": 50,
      "while": 51,
      "&&": 52,
      ">=": 53,
      "using": 54,
      "key": 55,
      "(\"": 56,
      "&": 57,
      "]=": 58,
      "--;": 59,
      "\\": 60,
      "insertionsort": 61,
      "(){": 62,
      "[],": 63,
      "trace": 64,
      "array": 65,
      "<=": 66,
      "\"": 67,
      "*": 68,
      "]>": 69,
      "\");}": 70,
      "num": 71,
      "iostream": 72,
      "++": 73,
      ">#": 74,
      "!=": 75,
      "else": 76,
      "}}": 77,
      "==": 78,
      "define": 79,
      "b": 80,
      "],": 81,
      "arr": 82,
      "t": 83,
      "c": 84,
      "x": 85,
      "l": 86,
      "tmp": 87,
      "%": 88,
      "m": 89,
      "--;}": 90,
      "2": 91,
      "p": 92,
      "length": 93,
      "data": 94,
      "stdlib": 95,
      "print": 96,
      "s": 97,
      "temp": 98,
      "r": 99,
      "()": 100,
      "size": 101,
      "const": 102,
      "sizeof": 103,
      "break": 104,
      "static": 105,
      "malloc": 106,
      "4": 107,
      ");}": 108,
      "max": 109,
      "z": 110,
      "*,": 111,
      "*)": 112,
      "((": 113,
      "count": 114,
      "len": 115,
      ");}}": 116,
      "y": 117,
      "\"%": 118,
      "printarray": 119,
      "char": 120,
      "_": 121,
      "sort": 122,
      "();": 123,
      "6": 124,
      "ary": 125,
      "output": 126,
      "in": 127,
      "insertsort": 128,
      "]){": 129,
      "e": 130,
      "insert": 131,
      "nums": 132,
      "insertion_sort": 133,
      "5": 134,
      "\");}}": 135,
      "));": 136,
      "'": 137,
      "str": 138,
      "print_array": 139,
      "free": 140,
      "_t": 141,
      "q": 142,
      "numbers": 143,
      "\"#": 144,
      "])": 145,
      "3": 146,
      "exit": 147,
      "');": 148,
      "--){": 149,
      "--)": 150,
      "number": 151,
      "putchar": 152,
      ")){": 153,
      "[]){": 154,
      "insertion": 155,
      "loop": 156,
      "*(": 157,
      "]);}}": 158,
      "numofsorties": 159,
      "++;": 160,
      "buf": 161,
      "o": 162,
      "))": 163,
      "\"\\": 164,
      "8": 165,
      "ins": 166,
      "values": 167,
      "f": 168,
      "size_t": 169,
      "uint": 170,
      ",\"": 171,
      "string": 172,
      "card": 173,
      "('\\": 174,
      ":": 175,
      "\"\"": 176,
      "'\\": 177,
      "swap": 178,
      "w": 179,
      ")*": 180,
      "--": 181,
      "g": 182,
      "show": 183,
      "};": 184,
      "argc": 185,
      "argv": 186,
      ";}}": 187,
      "ixarray": 188,
      "psortbuff": 189,
      "?": 190,
      "as": 191,
      "is": 192,
      "\"\"#": 193,
      "=(": 194,
      "kazu": 195,
      "showarray": 196,
      "]<": 197,
      "null": 198,
      "');}": 199,
      "sequence": 200,
      ";++": 201,
      "tl": 202,
      "unsigned": 203,
      "list": 204,
      "display": 205,
      "dump": 206,
      "math": 207,
      "),": 208,
      "9": 209,
      "min": 210,
      "(;": 211,
      "max_n": 212,
      ")&&(": 213,
      "total": 214,
      "work": 215,
      "\"$": 216,
      ")#": 217,
      "aprint": 218,
      "flag": 219,
      "input": 220,
      "stdin": 221,
      "7": 222,
      "ct": 223,
      "elements": 224,
      "\".": 225,
      "printout": 226,
      "$": 227,
      "hai": 228,
      "line": 229,
      "puts": 230,
      "range": 231,
      "atoi": 232,
      "error": 233,
      "out": 234,
      "ax": 235,
      "printer": 236,
      "('": 237,
      "];}": 238,
      "fgets": 239,
      "u": 240,
      "val": 241,
      "(&": 242,
      "]);}}}": 243,
      "ubw_ci": 244,
      "fprintf": 245,
      "num_data": 246,
      "space": 247,
      ",*": 248,
      "data_num": 249,
      "nmax": 250,
      "\")\"": 251,
      "an": 252,
      "do": 253,
      "idx": 254,
      "nl": 255,
      "printa": 256,
      "short": 257,
      "]={": 258,
      "_f": 259,
      "_g": 260,
      "arraynum": 261,
      "eof": 262,
      "exit_success": 263,
      "kerror": 264,
      "rbx": 265,
      "set": 266,
      "strtok": 267,
      "the": 268,
      "ubw_cj": 269,
      "')": 270,
      "[])": 271,
      "_c": 272,
      "_i": 273,
      "array_size": 274,
      "cd": 275,
      "eax": 276,
      "element": 277,
      "exit_failure": 278,
      "ld": 279,
      "print_a": 280,
      "rax": 281,
      "to": 282,
      "value": 283,
      "(%": 284,
      "++);": 285,
      "_d": 286,
      "_h": 287,
      "_n": 288,
      "change": 289,
      "cnt": 290,
      "enter": 291,
      "getchar": 292,
      "getchar_unlocked": 293,
      "inputnumber": 294,
      "intmain": 295,
      "ip": 296,
      "ix": 297,
      "output_count": 298,
      "p_num": 299,
      "rdx": 300,
      "stderr": 301,
      "tosort": 302,
      "_a": 303,
      "long": 304,
      "memo": 305,
      "n_max": 306,
      "numberarray": 307,
      "point": 308,
      "printarr": 309,
      "\"),": 310,
      "**": 311,
      "-=": 312,
      ";*": 313,
      "_w": 314,
      "_y": 315,
      "array_print": 316,
      "arrow": 317,
      "checknumrange": 318,
      "dum_a": 319,
      "err": 320,
      "esc": 321,
      "i_": 322,
      "index": 323,
      "input_data": 324,
      "inssort": 325,
      "nm": 326,
      "nprint": 327,
      "numberofelements": 328,
      "parray": 329,
      "process": 330,
      "seq": 331,
      "zero": 332,
      "++]));": 333,
      "<(": 334,
      "_k": 335,
      "_m": 336,
      "_p": 337,
      "_v": 338,
      "arry": 339,
      "buff": 340,
      "copy": 341,
      "ebp": 342,
      "elseprintf": 343,
      "from": 344,
      "iinput": 345,
      "insertnumber": 346,
      "last": 347,
      "lj": 348,
      "lu_": 349,
      "max_data_num": 350,
      "num_len": 351,
      "rdi": 352,
      "rep": 353,
      "result": 354,
      "retu": 355,
      "srt": 356,
      "stuck": 357,
      "wnm": 358,
      "{};": 359,
      "\");}}}": 360,
      "\",*(": 361,
      "\":\"\\": 362,
      "(\"\");": 363,
      "(\"%-": 364,
      "();}": 365,
      "*);": 366,
      ",&": 367,
      "?\"": 368,
      "[]);": 369,
      "_o": 370,
      "_s": 371,
      "edi": 372,
      "lr": 373,
      "not": 374,
      "nxarray": 375,
      "one": 376,
      "printline": 377,
      "tr": 378,
      "value_read": 379,
      "\"(%": 380,
      "\":\"": 381,
      "));}": 382,
      ")\\": 383,
      "++;}": 384,
      "++]);": 385,
      "--]);": 386,
      "]<=": 387,
      "]={};": 388,
      "_j": 389,
      "_q": 390,
      "_x": 391,
      "_z": 392,
      "continue": 393,
      "count_in": 394,
      "ctype": 395,
      "dex": 396,
      "dum_b": 397,
      "exchange_void": 398,
      "fig": 399
    },
    "unk_token": "[UNK]"
  }
}