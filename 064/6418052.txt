from collections import deque

def trans(s):
    if s in dic:
        return dic[s]
    else:
        return int(s)

def exp(s,c):
    if s[0] != '-':
        s = '+' + s
    res = 0
    l = []
    for i in range(len(s)):
        if s[i] == '-' or s[i] == '+':
            l.append(i)
    l.append(len(s))
    for i in range(len(l) - 1):
        if s[l[i]+1] == c:
            continue
        if s[l[i]] == '-':
            res -= trans(s[l[i]+1 : l[i+1]])
        else:
            res += trans(s[l[i]+1 : l[i+1]])
    return res % mod

def asg(s,cnt):
    c = s.count(s[0]) - 1
    if c == 1:
        dic[s[0]] += exp(s[3:],s[0]) * cnt
        dic[s[0]] %= mod
    elif c > 1:
        ep = exp(s[3:],s[0])
        cn = pow(c,cnt,mod)
        inv = pow(c-1,mod-2,mod)
        dic[s[0]] = dic[s[0]]*cn + ep*(cn-1)*inv
        dic[s[0]] %= mod
    else:
        dic[s[0]] = exp(s[3:],s[0])
    return

def fr(s):
    idx = 0
    cnt = 1
    while s[idx] == 'f':
        nx = idx
        while s[nx] != ')':
            nx += 1
        cnt *= exp(s[idx+4:nx],'.')
        idx = nx + 1
    if cnt == 0:
        return
    if s[idx] == 'p':
        prt(s[idx:],cnt)
    else:
        asg(s[idx:],cnt)
    return

def prt(s,cnt):
    d.append([exp(s[6:-1],'.'),cnt])

mod = 998244353

while True:
    n,m = map(int,input().split())
    if (n,m) == (0,0):
        break
    d = deque([])
    dic = {}
    for i in range(n):
        s = input()
        if len(s) == 1:
            dic[s] = 0
        elif s[0] == 'p':
            prt(s,1)
        elif s[0] == 'f' and s[1] == 'o':
            fr(s)
        else:
            asg(s,1)
    sd = deque([])
    while d:
        p,c = d.popleft()
        if sd and sd[-1][0] == p:
            sd[-1][1] += c
        else:
            sd.append([p,c])
    dic = {}
    for i in range(m):
        s = input()
        if len(s) == 1:
            dic[s] = 0
        elif s[0] == 'p':
            prt(s,1)
        elif s[0] == 'f' and s[1] == 'o':
            fr(s)
        else:
            asg(s,1)
    td = deque([])
    while d:
        p,c = d.popleft()
        if td and td[-1][0] == p:
            td[-1][1] += c
        else:
            td.append([p,c])
    print('Yes' if sd == td else 'No')

