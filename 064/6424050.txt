#include <bits/stdc++.h>
#ifdef MY_DEBUG
  #include "dprint.cpp"
  # define dprint(a, ...);                 \
      do {                                 \
          printf("line : %d, func : %s\n", \
                __LINE__, __func__);       \
          dprint(#a,a,##__VA_ARGS__ );     \
      } while (0)
#else
  #define dprint(a,...) 
#endif
using namespace std;
vector<vector<int>>Graph;
vector<int> vec;
int main() {
  int n;
  cin >>n;
  Graph= vector<vector<int>>(n+1);
  vec=vector<int>(n+1,-1);
  for (int i = 0; i < n; i++)
  {
    int k,v;
    cin >>k>>v;
    for (int i = 0; i < v; i++)
    {
      int temp;
      cin >>temp;
      Graph[k].push_back(temp);
    }
    
  }
 
  queue<int>q;
   vec[1]=0;
  q.push(1);
  while (q.empty()==false)
  {
    int v = q.front();q.pop();
    for (auto next_v : Graph[v])
    {
      if(vec[next_v]==-1){
        vec[next_v]=vec[v]+1;
        q.push(next_v);
      }
    }
    
  }
  for (int i = 1; i <= n; i++)
  {
    cout << i <<" "<<vec[i]<< endl;
  }
  



return 0;
}
