#include<iostream>
#include<cstdlib>
#include<string>
using namespace std;

typedef struct Node
{
    int key;
    struct Node *right, *left;
}Node;

int n;

Node *root, *NIL;

Node *createNode(int k)
{
    Node *x;
    x = (Node *)malloc(sizeof(Node));
    x -> key = k;
    x -> left = x -> right = NIL;
    return x;
}

Node *insertNode(Node *root, int k)
{
    if(root == NIL) return createNode(k);
    if(root -> key > k) root -> left = insertNode(root -> left, k);
    else if(root -> key < k) root -> right = insertNode(root -> right, k);
    return root;
}

void pre_print(Node *root)
{
    if(root != NIL){
        cout << " " << root -> key;
        pre_print(root -> left);
        pre_print(root -> right);
    }
}

void in_print(Node *root)
{
    if(root != NIL){
        in_print(root -> left);
        cout << " " << root -> key;
        in_print(root -> right);
    }
}

int main()
{
    int k;
    string s;
    cin >> n;
    NIL = (Node *)malloc(sizeof(Node));
    root = NIL;
    for(int i = 0; i < n; i++ ){
        cin >> s;
        if(s == "insert"){
            cin >> k;
            root = insertNode(root, k);
        }
        if(s == "print"){
            in_print(root);
            cout << endl;
            pre_print(root);
            cout << endl;
        }
    }
    return 0;

}


