#include<iostream>
#include<string>
#include<cstring>
#include<algorithm>
#include<math.h>
#include<vector>
#include<queue>
#include<deque>
#include<stack>
#include<list>
#include<map>
#include<set>
#include<bitset>


using namespace std;
typedef long long  ll;
const ll N = 1e9 + 9;

vector<ll> GetNext(string s) {
	vector<ll> next;
	next.resize(s.size() + 1);
	next[0] = -1;
	/*ll i = 0, j = -1;
	while (i < s.size()) {
		if (j == -1 || s[i] == s[j]) {
			i++;j++;
			next[i] = j;
		}
		else {
			j = next[j];
		}
	}*/
	next[1] = 0;
	for (ll i = 0;i < s.size();i++) {
		ll k = i;
		while (next[k] != -1) {
			if (s[next[k]] == s[i]) {
				break;
			}
			k = next[k];
		}
		next[i + 1] = next[k] + 1;
	}
	return next;
}

ll KMP(string T, string a, ll p,vector<ll> next) {
	
	ll i = p, j = 0;
	while (i < T.size() && j < a.size()) {
		if (j == -1 || T[i] == a[j]) {
			j++;i++;
			if (j == a.size()) {
				cout << i - j << endl;
				j = next[j];
			}
		}
		else {
			j = next[j];
		}
	}
	
	return -1;
}

int main() {
	string t, a;
	cin >> t;
	cin >> a;
	ll p = 0;
	vector<ll> next = GetNext(a);
	KMP(t, a, 0, next);
	/*while (p <= t.size() - a.size()) {
		p = KMP(t, a, p,next);
		if (p == -1) { return 0; }
		cout << p << endl;
		p++;
	}*/
}
