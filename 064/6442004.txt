#include<iostream>
#include<cstdio>
#include<algorithm>
#include<cstring>
#include<queue>
#include<stack>
#include<vector>
#include<climits>
using namespace std;
#define x first
#define y second
#define ALL(x) x.begin(),x.end()
const int N=30;
int g[N][N];
int w,h;
int d[4][2]={{0,-1},{0,1},{1,0},{-1,0}};
int res=INT_MAX;

void dfs(int x,int y,int u){
    u++;
    if(u>=res||u>10) return;
    for(int i=0;i<4;i++){
        int nx=x,ny=y;
        if(g[nx+d[i][0]][ny+d[i][1]]==1) continue;
        while(true){
            nx+=d[i][0];
            ny+=d[i][1];
            if(nx<0||nx>=h||ny<0||ny>=w) break;
            if(g[nx][ny]==3){
                if(u<res) res=u;
                break;
            }
            else if(g[nx][ny]==1){
                    g[nx][ny]=0;
                    dfs(nx-d[i][0],ny-d[i][1],u);
                    g[nx][ny]=1;
                break;
            }
        }
    }
}

int main(){
    
    while(scanf("%d%d",&w,&h),w&&h){
        int bx,by;
        for(int i=0;i<h;i++){
            for(int j=0;j<w;j++){
                scanf("%d",&g[i][j]);
                if(g[i][j]==2) bx=i,by=j; 
            }
        }
        res=INT_MAX;
        dfs(bx,by,0);
        printf("%d\n",res==INT_MAX?-1:res);
    }
    return 0;
}
