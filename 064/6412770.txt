#include<iostream>
#include<cstring>
using namespace std;
const int maxn=100;
int arr[101][101];
int vis[101][101];
int ans=0;
int w,h;
void dfs(int i,int j)
{
	int t=arr[i][j];
	if (!vis[i][j])	
	{
		vis[i][j]=1;
	}
	else
		return;
	if (i+1<=h&&arr[i+1][j]==t)
		dfs(i+1,j);
	if (i-1>=1&&arr[i-1][j]==t)	
		dfs(i-1,j);
	if (j+1<=w&&arr[i][j+1]==t)
		dfs(i,j+1);
	if (j-1>=1&&arr[i][j-1]==t)
		dfs(i,j-1);
}
void solve()
{
	memset(vis,0,sizeof(vis));
	ans=0;
	for (int i=1;i<=h;i++)
	{
		for (int j=1;j<=w;j++)
		{
			if (!vis[i][j])
			{
				ans++;
				dfs(i,j);
			}
		}
	}
	cout<<ans<<endl;
}
int main()
{
	while (cin>>h>>w&&!(w==0&&h==0))
	{	
		getchar();
		for (int i=1;i<=h;i++)
		{
			for (int j=1;j<=w;j++)
			{
				char temp;
				cin>>temp;
				if (temp=='#')
				{
					arr[i][j]=1;
				}
				else if (temp=='*')
				{
					arr[i][j]=2;
				}
				else
				{
					arr[i][j]=3;
				}
			}
		}
		solve();
	}
	
	
}
