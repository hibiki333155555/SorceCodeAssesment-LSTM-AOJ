#include<stdio.h>
#include<vector>
#include<algorithm>
#include<iostream>
#include<cmath>
#include<map>
#include<set>
#include <numeric>
using namespace std;

int parent(int i){
  return i/2;
}
int left(int i){
  return 2*i;
}
int right(int i){
  return 2*i+1;
}

void maxHeapify(int i,  vector<int> &v,int n){
  int l,r;
  l = left(i);
  r = right(i);
  int largest;
  if((l <= n)&&(v.at(i) < v.at(l))){
    largest = l;
  }
  else{
    largest = i;
  }
  if((r <= n)&&(v.at(largest) < v.at(r))){
    largest = r;
  }
  if(largest != i){
    swap(v.at(i),v.at(largest));
    maxHeapify(largest,v,n);
  }
}          
    

int main(){
  int n;
  scanf("%d",&n);
  vector<int> v(n+1);
  for(int i = 1; i <= n; i++){
    scanf("%d",&v.at(i));
  }
  for(int i = n/2; i > 0; i--){
    maxHeapify(i,v,n);
  }
  for(int i = 1; i <= n; i++){
    cout << " " << v.at(i);
  }
  cout << endl;
}
  
