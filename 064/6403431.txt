#pragma GCC optimize("O3")
#include<bits/stdc++.h> 
using namespace std;
using ll=long long;
using P=pair<ll,ll>;
template<class T> using V=vector<T>; 
#define fi first
#define se second
#define all(v) (v).begin(),(v).end()
const ll inf=(1e18);
const ll mod=998244353;
// const ll mod=1000000007;
const vector<int> dy={-1,0,1,0},dx={0,-1,0,1};
ll GCD(ll a,ll b) {return b ? GCD(b,a%b):a;}
ll LCM(ll c,ll d){return c/GCD(c,d)*d;}
struct __INIT{__INIT(){cin.tie(0);ios::sync_with_stdio(false);cout<<fixed<<setprecision(20);}} __init;
template<class T> bool chmax(T &a, const T &b) { if (a<b) { a=b; return 1; } return 0; }
template<class T> bool chmin(T &a, const T &b) { if (a>b) { a=b; return 1; } return 0; }
template<class T>void debag(const vector<T> &a){cerr<<"debag :";for(auto v:a)cerr<<v<<" ";cerr<<"\n";}
template<class T>void print(const vector<T> &a){for(auto v:a)cout<<v<<" ";cout<<"\n";}
int main(){
    int n;
    cin>>n;
    V<V<P>> g(n);
    for(int i=0;i<n-1;i++){
        int a,b;char c;
        cin>>a>>b>>c;
        --a;--b;
        g[a].emplace_back(b,(1ll<<(c-'a')));
        g[b].emplace_back(a,(1ll<<(c-'a')));
    }
    map<ll,ll> mp;
    V<ll> dp(n,0);
    auto dfs=[&](auto &&self,int cur,int par)->void{
            for(auto p:g[cur]){
                if(p.fi==par)continue;
                dp[p.fi]=(dp[cur]^p.se);
                self(self,p.fi,cur);
            }
            mp[dp[cur]]++;
    };
    dfs(dfs,0,-1);
    ll ans=0;
    for(int i=0;i<n;i++){
        ans+=(mp[dp[i]]-1);
        for(int j=0;j<26;j++){
            if(mp.count(dp[i]^(1ll<j))){
                ans+=mp[dp[i]^(1ll<<j)];
            }
        }
    }
    cout<<ans/2<<"\n";
}
