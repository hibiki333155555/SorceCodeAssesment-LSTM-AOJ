#!usr/bin/env python3
from collections import defaultdict, deque
from heapq import heappush, heappop
from itertools import permutations, accumulate
import sys
import math
import bisect
def LI(): return [int(x) for x in sys.stdin.readline().split()]
def I(): return int(sys.stdin.readline())
def IR(n):
    return [I() for _ in range(n)]
def LIR(n):
    return [LI() for _ in range(n)]

sys.setrecursionlimit(1000000)
mod = 1000000007

def main():
    n,k = LI()
    a = LI()
    a.sort()
    for i in range(n):
        if not k:
            break
        if a[i] == 1:
            a[i] = 5
            k -= 1
        elif a[i] == 2:
            a[i] = 6
            k -= 1
    a.sort()
    for i in range(n):
        if not k:
            break
        if a[i] < 6:
            a[i] = 6
            k -= 1
    print(sum(a))
    return


if __name__ == "__main__":
    main()

