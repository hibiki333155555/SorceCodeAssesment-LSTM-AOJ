#include<iostream>
#include<algorithm>
#include<stdio.h>
using namespace std;
struct card { char value, suit; };
void bublesort(card a[], int n) {
    for (int i = 0; i < n;i++) {
        for (int j = n-1; j >i; j--)
        {
            if (a[j].value < a[j - 1].value) {
                card t = a[j]; a[j] = a[j - 1]; a[j] = t;


            
            
            }
        }
    
    
    }


}

void selectsort(card a[], int n) {
    for (int i = 0; i < n; i++) {
        int minj = i;
        for (int j = i; j < n; j++) {
        
            if (a[j].value <a[minj].value) {
                minj = j;
                card t = a[minj]; a[minj] = a[i]; a[i] = t;
            
            
            }
        
        }
    
    
    
    }
    
    
    
    
    


}


bool isstable(card a1[], card a2[],int n) {

    for (int i = 0; i < n; i++) {
        if (a1[i].suit!=a2[i].suit)
        {
            return false;
        }
        else {
            return true;
        }
    
    }





}

int main() {
    card c1[100];
    card c2[100];
    int n;
    cin >> n;
    for (int i = 0; i < n; i++) {
        cin >> c1[i].suit >> c1[i].value;
    }
    for (int i = 0; i < n; i++) {
        c2[i] = c1[i];
    
    }
    bublesort(c1, n);
    selectsort(c2, n);
    for (int i = 0; i < n; i++) {
        if (i > 0) { cout << " "; }
        cout << c1[i].suit << c1[i].value;
    }
    cout << endl;
    cout << "Stable" << endl;
    for (int i = 0; i < n; i++) {
        if (i > 0) {
            cout << " "; }
        cout << c2[i].suit << c2[i].value;
    }
    cout << endl;
    if (isstable(c1,c2,n))
    {
        cout << "Stable" << endl;
    }
    else {
        cout << "Not stable" << endl;
    
    }

    
}





