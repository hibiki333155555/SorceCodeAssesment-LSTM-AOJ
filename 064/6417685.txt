#pragma GCC optimize("O3")
#include<bits/stdc++.h> 
using namespace std;
using ll=long long;
using P=pair<ll,ll>;
template<class T> using V=vector<T>; 
#define fi first
#define se second
#define all(v) (v).begin(),(v).end()
const ll inf=(1e18);
// const ll mod=998244353;
const ll mod=1000000007;
const vector<int> dy={-1,0,1,0},dx={0,-1,0,1};
struct __INIT{__INIT(){cin.tie(0);ios::sync_with_stdio(false);cout<<fixed<<setprecision(15);}} __init;
template<class T> bool chmax(T &a, const T &b) { if (a<b) { a=b; return 1; } return 0; }
template<class T> bool chmin(T &a, const T &b) { if (a>b) { a=b; return 1; } return 0; }
template<class T>void debag(const vector<T> &a){cerr<<"debag :";for(auto v:a)cerr<<v<<" ";cerr<<"\n";}
template<class T>void print(const vector<T> &a){for(auto v:a)cout<<v<<" ";cout<<"\n";}
int main(){
    int h,w,n;
    cin>>h>>w>>n;
    int sx,sy,gx,gy;
    cin>>sx>>sy>>gx>>gy;
    sx--;sy--;gx--;gy--;
    V<V<int>> v(h,V<int>(w,-1));
    priority_queue<tuple<int,int,int>> pq;
    for(int i=0;i<n;i++){
        int x,y,k;
        cin>>x>>y>>k;
        --x;--y;
        chmax(v[x][y],k);
        pq.emplace(k,x,y);
    }
    auto check=[&](int x,int y)->bool{
        return (x<0||x>=h||y<0||y>=w);
    };
    while(pq.size()){
        auto[k,x,y]=pq.top();
        pq.pop();
        if(v[x][y]>k)continue;
        if(k>0){
            for(int i=0;i<4;i++){
                int nx=dx[i]+x,ny=dy[i]+y;
                if(check(nx,ny))continue;
                if(chmax(v[nx][ny],k-1)){
                    pq.emplace(k-1,nx,ny);
                }
            }
        }
    }
    queue<pair<int,int>> q;
    V<V<bool>> dp(h,V<bool>(w,false));
    dp[sx][sy]=true; 
    q.emplace(sx,sy);
    while(q.size()){
        auto[x,y]=q.front();
        q.pop();
        for(int i=0;i<4;i++){
            int nx=dx[i]+x,ny=dy[i]+y;
            if(check(nx,ny))continue;
            if(dp[nx][ny]||v[nx][ny]!=-1)continue;
            dp[nx][ny]=true;
            q.emplace(nx,ny);
        }
    }
    cout<<(dp[gx][gy]?"Yes":"No")<<"\n";
}
