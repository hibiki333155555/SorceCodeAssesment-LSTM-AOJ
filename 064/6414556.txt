#include<iostream>
#include<string>
#include<iomanip>
#include<cmath>
#include<vector>
#include<algorithm>
#include<utility>

using namespace std;

#define int long long
#define endl "\n"

constexpr long long INF = 1e18;
constexpr long long MOD = 1000000007; 

struct fast_io {
  fast_io(){
    std::cin.tie(nullptr);
    std::ios::sync_with_stdio(false);
    cout<<fixed<<setprecision(10);
  };
} fio;

signed main(){
  
  int N, M;
  vector<string> S;
  int ans = INF;
  
  cin>>M>>N;
  
  S.resize(M);
  
  for(int i = 0; i < M; i++){
    cin>>S[i];
  }
  
  {
    int o = 0, x = 0;
    int o2 = 0, x2 = 0;
    
    for(int i = 0; i < M; i++){
      o += count(S[i].begin(), S[i].end(), 'o');
      x += count(S[i].begin(), S[i].end(), 'x');
    }
    
    for(int i = M-1; i >= 1; i--){
      o2 += count(S[i].begin(), S[i].end(), 'o');
      x2 += count(S[i].begin(), S[i].end(), 'x');
      
      o -= count(S[i].begin(), S[i].end(), 'o');
      x -= count(S[i].begin(), S[i].end(), 'x');
      
      ans = min(ans, o + x2);
      ans = min(ans, o2 + x);
    }
  }
  
  {
    int o = 0, x = 0;
    int o2 = 0, x2 = 0;
    
    for(int i = 0; i < N; i++){
      for(int j = 0; j < M; j++){
        o += S[j][i] == 'o';
        x += S[j][i] == 'x';
      }
    }
    
    for(int i = N-1; i >= 1; i--){
      for(int j = 0; j < M; j++){
        o2 += S[j][i] == 'o';
        x2 += S[j][i] == 'x';
        
        o -= S[j][i] == 'o';
        x -= S[j][i] == 'x';
      }
      ans = min(ans, o + x2);
      ans = min(ans, o2 + x);
    }
  }
  
  cout<<ans<<endl;
  
  return 0;
}
