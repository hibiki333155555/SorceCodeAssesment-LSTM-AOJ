#include "bits/stdc++.h"
using namespace std;

vector<bool> in_stack;
vector<vector<int>> G;  // Adjacency List
vector<int> st, low, scc, s;
int cnt = 0, k = 0;

void dfs(int u) {
  st[u] = low[u] = ++cnt;
  s.emplace_back(u);
  in_stack[u] = true;
  for (int v : G[u]) {
    if (!st[v]) {
      dfs(v);
      low[u] = min(low[u], low[v]);
    }
    else if (in_stack[v]) {
      low[u] = min(low[u], st[v]);
    }
  }
  if (st[u] == low[u]) {
    ++k;
    for (int x = -1; x != u; s.pop_back()) {
      x = s.back();
      scc[x] = k;
      in_stack[x] = false;
    }
  }
}

int main() {
  int V, E;
  cin >> V >> E;
  in_stack.resize(V), scc.resize(V);
  G.resize(V), st.resize(V), low.resize(V);
  while (E--) {
    int u, v;
    cin >> u >> v;
    G[u].emplace_back(v);
  }
  for (int i = 0; i < V; ++i)
    if (!st[i]) dfs(i);
  int Q;
  cin >> Q;
  while (Q--) {
    int u, v;
    cin >> u >> v;
    cout << (scc[u] == scc[v]) << '\n';
  }
}

