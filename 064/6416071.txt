#include <bits/stdc++.h>
#define rep(i,cc,n) for(int i=cc;i<n;++i)
#define drep(i,cc,n) for(int i=cc;i>=n;--i)
template<class T>bool chmax(T &a, const T &b) { if (a<b) { a=b; return 1; } return 0; }
template<class T>bool chmin(T &a, const T &b) { if (b<a) { a=b; return 1; } return 0; }
const long long INF = 1LL << 60;
const long long  MOD = 1e9 + 7;
long double PI = 3.14159265358979;
typedef long long ll;
using namespace std;

int dx[8] = {1, 0, -1, 0, 1, -1, 1, -1};
int dy[8] = {0, 1, 0, -1, 1, -1, -1, 1};

int c[100][100];
int h, w;

void dfs(vector<vector<bool>> &seen, int x, int y){
    seen[y][x] = true;
    for(int i = 0; i < 8; i++){
        int nx = x + dx[i];
        int ny = y + dy[i];
        if(nx < 0 || ny < 0 || nx >= w || ny >= h) continue;
        if(seen[ny][nx] || c[ny][nx] == 0) continue;
        dfs(seen, nx, ny);
    }
}

int main(){
    ios::sync_with_stdio(0), cin.tie(0), cout.tie(0);

    vector<int> ans; 
    while(1){
        cin >> w >> h;
        if(w == 0 && h == 0) break;
        rep(i,0,h) rep(j,0,w) cin >> c[i][j];

        vector<vector<bool>> seen(h, vector<bool>(w));
        int cnt = 0;
        rep(i,0,h){
            rep(j,0,w){
                if(c[i][j] == 1 && seen[i][j] == false){
                    cnt++;
                    dfs(seen, j, i);
                }
            }
        }
        ans.push_back(cnt);
    }

    for(auto x : ans) cout << x << endl; 
    return 0;        
}
