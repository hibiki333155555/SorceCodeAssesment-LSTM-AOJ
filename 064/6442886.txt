#include <iostream>
#include <complex>
#include <vector>

using namespace std;

complex<double> in()
{
	double x, y;
	cin >> x >> y;
	return {x, y};
}

int main()
{
	int n, q; cin >> n;
	vector<complex<double>> g(n); for (auto& p : g) p = in();
	for (cin >> q; q > 0; --q) {
		complex<double> p = in();
		double maxA = -1e9, minA = 1e9;
		for (int i = 0, j = 1; j < n; ++i, ++j) {
			double t = arg((p - g[i]) / (g[j] - g[i]));
			minA = min(minA, t);
			maxA = max(maxA, t);
		}
		double t = arg((p - g.back()) / (g.front() - g.back()));
		minA = min(minA, t);
		maxA = max(maxA, t);
		cout << (maxA * minA > 0 ? 2 : maxA * minA == 0 ? 1 : 0) << endl;
	}
	return 0;
}

