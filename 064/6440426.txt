"""
最小全域木、Union-Find(クラスカル法、Kruskal Algorithm)
"""
from heapq import heappop,heappush
n,m=map(int,input().split())
G=[i for i in range(n)]
q=[]
for _ in range(m):
    s,t,w=map(int,input().split())
    heappush(q,(w,s,t))

def find(x):
    if x==G[x]:
        return x
    else:
        tmp=find(G[x])
        G[x]=tmp
        return tmp
ans=0
while q:
    w,s,t=heappop(q)
    root_s=find(s)
    root_t=find(t)
    if root_s!=root_t:
        G[root_s]=root_t
        ans+=w
print(ans)
