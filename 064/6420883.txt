

#include <bits/stdc++.h>
#include <iostream>
#include <limits>
#include <numeric>
#include <type_traits>
#include <bitset>
#include <map>
#include <unordered_map>
#include <set>

using namespace std;

#define rep(i,n,m) for(ll (i)=(n);(i)<(m);(i)++)
#define rrep(i,n,m) for(ll (i)=(n);(i)>(m);(i)--)
using ll = long long;
const ll mod = 1000000007;//998244353;
const ll inf = 1e9;
const ll INF = 1e18;


void pline(vector<ll> lis){
    rep(i,0,lis.size()){
        printf ("%lld",lis[i]);
        if (i != lis.size()-1) printf(" ");
        else printf("\n");
    }
}

/*
void pmap(map<ll,mint>& lis){
    for (auto p : lis){
        printf ("%lld:%lld ,",p.first,p.second.val());
    }
    printf ("\n");
}*/

/*
void setxor(set<ll>& a,set<ll>& b){ // a ^= b
    for (ll x : b){
        if (a.count(x) > 0) a.erase(x);
        else a.insert(x);
    }
}

set<ll> setmin(set<ll> a,set<ll> b){

    auto aitr = a.begin();
    auto bitr = b.begin();

    while (aitr != a.end() && bitr != b.end()){
        if (*aitr < *bitr) return a;
        else if (*aitr > *bitr) return b;
        aitr++;
        bitr++;
    }

    if (*aitr == a.end()) return a;
    return b;

}
*/

int main(){

    ios::sync_with_stdio(false);
    std::cin.tie(nullptr);

    //ModFac mf(200000);

    ll N;
    cin >> N;

    vector<vector<ll>> A(N,vector<ll> (N,0));

    map<ll,pair<ll,ll>> dic;

    rep(i,0,N){
        rep(j,0,N){
            cin >> A[i][j];
        }
    }

    rrep(i,N-1,-1){
        rrep(j,N-1,-1){
            //cin >> A[i][j];
            dic[ A[i][j] ] = make_pair(i,j);
        }
    }

    ll Q;
    cin >> Q;
    rep(i,0,Q){
        ll T;
        cin >> T;
        if (dic.count(T) != 0){
            cout << dic[T].first+1 << " " << dic[T].second+1 << '\n';
        }else{
            cout << -1 << '\n';
        }
    }

}

/*

*/
