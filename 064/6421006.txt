#include "bits/stdc++.h"
using namespace std;

typedef string::const_iterator State;
#define eps 1e-8L
#define MAX_MOD 1000000007LL
#define GYAKU 500000004LL
#define MOD 998244353LL
#define pb push_back
#define mp make_pair
typedef long long ll;
typedef long double ld;
#define REP(a, b) for (long long(a) = 0; (a) < (b); ++(a))
#define ALL(x) (x).begin(), (x).end()

#define int long long
vector<string> inputs;
int dp[2][2000][2000];
int removes[2000][2000];
int h, w;
void solve()
{
  cin >> h >> w;
  queue<pair<int, int>> nexts;
  pair<int, int> finals;
  pair<int, int> starts;
  REP(i, h)
  {
    string s;
    cin >> s;
    REP(q, w)
    {
      dp[0][i][q] = 1e9;
      dp[1][i][q] = 1e9;
      removes[i][q] = 1e9;
      if (s[q] == '#')
      {
        removes[i][q] = 0;
      }
      else if (s[q] == 'S')
      {
        dp[0][i][q] = 0;
        nexts.push({i, q});
        starts = {i, q};
      }
      else if (s[q] == 'V')
      {
        finals = {i, q};
      }
    }
  }
  int query;
  cin >> query;
  REP(i, query)
  {
    int a, b, c;
    cin >> a >> b >> c;
    a--;
    b--;
    removes[a][b] = c;
  }
  while (!nexts.empty())
  {
    pair<int, int> now = nexts.front();
    nexts.pop();
    const int dx[4] = {1, -1, 0, 0};
    REP(p, 2)
    {
      REP(t, 4)
      {
        pair<int, int> A = now;
        A.first += dx[t];
        A.second += dx[3 - t];
        if (A != pair<int, int>{-1, -1})
        {
          if (dp[p][now.first][now.second] + 1 < removes[A.first][A.second])
            if (dp[p | (finals == A)][A.first][A.second] == 1e9)
            {
              dp[(p | (finals == A))][A.first][A.second] = dp[p][now.first][now.second] + 1;
              nexts.push(A);
            }
        }
      }
    }
  }
  if (dp[1][starts.first][starts.second] != 1e9)
  {
    cout << "Yes" << endl;
  }
  else
  {
    cout << "No" << endl;
  }
}
#undef int

// generated by oj-template v4.7.2
// (https://github.com/online-judge-tools/template-generator)
int main()
{
  // Fasterize input/output script
  ios::sync_with_stdio(false);
  cin.tie(nullptr);
  cout << fixed << setprecision(100);
  // scanf/printf user should delete this fasterize input/output script

  int t = 1;
  // cin >> t; // comment out if solving multi testcase
  for (int testCase = 1; testCase <= t; ++testCase)
  {
    solve();
  }
  return 0;
}

