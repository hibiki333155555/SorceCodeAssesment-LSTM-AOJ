import sys
sys.setrecursionlimit(500000)


def dfs(g, visited, i, j, h, w):
    if visited[i][j] == 1:
        return g, visited

    visited[i][j] = 1

    for di in -1, 0, 1:
        for dj in -1, 0, 1:
            ci = i + di
            cj = j + dj

            if not (0 <= ci < h and 0 <= cj < w):
                continue

            if visited[ci][cj]:
                continue

            if g[ci][cj] == 1:
                g, visited = dfs(g, visited, ci, cj, h, w)

    return g, visited


while(True):
    w, h = map(int, input().split())
    if w == 0 and h == 0:
        break

    g = [tuple(map(int, input().split())) for _ in range(h)]

    visited = [[0] * w for _ in range(h)]
    ans = 0

    for i in range(h):
        for j in range(w):
            if g[i][j] == 1 and not visited[i][j]:
                g, visited = dfs(g, visited, i, j, h, w)
                ans += 1

    print(ans)

