class Card:
    def __init__(self, card):
        self.card = card 
        self.suit = card[0]
        self.value = int(card[1])
        
    
    def show(self):
        print(self.card, end=' ')
  
        

def stable(before, after, N):
    idx = {}
    for i, c in enumerate(before):
        idx[c.card] = i 
    
    stable = True 
    for i in range(N-1):
        for j in range(i+1, N):
            c1 = after[i]
            c2 = after[j]
            if c1.value == c2.value and idx[c1.card] > idx[c2.card]:
                stable = False
    return stable 

        
def bubbleSort(A, N):
    flag = 1
    res = A.copy()
    while flag:
        flag = 0
        for j in range(N-1, 0, -1):
            if res[j].value < res[j-1].value:
                res[j], res[j-1] = res[j-1], res[j]
                flag = 1
  
    for card in res:
        card.show()
    print()
    
    if stable(A, res, N):
        print('Stable')
    else:
        print('Not Stable')
        
        
def selectionSort(A, N):
    res = A.copy()
    for i in range(N):
        minj = i
        for j in range(i, N):
            if res[j].value < res[minj].value:
                minj = j
        res[i], res[minj] = res[minj], res[i]
    
    for card in res:
        card.show()
    print()
    
    if stable(A, res, N):
        print('Stable')
    else:
        print('Not Stable')
 
              
N = int(input())
C = [Card(s) for s in input().split()]
bubbleSort(C, N)
selectionSort(C, N)
