#include<iostream>
#include<string>
#include<vector>
#include<queue>
#include<algorithm>

#define rep(i,N) for(int i=0;i<(N);i++)
#define rrep(i,N) for(int i=(N)-1;i>=0;i--)
#define For(i,a,b) for(int i=(a);i<(b);i++)
#define all(s) s.begin(),s.end()
#define INF 1LL<<60

using namespace std;

template<class T>
bool chmax(T & a, T b) {
	if (a < b) {
		a = b;
		return true;
	}
	return false;
}

int N, M;
vector<vector<int>> G, W;
vector<int> deg;//各ノードの入次数
int dp[100001];

int func(int i) {
	

	int res = 0;
	
	for(auto nv:G[i]) {
		chmax(res, func(nv) + W[i][nv]);
	}
	return res;
}

int main(void) {
	cin >> N >> M;
	G.assign(N, vector<int>());
	W.assign(N, vector<int>(N,0));
	deg.assign(N, 0);

	rep(i, M) {
		int x, y, d;
		cin >> x >> y >> d;
		
		G[x].push_back(y);
		W[x][y] = d;
		deg[y]++;
	}

	queue<int> que;
	rep(v, N)if (deg[v] == 0)que.push(v);

	while (!que.empty()) {
		int v = que.front();

		que.pop();

		for (auto nv : G[v]) {
			que.push(nv);
			chmax(dp[nv], dp[v] + W[v][nv]);
			
		}

	}

	cout << *max_element(dp, dp + N) << endl;
	
	
	return 0;
}
