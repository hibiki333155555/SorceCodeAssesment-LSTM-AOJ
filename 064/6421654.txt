def mul_perm(perm1, perm2):
    return [perm1[perm2[i]] for i in range(len(perm1))]


def pow_perm(perm, e):
    tmp = perm.copy()
    ret = list(range(len(perm)))
    while e:
        if e & 1:
            ret = mul_perm(ret, tmp)
        e >>= 1
        tmp = mul_perm(tmp, tmp)
    return ret


N = int(input())
As = list(map(int, input().split()))

stack = []
stack_perm = list(range(N))
cur_perm = list(range(N))
Q = int(input())
for _ in range(Q):
    t, *q = map(int, input().split())
    if t == 1:
        x, y = q
        x -= 1
        y -= 1
        stack.append((x, y))
        stack_perm[x], stack_perm[y] = stack_perm[y], stack_perm[x]
    if t == 2:
        x, y = stack.pop()
        stack_perm[x], stack_perm[y] = stack_perm[y], stack_perm[x]
    if t == 3:
        k, = q
        cur_perm = mul_perm(cur_perm, pow_perm(stack_perm, k))


Bs = [-1] * N
for i, ci in enumerate(cur_perm):
    Bs[i] = As[ci]
print(*Bs)

