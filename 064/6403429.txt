#pragma GCC target("avx2")
#pragma GCC optimize("O3")
#pragma GCC optimize("unroll-loops")
#include<bits/stdc++.h> 
using namespace std;
using ll=long long;
using P=pair<ll,ll>;
template<class T> using V=vector<T>; 
#define fi first
#define se second
#define all(v) (v).begin(),(v).end()
const ll inf=(1e18);
const ll mod=998244353;
// const ll mod=1000000007;
const vector<int> dy={-1,0,1,0},dx={0,-1,0,1};
struct __INIT{__INIT(){cin.tie(0);ios::sync_with_stdio(false);cout<<fixed<<setprecision(15);}} __init;
template<class T> bool chmax(T &a, const T &b) { if (a<b) { a=b; return 1; } return 0; }
template<class T> bool chmin(T &a, const T &b) { if (a>b) { a=b; return 1; } return 0; }
template<class T>void debag(const vector<T> &a){cerr<<"debag :";for(auto v:a)cerr<<v<<" ";cerr<<"\n";}
template<class T>void print(const vector<T> &a){for(auto v:a)cout<<v<<" ";cout<<"\n";}
int main(){
    int n;
    cin>>n;
    V<bool> ok(200*1000+5,false);
    ok[0]=true;
    int sum=0;
    for(int i=0;i<n;i++){
        int a;cin>>a;
        for(int i=200*1000+5-1-a;i>=0;i--){
            if(ok[i])ok[i+a]=true;
        }
        sum+=a;
    }
    int ans=INT_MAX;
    for(int i=0;i<200*1000+5;i++){
        if(ok[i]){
            chmin(ans,abs((sum-i)-i));
        }
    }
    cout<<ans<<"\n";
}

