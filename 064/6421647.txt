#include<bits/stdc++.h>
/*
#include<atcoder/all>
using namespace atcoder;
//using mint = modint1000000007;
using mint = modint998244353;
*/
//g++ -I/opt/ac-library ./**.cpp
using namespace std;
using ll = long long;
using ull = unsigned long long;
//const long long MOD = 1000000007;
const long long MOD = 998244353;
const long double PI = 3.14159265358979;
const long long INF = 1LL<<60;
template <typename T> bool chmax(T &a, const T& b){if(a < b){a = b;return true;}return false;}
template <typename T> bool chmin(T &a, const T& b){if(a > b){a = b;return true;}return false;}
#define deb(var) do{cout << #var << " : "; view(var);}while(0)
template<typename T> void view(T e){cout << e << endl;}
void view(vector<string>& v){cout << endl;for(auto& s :v){view(s);}cout << endl;}
template<typename T> void view(vector<T>& v){for(auto& e :v){cout << e << " ";}cout << endl;}
template<typename T> void view(vector<vector<T>>& vv){cout << endl;for(auto& v:vv){view(v);}}
ll gcd(ll a, ll b){if (b == 0) return a;else return gcd(b, a % b);}
ll lcm(ll x,ll y){return ll(x/gcd(x,y))*y;}
template<typename T> using min_priority_queue = priority_queue<T, vector<T>, greater<T>>;
#define all(x) x.begin(), x.end()
#define rall(x) x.rbegin(), x.rend()
#define int long long


int32_t main() {
    int n; cin >> n;
    vector<int> a(n);
    for (int i=0; i<n; i++) {
        cin >> a[i];
    }
    int q; cin >> q;
    vector<int> T(q), X(q), Y(q);
    for (int i=0; i<q; i++) {
        cin >> T[i];
        if (T[i] == 1) cin >> X[i] >> Y[i];
        else if (T[i] == 3) cin >> X[i];
    }
    int mx = 30;
    vector<vector<int>> nxt(mx + 1, vector<int> (n));
    for (int i=0; i<n; i++) {
        nxt[0][i] = i;
    }
    stack<pair<int,int>> st;
    for (int query=0; query<q; query++) {
        int t = T[query];
        if (t == 1) {
            int x = X[query] - 1;
            int y = Y[query] - 1;
            st.push({x, y});
            swap(nxt[0][x], nxt[0][y]);
        }
        else if (t == 2) {
            auto [x, y] = st.top();
            st.pop();
            swap(nxt[0][x], nxt[0][y]);
        }
        else {
            int k = X[query];
            for (int i=0; i<mx; i++) {
                for (int j=0; j<n; j++) {
                    nxt[i + 1][j] = nxt[i][nxt[i][j]];
                }
            }
            vector<int> I(n);
            for (int i=0; i<n; i++) {
                I[i] = i;
            }
            for (int i=0; i<=mx; i++) {
                if (!(k & 1<<i)) continue;
                for (int j=0; j<n; j++) {
                    I[j] = nxt[i][I[j]];
                }
            }
            vector<int> b(n);
            for (int i=0; i<n; i++) {
                b[i] = a[I[i]];
            }
            a = b;
        }
    }
    for (int i=0; i<n; i++) {
        cout << a[i] << " ";
    }
    cout << endl;
}
