#include <iostream>
#include <complex>

using namespace std;

complex<double> in()
{
	double x, y;
	cin >> x >> y;
	return {x, y};
}

int main()
{
	int q;
	for (cin >> q; q > 0; --q) {
		complex<double> p0 = in(), p1 = in(), p2 = in(), p3 = in();
		auto p01 = p1 - p0, p02 = (p2 - p0) / p01, p03 = (p3 - p0) / p01;
		auto p23 = p3 - p2, p20 = (p0 - p2) / p23, p21 = (p1 - p2) / p23;
		auto i23 = p02.imag() * p03.imag(), i01 = p20.imag() * p21.imag();
		if (i23 > 0 || i01 > 0) {
			cout << 0 << endl;
		} else if (i23 < 0 && i01 < 0) {
			cout << 1 << endl;
		} else if (arg(p02) == 0 && abs(p02) <= 1) {
			cout << 1 << endl;
		} else if (arg(p03) == 0 && abs(p03) <= 1) {
			cout << 1 << endl;
		} else if (arg(p20) == 0 && abs(p20) <= 1) {
			cout << 1 << endl;
		} else if (arg(p21) == 0 && abs(p21) <= 1) {
			cout << 1 << endl;
		} else {
			cout << 0 << endl;
		}
	}
	return 0;
}

