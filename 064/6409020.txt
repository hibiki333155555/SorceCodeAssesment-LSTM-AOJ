#include<iostream>
#include<cmath>
#include<queue>
#include<iomanip>
#include<algorithm>
#include<string.h>
using namespace std;
typedef long long ll;
const long long ll_inf=0x3f3f3f3f3f3f3f3f;
const int inf=0x3f3f3f3f;
const double pi=acos(-1.0);
const int Mod=1e9+7;
const int Max=1005;
//cout<<setw(8)<<fixed<<setprecision(3);这是四舍五入
//printf("%.2f\n",double((int)(r*100))/100);这是保留小数点 
//ios::sync_with_stdio(0);cin.tie(0);cout.tie(0);
int M,N,n,sx,sy;
char Map[Max][Max];
int vis[Max][Max];
int dx[]={0,0,1,-1};
int dy[]={1,-1,0,0};
struct node{
	int x,y,step;
    node(int xx,int yy,int s):x(xx),y(yy),step(s){}
};
int bfs(int a){
	int ans;
	memset(vis,0,sizeof(vis));
	queue<node>q;
	q.push(node(sx,sy,0));
	vis[sx][sy]=1;
	while(!q.empty()){
		node s=q.front();
		q.pop();
		if(Map[s.x][s.y]==a+'0'){
			sx=s.x;
			sy=s.y;
			ans=s.step;
			break;
		}
		for(int i=0;i<4;++i){
			int x1=s.x+dx[i];
			int y1=s.y+dy[i];
			if(0<=x1&&x1<M&&0<=y1&&y1<N&&Map[x1][y1]!='X'&&!vis[x1][y1]){
				vis[x1][y1]=1;
				q.push(node(x1,y1,s.step+1));
			}
		}
	}
	return ans;
}
int main(){
	cin>>M>>N>>n;
	for(int i=0;i<M;++i){
		for(int j=0;j<N;++j){
			cin>>Map[i][j];
			if(Map[i][j]=='S'){
				sx=i,sy=j;
			}
		}
	}
	int res=0;
	for(int i=1;i<=n;++i){
		res+=bfs(i);
	}
	cout<<res<<'\n';
}
