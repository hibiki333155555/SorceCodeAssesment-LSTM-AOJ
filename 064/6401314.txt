#include<stdio.h>
#include<iostream>
#include<string>
#include<vector>
using namespace std;

//void transfer(vector <vector<int> >& a,vector <vector<int> >& b, int n,int* num){
//    int q=0;
//    for(int i=0;i<n;i++){
//        for(int j=0;j<num[i];j++){
//            q=a[i][j];
//            if(q>0){
//                b[i][q-1]=1;
//            }
//        }
//    }
//}

int initial(vector <vector<int> >& b,int n){
    vector<int> temp;
    for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
                temp.push_back(0);
            }
            b.push_back(temp);
            temp.clear();
    }
    return 0;
}

int dFS(vector <vector<int> >& a,vector <vector<int> >& b, int n,int* num,int* visit,int i,int time){
    visit[i]=1;
    b[i][1]=time+1;
    time++;
    for(int j=0;j<num[i];j++){
        int q=a[i][j];
        if(visit[q-1]==0){
            time=dFS(a,b,n,num,visit,q-1,time);
        }
    }
    visit[i]=2;
    b[i][2]=time+1;
    time++;
}

void depthFirstSearch(vector <vector<int> >& a,vector <vector<int> >& b, int n,int* num){
    int visit[100];
    for(int i=0;i<n;i++){
        visit[i]=0;
    }
    int time=0;
    for(int i=0;i<n;i++){
        b[i][0]=i+1;
        if(visit[i]==0){
            time=dFS(a,b,n,num,visit,i,time);
        }
    }
}


int main() {
	string operation;
	int n,num[101],row,temp;
	vector< vector<int> > a,b;
	vector<int> temp1;
	a.clear();
    cin>>n;
    for(int i=0;i<n;i++){
        cin>>row;
        cin>>num[i];
        for(int j=0;j<num[i];j++){
            cin>>temp;
            temp1.push_back(temp);
        }
        a.push_back(temp1);
        temp1.clear();
    }
    initial(b,n);

    //transfer(a,b,n,num);
    depthFirstSearch(a,b,n,num);

    for(int i=0;i<n;i++){
        for(int j=0;j<3;j++){
            if(j==2){
                printf("%d",b[i][j]);
            }
            else{
                printf("%d ",b[i][j]);
            }
        }
        printf("\n");
    }
}
