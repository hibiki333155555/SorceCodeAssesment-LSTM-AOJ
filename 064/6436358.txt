use std::io::Read;

fn main() {
    let mut input = String::new();
    std::io::stdin().read_to_string(&mut input).expect("failed to read input");
    let mut v = input.lines().skip(1).collect::<String>().split(' ').map(|e| 
        e.parse::<i64>().expect("invalid number")
    ).collect::<Vec<_>>();
    let cnt = selection_sort(&mut v);
    v.iter().enumerate().for_each(|(i,e)| {
        if i != 0 {print!(" ")}
        print!("{}", e)
    });
    println!("\n{}",cnt);
}

fn selection_sort<T:PartialOrd> (v :&mut Vec<T>) -> i64 {
    let mut cnt = 0i64;
    for i in 0..v.len() {
        let mut minj = i;
        for j in i..v.len() {
            if v[j] < v[minj] {minj = j}
        }
        if i != minj {
            v.swap(i, minj);
            cnt += 1;
        }
    }
    cnt
}

