#include<cstdio>
#include<iostream>
#include<algorithm>
#include<vector>
using namespace std;

#define N 100010
int n, q, u, v, k[N], temp, root;
int dp[N], pre[N][30], vis[N];
vector<int> mp[N];

void dfs(int v, int dep) {
	dp[v] = dep;
	if (k[v]) {
		for (int i = 0; i < k[v]; ++i) {
			dfs(mp[v][i], dep + 1);
		}
	}
	return;
}

void make_pre(void) {
	for (int i = 0; i < n; ++i) {
		for (int j = 1; j < 20; ++j) {
			pre[i][j] = pre[pre[i][j - 1]][j - 1];
			if (pre[i][j] == 0) break;
		}
	}
}

int LCA(int a, int b) {
	if (dp[a] < dp[b]) swap(a, b);
	if (dp[a] != dp[b]) {
		for (int i = 20; ~i; --i) {
			if (pre[a][i] != 0 && dp[pre[a][i]] >= dp[b])
				a = pre[a][i];
			if (dp[a] == dp[b]) break;
		}
	}
	if (a == b) return a;
	if (pre[a][1] != pre[b][1]) {
		for (int i = 20; ~i; --i) {
			if (pre[a][i] != pre[b][i])
				a = pre[a][i], b = pre[b][i];
			if (pre[a][1] == pre[b][1]) break;
		}
	}
	return pre[a][1];
}

int main() {
//	freopen("123.txt", "w", stdout);
	scanf("%d", &n);
	for (int i = 0; i < n; ++i) {
		scanf("%d", &k[i]);
		for (int j = 0; j < k[i]; ++j) {
			scanf("%d", &temp);
			vis[temp] = 1;
			mp[i].push_back(temp);
			//	pre[temp] = max(pre[temp], i);
			pre[temp][0] = i;
		}
	}
	make_pre();
	for (int i = 0; i < n; ++i) {
		if (!vis[i]) {
			dfs(i, 0);
			break;
		}
	}
	scanf("%d", &q);
	while (q--) {
		scanf("%d%d", &u, &v);
		printf("%d\n", LCA(u, v));
	}
	return 0;
}
