#include <iostream>
#include <cstdio>
#include <algorithm>
using namespace std;
const int maxx = 2000000;

int A[maxx + 1];
int n;
void maxHeapify(int i) {

    int left = 2 * i, right = 2 * i + 1;
    int largest;

    // 隞椰摮??嫘頨怒摮??寥?潭?憭抒?蝏嚗?誧蝏剖?銝?
    if (left <= n && A[left] > A[i])
        largest = left;
    else
        largest = i;

    if (right <= n && A[right] > A[largest])
        largest = right;

    if (largest != i) {
        swap(A[i], A[largest]);
        maxHeapify(largest);
    }

}
int main()
{
    scanf("%d", &n);
    for (int i = 1; i <= n; i++)
        scanf("%d", &A[i]);
    //此時A[i]是complete binry tree，不是max heap tree
		//並沒有用到maxHeap.h中的initialize 
//    printf("Before maxHeapify---------------------------\n");
//    for (int i = 1; i <= n; i++)
//        printf(" %d", A[i]);
//    printf("\n");
    
    for (int i = n / 2; i >= 1; i--)
        maxHeapify(i);
//    printf("After maxHeapify---------------------------\n");
    for (int i = 1; i <= n; i++)
        printf("%d", A[i]);
    printf("\n");
    return 0;
}
