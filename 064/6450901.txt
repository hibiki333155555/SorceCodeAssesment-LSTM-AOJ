#include<bits/stdc++.h>
using namespace std;
#include <unordered_set>
#include <random>
#define int long long
#define REP(i,m,n) for(int i=(m);i<(n);i++)
#define rep(i,n) REP(i,0,n)
#define pb push_back
#define all(a) a.begin(),a.end()
#define rall(c) (c).rbegin(),(c).rend()
#define mp make_pair
#define endl '\n'
//#define vec vector<ll>
//#define mat vector<vector<ll> >
#define fi first
#define se second
#define double long double
typedef long long ll;
typedef unsigned long long ull;
typedef pair<ll,ll> pll;
//typedef long double ld;
typedef complex<double> Complex;
const ll INF=1e9+7;
const ll MOD=998244353;
const ll inf=INF*INF;
const ll mod=MOD;
const ll MAX=200010;
const double PI=acos(-1.0);
typedef vector<vector<ll> > mat;
typedef vector<ll> vec;



void solve(){
    ll n,m;cin>>n>>m;
    vector<ll>a(n),b(n),c(n);
    vector<ll>r(m+1);
    rep(i,n){
        cin>>a[i]>>b[i]>>c[i];
        b[i]--;
        c[i]--;
        r[b[i]]+=a[i];
        r[c[i]+1]-=a[i];
    }
    REP(i,1,m+1){
        r[i]+=r[i-1];
    }
    ll q;cin>>q;
    vector<ll>s(m+1);
    rep(i,q){
        ll d,e;cin>>d>>e;
        e--;
        s[e]+=d;
    }
    priority_queue<ll>pq;
    vector<vector<ll> >g(m+1);
    rep(i,n){
        g[b[i]].pb(c[i]);
    }
    ll ans=0;
    vector<ll>add(m+1);
    rep(i,m+1){
        while(!pq.empty()){
            if(pq.top()<i){
                pq.pop();
            }else{
                break;
            }
        }
        for(auto e:g[i])pq.push(e);
        if(i)add[i]+=add[i-1];
        if(add[i]+r[i]>=s[i])continue;
        if(pq.empty()){
            cout<<-1<<endl;
            return;
        }
        ll k=pq.top();
        ll tmp=s[i]-r[i]-add[i];
        add[i]+=tmp;
        add[k+1]-=tmp;
        ans+=tmp;
    }
    cout<<ans<<endl;
}

signed main(){
    cin.tie(0);
    ios::sync_with_stdio(false);
    solve();
}
