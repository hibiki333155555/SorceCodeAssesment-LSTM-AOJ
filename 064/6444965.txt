#include<iostream>
#include<queue>
#include<cstring>
#include<stdio.h>
using namespace std;
const int N=1010; 
int h,w,n;

char g[N][N];
int dist[N][N];
int x[10],y[10];
int x1,y1;
int res=0,cnt=0;
struct node{
	int x,y;
};
int dx[]={0,1,0,-1};
int dy[]={1,0,-1,0};
int bfs()
{
	
	while(cnt!=n)
	{
		queue<node> q;
		memset(dist,-1,sizeof dist);
		q.push({x1,y1});
		dist[x1][y1]=0;
		while(q.size())
		{
			struct node t=q.front();
			q.pop();
			dist[x1][y1]=0;
			for(int i=0;i<4;i++)
			{
				int xx=t.x+dx[i],yy=t.y+dy[i];
				if(xx>=1&&xx<=h&&yy>=1&&yy<=w&&dist[xx][yy]==-1&&g[xx][yy]!='X')
				{
					q.push({xx,yy});
					dist[xx][yy]=dist[t.x][t.y]+1;
					if(xx==x[cnt+1]&&yy==y[cnt+1])
					{
						res+=dist[x[cnt+1]][y[cnt+1]];
						cnt+=1;
						x1=x[cnt],y1=y[cnt];
					}	
				} 	
			}
		}
	}
	return res;
}
int main()
{
	cin>>h>>w>>n;
	getchar();
	for(int i=1;i<=h;i++)
	{
		for(int j=1;j<=w;j++)
		{
			cin>>g[i][j];
			if(g[i][j]=='S')
			x1=i,y1=j;
			if(g[i][j]>='1'&&g[i][j]<='9')
			{
				x[g[i][j]-'0']=i,y[g[i][j]-'0']=j;
			}
		}
		getchar();
	}
	int t=bfs();
	printf("%d\n",t);
	return 0;
} 
