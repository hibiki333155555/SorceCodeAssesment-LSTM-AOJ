#!usr/bin/env python3
from collections import defaultdict, deque
from heapq import heappush, heappop
from itertools import permutations, accumulate
import sys
import math
import bisect
def LI(): return [int(x) for x in sys.stdin.readline().split()]
def I(): return int(sys.stdin.readline())
def IR(n):
    return [I() for _ in range(n)]
def LIR(n):
    return [LI() for _ in range(n)]

sys.setrecursionlimit(1000000)
mod = 1000000007

def main():
    a = ord("a")
    z = ord("z")
    rotate = lambda x, y: chr(a+((ord(x)-a+y)%26))

    s = input()
    num = 0
    cum_num = 0
    stack = []
    ans = []
    for i in s:
        if i.isdecimal():
            num *= 10
            num += int(i)
        elif i == "(":
            stack.append(num)
            cum_num += num
            num = 0
        elif i == ")":
            cum_num -= stack.pop()
            num = 0
        else:
            ans.append(rotate(i,cum_num))
    print(*ans,sep="")
    return


if __name__ == "__main__":
    main()

