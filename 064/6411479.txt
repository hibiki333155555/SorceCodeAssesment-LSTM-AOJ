#include<iostream>
#include<algorithm>
#include<vector>
#include<cmath>
#include<set>

using namespace std;

using graph = vector<vector<int>>;

using ll=long long;

ll h[500001]={};

int a=1;

void max_heap(int i){
    
    if(i==1) return;
    if(h[i]>h[i/2]){
        int tmp=h[i];
        h[i]=h[i/2];
        h[i/2]=tmp;
    }
    max_heap(i/2);
}

int num=1;

void max_heap2(int b){
    if(b>=num-1) return;
    int large=b;
    if(b<num&&h[large]<h[b*2]) large= b*2;
    if(b<num&&h[large]<h[b*2+1]) large= b*2+1;

    if(large!=b){
        int tmp=h[b];
        h[b]=h[large];
        h[large]=tmp;
    }

    max_heap2(large);
}

void insert(ll k){

    h[num]=k;
    max_heap(num);
}


int main(void){
    
    string s;

    while(s[2]!='d'){
        cin>>s;
        if(s[0]=='i'){
            ll k;
            cin>>k;
            insert(k);

            
            
            num++;
        }
        if(s[1]=='x'){
            cout<<h[1]<<endl;
            
            h[1]=h[num-1];
            num--;
            max_heap2(1);
        }
    }

    return 0;
}
