import io
import sys
from collections import deque
_INPUT = """\
10
8 5 9 2 6 3 7 1 10 4
"""
# sys.stdin = io.StringIO(_INPUT)


def merge(A, L, M, R):
    global cnt
    L_ary = []
    R_ary = []
    for i in range(L, M):
        L_ary.append(A[i])
    L_ary.append(float('inf'))
    for i in range(M, R):
        R_ary.append(A[i])
    R_ary.append(float('inf'))
    L_idx = 0
    R_idx = 0
    for i in range(L, R):
        cnt += 1
        if L_ary[L_idx] <= R_ary[R_idx]:
            A[i] = L_ary[L_idx]
            L_idx += 1
        else:
            A[i] = R_ary[R_idx]
            R_idx += 1


# A = [1, 3, 5, 2, 4, 6]
# L = 0
# R = len(A)
# M = (L+R)//2
# merge(A, L, M, R)


def mergeSort(A, L, R):
    if L + 1 < R:
        mid = (L+R)//2
        mergeSort(A, L, mid)
        mergeSort(A, mid, R)
        merge(A, L, mid, R)


cnt = 0
n = int(input())
A = list(map(int, input().split()))

mergeSort(A, 0, len(A))
print(*A)
print(cnt)

