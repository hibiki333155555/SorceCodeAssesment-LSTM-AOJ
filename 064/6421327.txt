#include "bits/stdc++.h"
using namespace std;

typedef string::const_iterator State;
#define eps 1e-8L
#define MAX_MOD 1000000007LL
#define GYAKU 500000004LL
#define MOD 998244353LL
#define pb push_back
#define mp make_pair
typedef long long ll;
typedef long double ld;
#define REP(a, b) for (long long(a) = 0; (a) < (b); ++(a))
#define ALL(x) (x).begin(), (x).end()

#define int ll
int comber[30][2000];
void solve()
{
  int n;
  cin >> n;
  vector<int> inputs;
  vector<int> tmps;
  REP(i, n)
  {
    int a;
    cin >> a;
    inputs.push_back(a);
    tmps.push_back(i);
  }
  int query;
  cin >> query;
  stack<pair<int, int>> nexts;
  REP(i, query)
  {
    int types;
    cin >> types;
    if (types == 1)
    {
      int x, y;
      cin >> x >> y;
      x--;
      y--;
      swap(tmps[x], tmps[y]);
      nexts.push({x, y});
    }
    else if (types == 2)
    {
      pair<int, int> now = nexts.top();
      nexts.pop();
      swap(tmps[now.first], tmps[now.second]);
    }
    else
    {
      int k;
      cin >> k;
      REP(q, n)
      {
        comber[0][tmps[q]] = q;
      }
      for (int i = 1; i < 28; ++i)
      {
        REP(q, n)
        {
          comber[i][q] = comber[i - 1][comber[i - 1][q]];
        }
      }
      REP(i,30){
        if((1LL << i) & k){
          vector<int> next_go = inputs;
          REP(q,n){
            next_go[comber[i][q]] = inputs[q];
          }
          inputs = next_go;
        }
      }
    }
  }
  REP(i, inputs.size())
  {
    if (i)
      cout << " ";
    cout << inputs[i];
  }
  cout << endl;
}
#undef int

// generated by oj-template v4.7.2
// (https://github.com/online-judge-tools/template-generator)
int main()
{
  // Fasterize input/output script
  ios::sync_with_stdio(false);
  cin.tie(nullptr);
  cout << fixed << setprecision(100);
  // scanf/printf user should delete this fasterize input/output script

  int t = 1;
  // cin >> t; // comment out if solving multi testcase
  for (int testCase = 1; testCase <= t; ++testCase)
  {
    solve();
  }
  return 0;
}

