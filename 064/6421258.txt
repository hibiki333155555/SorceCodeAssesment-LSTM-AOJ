#include<bits/stdc++.h>
using namespace std;
#include <unordered_set>
#include <random>
#define int long long
#define REP(i,m,n) for(int i=(m);i<(n);i++)
#define rep(i,n) REP(i,0,n)
#define pb push_back
#define all(a) a.begin(),a.end()
#define rall(c) (c).rbegin(),(c).rend()
#define mp make_pair
#define endl '\n'
//#define vec vector<ll>
//#define mat vector<vector<ll> >
#define fi first
#define se second
#define double long double
typedef long long ll;
typedef unsigned long long ull;
typedef pair<ll,ll> pll;
//typedef long double ld;
typedef complex<double> Complex;
const ll INF=1e9+7;
const ll MOD=998244353;
const ll inf=INF*INF;
const ll mod=MOD;
const ll MAX=200010;
const double PI=acos(-1.0);
typedef vector<vector<ll> > mat;
typedef vector<ll> vec;



ll dx[]={0,1,0,-1};
ll dy[]={1,0,-1,0};

void solve(){
    ll h,w;cin>>h>>w;
    vector<string> g(h);
    rep(i,h)cin>>g[i];
    ll m;cin>>m;
    vector<vector<ll> >u(h,vector<ll>(w,inf));
    vector<ll>a(m),b(m),t(m);
    rep(i,m){
        cin>>a[i]>>b[i]>>t[i];
        a[i]--;b[i]--;
        u[a[i]][b[i]]=t[i];
    }
    //iki
    queue<pll>q;
    vector<vector<ll> >d(h,vector<ll>(w,inf));
    rep(i,h){
        rep(j,w){
            if(g[i][j]=='S'){
                d[i][j]=0;
                q.push(mp(i,j));
            }
        }
    }
    while(!q.empty()){
        pll k=q.front();
        q.pop();
        ll x=k.fi,y=k.se;
        rep(l,4){
            ll nx=x+dx[l],ny=y+dy[l];
            if(nx<0||nx>=h||ny<0||ny>=w||g[nx][ny]=='#'||d[x][y]+1>=u[nx][ny]||d[nx][ny]<inf)continue;
            d[nx][ny]=d[x][y]+1;
            q.push(mp(nx,ny));
        }
    }
    ll iki;
    rep(i,h){
        rep(j,w){
            if(g[i][j]=='V'){
                iki=d[i][j];
            }
        }
    }
    if(iki==inf){
        cout<<"No"<<endl;
        return;
    }
    //kaeri
    vector<vector<ll> >dd(h,vector<ll>(w,inf));
    rep(i,h){
        rep(j,w){
            if(g[i][j]=='V'){
                dd[i][j]=iki;
                q.push(mp(i,j));
            }
        }
    }
    while(!q.empty()){
        pll k=q.front();
        q.pop();
        ll x=k.fi,y=k.se;
        rep(l,4){
            ll nx=x+dx[l],ny=y+dy[l];
            if(nx<0||nx>=h||ny<0||ny>=w||g[nx][ny]=='#'||dd[x][y]+1>=u[nx][ny]||dd[nx][ny]<inf)continue;
            dd[nx][ny]=dd[x][y]+1;
            q.push(mp(nx,ny));
        }
    }
    ll kaeri;
    rep(i,h){
        rep(j,w){
            if(g[i][j]=='S')kaeri=dd[i][j];
        }
    }
    if(kaeri==inf){
        cout<<"No"<<endl;
        return;
    }
    cout<<"Yes"<<endl;
}

signed main(){
    cin.tie(0);
    ios::sync_with_stdio(false);
    solve();
}
