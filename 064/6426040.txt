#include <iostream>
#include <vector>
#include <string>
#include <algorithm>
using namespace std;

int len;

vector<string> suffixArray;

int contain(string s)
{
    int l = 0, r = len - 1;
    while (l<=r)
    {
        int mid = (l+r)/2;
        if(suffixArray[mid].compare(0, s.size(), s)==0)
            return 1;
            else if(suffixArray[mid]<s)
            {
                l = mid +1;
            }
            else
            {
                r = mid - 1;
            }

    }
    return 0;
}

signed main()
{
    string t, s;
    cin >> t;
    len = t.size();
    for (size_t i = 0; i < len; i++)
    {
        suffixArray.push_back(t.substr(i));
    }
    sort(suffixArray.begin(), suffixArray.end());
    // for (auto i:suffixArray)
    // {
    //     cout << i << endl;
    // }
    
    int q;
    cin >> q;
    for (size_t i = 0; i < q; i++)
    {
        cin >> s;
        cout << contain(s) <<endl;
    }
    return 0;
}

