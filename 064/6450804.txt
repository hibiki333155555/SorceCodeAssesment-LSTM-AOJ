#include <bits/stdc++.h>
#define rep(i,n) for(int i = 0; i < (int)(n); i++)

using namespace std;
using LL = long long;
using P = pair<int,int>;
using vv = vector<vector<int>>;
const int INF = (int)1e9;
const LL LINF = (LL)1e18;

void ans(int n1, int n2, int n3, int n4){
	cout << n1 << " " << n2 << " " << n3 << " " << n4 << endl;
}

void solve(){
	int N, S;
	cin >> N >> S;
	vv A(N, vector<int>(4));
	int edge = 0;
	bool one = false;
	rep(i,N){
		int cnt = 0;
		rep(j,4){
			cin >> A[i][j];
			if(A[i][j] == 1) cnt++;
			A[i][j] %= 3;
			A[i][j]--;
		}
		if(cnt == 2) edge++;
		else if(cnt == 3) edge += 2;
		if(A[i][0] == 0 and A[i][2] == 0) one = true;
	}
	int sum = 0;
	rep(i,N){
		rep(j,4) sum += A[i][j];
	}
	if(edge == 2){
		if(sum < 0) ans(1, 1, 1, 2);
		else ans(1, 1, 1, 3);
		return;
	}
	if(sum == -4){
		ans(2, 2, 2, 2);
	}
	else if(sum == -3){
		ans(1, 2, 2, 2);
	}
	else if(sum == -2){
		if(S == 0){
			if(edge == 4) ans(2, 2, 2, 3);
			else ans(1, 1, 2, 2);
		}
		else{
			ans(1, 2, 1, 2);
		}
	}
	else if(sum == -1){
		if(edge == 4){

		}
		else ans(1, 1, 1, 2);
	}
	else if(sum == 0){
		if(S == 0){
			if(one) ans(1, 2, 1, 3);
			else{
				if(edge == 4) ans(2, 2, 3, 3);
				else ans(1, 1, 2, 3);
			}
		}
		else ans(2, 3, 2, 3);
	}
	else if(sum == 1){
		if(edge == 4){

		}
		else ans(1, 1, 1, 3);
	}
	else if(sum == 2){
		if(S == 0){
			if(edge == 4) ans(2, 3, 3, 3);
			else ans(1, 1, 3, 3);
		}
		else{
			ans(1, 3, 1, 3);
		}
	}
	else if(sum == 3){
		ans(1, 3, 3, 3);
	}
	else ans(3, 3, 3, 3);
}

int main(){
	int T;
	cin >> T;
	while(T--){
		solve();
	}

	return 0;
}

