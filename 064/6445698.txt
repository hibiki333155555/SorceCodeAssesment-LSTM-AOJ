#include <stdio.h>
#include <string.h>

typedef struct {
	char c;
	char bin[9];
} CODE;

int main(){
	char str[8192];
	char str2[8192];
	char buf[8];
	CODE enc[32]={
	{' ',"101"},{'\'',"000000"},{',',"000011"},{'-',"10010001"},{'.',"010001"},{'?',"000001"},{'A',"100101"},{'B',"10011010"},
	{'C',"0101"},{'D',"0001"},{'E',"110"},{'F',"01001"},{'G',"10011011"},{'H',"010000"},{'I',"0111"},{'J',"10011000"},
	{'K',"0110"},{'L',"00100"},{'M',"10011001"},{'N',"10011110"},{'O',"00101"},{'P',"111"},{'Q',"10011111"},{'R',"1000"},
	{'S',"00110"},{'T',"00111"},{'U',"10011100"},{'V',"10011101"},{'W',"000010"},{'X',"10010010"},{'Y',"10010011"},{'Z',"10010000"}
	};
	CODE dec[32]={
	{'A',"00000"},{'B',"00001"},{'C',"00010"},{'D',"00011"},{'E',"00100"},{'F',"00101"},{'G',"00110"},{'H',"00111"},{'I',"01000"},{'J',"01001"},
	{'K',"01010"},{'L',"01011"},{'M',"01100"},{'N',"01101"},{'O',"01110"},{'P',"01111"},{'Q',"10000"},{'R',"10001"},
	{'S',"10010"},{'T',"10011"},{'U',"10100"},{'V',"10101"},{'W',"10110"},{'X',"10111"},{'Y',"11000"},{'Z',"11001"},
	{' ',"11010"},{'.',"11011"},{',',"11100"},{'-',"11101"},{'\'',"11110"},{'?',"11111"}
	};

	int len,i,j;

	while(gets(str)!=NULL){
		i=0;
		while(str[i]!='\n') i++;
		str[i]='\0';
		i=0;
		str2[0]='\0';
		while(str[i]!='\0'){
			j=0;
			while(str[i]!=enc[j].c) j++;
			strcat(str2,enc[j].bin);
			i++;
		}
		j=(5-strlen(str2)%5)%5;
		for(i=0;i<j;i++){
			strcat(str2,"0");
		}
		//printf("%s\n",str2);
		len=strlen(str2)/5;
		for(i=0;i<len;i++){
			strncpy(buf,&str2[i*5],5);
			j=0;
			while(strcmp(buf,dec[j].bin)!=0) j++;
			printf("%c",dec[j].c);
		}
		printf("\n");
	}

	return 0;
}

