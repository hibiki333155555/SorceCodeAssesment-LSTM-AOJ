#include <iostream>
#include <set>
#include <tuple>
#include <vector>
#include <algorithm>
#include <queue>
#include <string>
#include <iomanip>
using namespace std;

long long MOD=998244353;

/*

10^4*2^14

2^5*2^6

*/

long long INF=10000000000000000;

vector<vector<int>> G(2005);
vector<int> a(2005);
vector<vector<long long>> dp(2005,vector<long long>(2005));
vector<bool> used(2005,false);
vector<int> cnt(2005);
int pre=0;
int ne=0;

void dfs(int pos){
	used[pos]=true;
	//cout << pos << " " << pre << endl;
	for(int i=0;i<=2000;i++){
		if(i-a[pos]>=0){
			dp[pos][i]=dp[pos][i]+dp[pre][i-a[pos]];
		}
		dp[pos][i]=dp[pos][i]+dp[pre][i];
		dp[pos][i]%=MOD;
	}
	for(int x:G[pos]){
		if(!used[x]){
			if(cnt[pos]==0){
				pre=pos;
			}
			cnt[pos]++;
			ne=x;
			dfs(x);
		}
	}
	
	if(G[pos].size()==1){
		pre=pos;
	}
}

int main() {
	int N,K;
	cin >> N >> K;
	vector<int> p(N+1);
	for(int i=1;i<=N;i++){
		cin >> a[i];
	}
	for(int i=2;i<=N;i++){
		cin >> p[i];
		G[i].push_back(p[i]);
		G[p[i]].push_back(i);
	}
	dp[0][0]=1;
	dfs(1);
	//cout << ne << endl;
	/*
	for(int i=1;i<=N;i++){
		for(int j=0;j<=K;j++){
			cout << dp[i][j] << " ";
		}
		cout << endl;
	}
	*/
	
	cout << dp[ne][K] << endl;
}
