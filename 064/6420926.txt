#include <bits/stdc++.h>
using namespace std;
const int INF = 1000000000;
vector<int> dx = {1, 0, -1, 0};
vector<int> dy = {0, 1, 0, -1};
int main(){
  int H, W;
  cin >> H >> W;
  vector<vector<char>> G(H, vector<char>(W));
  for (int i = 0; i < H; i++){
    for (int j = 0; j < W; j++){
      cin >> G[i][j];
    }
  }
  int sx, sy, vx, vy;
  for (int i = 0; i < H; i++){
    for (int j = 0; j < W; j++){
      if (G[i][j] == 'S'){
        sx = i;
        sy = j;
        G[i][j] = '.';
      }
      if (G[i][j] == 'V'){
        vx = i;
        vy = j;
        G[i][j] = '.';
      }
    }
  }
  int M;
  cin >> M;
  vector<vector<int>> T(H, vector<int>(W, INF));
  for (int i = 0; i < M; i++){
    int a, b, t;
    cin >> a >> b >> t;
    a--;
    b--;
    T[a][b] = t;
  }
  vector<vector<int>> d1(H, vector<int>(W, -1));
  d1[sx][sy] = 0;
  queue<pair<int, int>> Q1;
  Q1.push(make_pair(sx, sy));
  while (!Q1.empty()){
    int x = Q1.front().first;
    int y = Q1.front().second;
    Q1.pop();
    for (int i = 0; i < 4; i++){
      int x2 = x + dx[i];
      int y2 = y + dy[i];
      if (0 <= x2 && x2 < H && 0 <= y2 && y2 < W){
        if (G[x2][y2] == '.' && T[x2][y2] > d1[x][y] + 1 && d1[x2][y2] == -1){
          d1[x2][y2] = d1[x][y] + 1;
          Q1.push(make_pair(x2, y2));
        }
      }
    }
  }
  if (d1[vx][vy] == -1){
    cout << "No" << endl;
  } else {
    vector<vector<int>> d2(H, vector<int>(W, -1));
    d2[vx][vy] = d1[vx][vy];
    queue<pair<int, int>> Q2;
    Q2.push(make_pair(vx, vy));
    while (!Q2.empty()){
      int x = Q2.front().first;
      int y = Q2.front().second;
      Q2.pop();
      for (int i = 0; i < 4; i++){
        int x2 = x + dx[i];
        int y2 = y + dy[i];
        if (0 <= x2 && x2 < H && 0 <= y2 && y2 < W){
          if (G[x2][y2] == '.' && T[x2][y2] > d2[x][y] + 1 && d2[x2][y2] == -1){
            d2[x2][y2] = d2[x][y] + 1;
            Q2.push(make_pair(x2, y2));
          }
        }
      }
    }
    if (d2[sx][sy] == -1){
      cout << "No" << endl;
    } else {
      cout << "Yes" << endl;
    }
  }
}
