// g++ -std=c++17 -D DEV=1 main.cpp
#include <stdio.h>
#include <cassert>
#include <iostream>
#include <fstream>
#include <vector>
#include <algorithm>
#include <string>

using std::cin;
using std::cout;
using std::endl;
using std::terminate;
using std::vector;
using std::sort;
using std::string;
using std::unique;

#define rep(i, a, n) for (int i = (a); i < (n); ++i)
#define bit(n, k) ((n >> k) & 1)

class Program {
private:

    bool min(int &a, const int b) {
        if (a > b) {
            a = b;
            return true;
        } else {
            return false;
        }
    }

    bool max(int &a, const int b) {
        if (a < b) {
            a = b;
            return true;
        } else {
            return false;
        }
    }

public:

    Program() {
    }

    void solve() {
        while (true) {
            int n; cin >> n;

            if (n == 0) {
                break;
            }

            vector<int> a;
            a.resize(n);
            rep(i, 0, n) cin >> a[i];

            vector<int> b;
            b.resize(n);
            rep(i, 0, n) {
                if (i == 0) {
                    b[i] = a[i];
                } else {
                    b[i] = b[i-1] + a[i];
                }
            }

            int v = -100001;
            rep(r, 0, n) {
                rep(l, 0, r+1) {
                    if (l == 0) {
                        max(v, b[r]);
                    } else {
                        max(v, b[r]-b[l-1]);
                    }
                }
            }

            cout << v << endl;
        }
    }
};

int main() {

#ifdef DEV
    std::ifstream in("input");
    cin.rdbuf(in.rdbuf());

    int t; cin >> t;
    for (int x = 1; x <= t; ++x) {
        Program p;
        p.solve();
    }
#else
    Program p;
    p.solve();
#endif

    return 0;
}

