#include<bits/stdc++.h>
using namespace std;

int d = 0;
int color[101], dis[101];
bool m[101][101];
int Queue[100];
int top, tail;

void initQueue(){
    top = tail = 0;
    return;
}

void inQueue(int k){
    Queue[tail] = k;
    tail++;
    return;
}

int deQueue(){
    int ans = Queue[top];
    top++;
    return ans;
}

bool isEmpty(){
    return top == tail;
}

void initBfs(int n){
    inQueue(1);
    dis[1] = 0;
    color[1] = 1;
    while(!isEmpty()){
        int u = deQueue();
        for(int i = 1; i <= n; i++){
            if(m[u][i] && color[i] == 0){
                dis[i] = dis[u] + 1;
                inQueue(i);
                color[i] = 1;
            }
        }
    }
}

int main(){
    initQueue();
    int n, u, k, v;
    cin >> n;
    for(int i = 0; i <= n; i++){
        color[i] = 0;
        dis[i] = -1;
        for(int j = 0; j <= n; j++){
            m[i][j] = false;
        }
    }
    for(int i = 0; i < n; i++){
        cin >> u >> k;
        for(int j = 0; j < k; j++){
            cin >> v;
            m[u][v] = true;
        }
    }

    initBfs(n);

    for(int i = 1; i <= n; i++){
        cout << i << " " << dis[i] << endl;
    }

    return 0;
}
