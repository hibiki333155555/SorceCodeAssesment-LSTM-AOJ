import java.util.Scanner;

class Main {
    public static void main(String[] args) {

        solve();
    }
    
    static void solve() {
        Scanner sc = new Scanner(System.in); // 文字の入力
        int n = sc.nextInt();
        int q = sc.nextInt();

        makeSegTree(n);
        for (int i = 0; i < q; i++) {
            int c = sc.nextInt();
            int x = sc.nextInt();
            int y = sc.nextInt();

            if (c == 0) {
                update(x, y);
            } else {
                System.out.println(query(x, y, 0, 0, size));
            }
        }
        sc.close();
    }
    static int size;
    static int[] array;
    static void makeSegTree(int s) {
        this.size = 1;
        while (size < s) {
            size *= 2;
        }
        array = new int[2 * (1 << 17) - 1];
        for (int i = 0; i < 2 * this.size - 1; i++) {
            array[i] = Integer.MAX_VALUE;
        }
    }

    static void update(int index, int val) {
        index += this.size - 1;
        array[index] = val;

        while (index > 0) {
            index = (index - 1) / 2;
            array[index] = Math.min(array[index * 2 + 1], array[index * 2] + 2);
        }
    }

    static int query(int a, int b, int k, int l, int r) {
        if (r <= a || b <= l) {
            return Integer.MAX_VALUE;
        }
        if (a <= l && r <= b) {
            return array[k];
        }
        int left = query(a, b, k * 2 + 1, l, (l + r) / 2);
        int right = query(a, b, k * 2 + 2, (l + r) / 2, r);
        return left < right ? left : right;
    }
}
