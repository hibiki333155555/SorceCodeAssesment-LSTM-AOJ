#include<bits/stdc++.h>
using namespace std;
const double eps=1e-10;
struct V{
	double x,y;
	V(double a=0.0,double b=0.0){x=a;y=b;}
};
double operator * (const V&u,const V&v){return u.x*v.x+u.y*v.y;}
double operator ^ (const V&u,const V&v){return u.x*v.y-u.y*v.x;}//u x v 
V operator +(const V&u,const V&v){return V(u.x+v.x,u.y+v.y);}
V operator -(const V&u,const V&v){return V(u.x-v.x,u.y-v.y);}
V operator *(const double&k,const V&v){return V(k*v.x,k*v.y);}
V operator *(const V&v,const double&k){return V(k*v.x,k*v.y);}
V operator /(const V&v,const double&k){return V(v.x/k,v.y/k);}
V operator /(const double&k,const V&v){return V(v.x/k,v.y/k);}
double norm(const V&v){return sqrt(v.x*v.x+v.y*v.y);}
struct line{
	V a,b,dir;
	line(V u, V v){a=u;b=v;dir=(v-u)/norm(v-u);}
};
bool On_Line(line l,V x){
	return abs(l.dir^(x-l.a))<eps;
}
int Relative_Pos(line l,V x){
	if(On_Line(l,x)){
		if(((x-l.a)*l.dir)<-eps) return 3;//on back
		else if(((x-l.a)*(x-l.b))<eps) return 5;//on seg
		else return 4;//on front
	}
	else{
		if((l.dir^(x-l.a))>eps) return 1;//counter clock wise
		else return 2;//clock wise
	}
}
int main(void){
	ios::sync_with_stdio(false);cin.tie(0);
	double a,b,c,d;
	cin>>a>>b>>c>>d;
	V p;
	line l(V(a,b),V(c,d));
	int T;cin>>T;cout<<fixed<<setprecision(12);
	while(T--){
		cin>>p.x>>p.y;
		int tmp=Relative_Pos(l,p);
		if(tmp==1) cout<<"COUNTER_CLOCKWISE\n";
		else if(tmp==2) cout<<"CLOCKWISE\n";
		else if(tmp==3) cout<<"ONLINE_BACK\n";
		else if(tmp==4) cout<<"ONLINE_FRONT\n";
		else cout<<"ON_SEGMENT\n";
	}
	return 0;
}
