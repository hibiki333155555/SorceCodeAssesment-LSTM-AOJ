#include<iostream>
#include<cstdio>
#include<string>
class LinkedItem{
public:
    int v;
    LinkedItem *next;
    LinkedItem  *pre;
public:
    LinkedItem(int v=0):v(v),next(nullptr),pre(nullptr){}
};

class DoubleLinked{
private:
    LinkedItem* head;
    LinkedItem* tail;
public:
    DoubleLinked():head(nullptr),tail(nullptr){}
    bool insert(int s){
        auto item=new LinkedItem(s);
        item->next=head;
        if(head){
           head->pre=item; 
        }
        head=item;
        if(head->next==nullptr){
            tail=nullptr;
        }
        return true;
    }
    bool deleteFirst(){
        if(head==nullptr){
            return false;
        }
        auto k=head->next;
        delete head;
        head=k;
        if(head==nullptr){
            tail=nullptr;
            return true;
        }
        head->pre=nullptr;
        return true;
    }
    bool deleteLast(){
        if(head==nullptr)
            return false;
        auto k=tail->pre;
        delete tail;
        tail=k;
        if(tail)
            tail->next=nullptr;
        else 
            head=nullptr;
        return true;
    }
    bool deletex(int x){
        auto p=head;
        if(head&&head->v==x){
            return deleteFirst();
        }
        while(p->next){
            if(p->next->v==x){
                auto k=p->next->next;
                delete p->next;
                p->next=k;
                if(k){
                    k->pre=p;
                }else{
                    tail=p;
                }
                return true;
            }
            p=p->next;
        } 
        return false;      
    }
    void display(){
        auto p=head;
        while(p){
            std::cout<<p->v;
            if(p->next){
                std::cout<<" ";
            }else{
                std::cout<<std::endl;
            }
            p=p->next;;
        }
    }
};


int main(){
    auto dbl=new DoubleLinked();
    int n;
    std::cin>>n;
    std::string str;
    int v;
    while(n--){
        std::cin>>str;
        if(str=="insert"){
            std::cin>>v;
            dbl->insert(v);
        }
        else if(str=="delete"){
            std::cin>>v;
            dbl->deletex(v);
        }
        else if (str=="deleteFirst"){
            dbl->deleteFirst();
        }
        else 
            dbl->deleteLast();
    }
    dbl->display();
};
