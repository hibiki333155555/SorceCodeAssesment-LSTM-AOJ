use std::{io,str::FromStr};

#[allow(dead_code)]
fn read_line<T: FromStr>() -> T{
    let mut s = String::new();
    io::stdin().read_line(&mut s).ok();
    s.trim().parse().ok().unwrap()
}

#[allow(dead_code)]
fn read_delimiter<T: FromStr>(delimiter: &str) -> Vec<T>{
    let s = read_line::<String>();
    s.split(delimiter).map(|e| e.parse().ok().unwrap()).collect::<Vec<T>>()
}

fn insertionSort(a,n){
    for i in 1..n{
        let v = a[i];
        let mut j = i - 1;
        while j >= 0 && a[j] > v{
            a[j + 1] = a[j];
            j -= 1;
        }
        a[j + 1] = v;
    }
}

fn main(){
    let num = read_line::<i32>();
    let v = read_delimiter::<i32>();
}
