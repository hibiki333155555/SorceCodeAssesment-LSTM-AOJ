from collections import deque

h, w, n = map(int, input().split())
si, sj, gi, gj = map(lambda x: int(x) - 1, input().split())
watchers = [list(map(int, input().split())) for _ in range(n)]

imos = {i: {j: 0 for j in range(-2*w - 2*h - 1, 2*w + 2*h + 2) } for i in range(-2*h - 2*w - 1, 2*h + 2*w + 2)}
for y, x, k in watchers:
   y -= 1
   x -= 1
   imos[y - k][x] += 1
   imos[y - k + 1][x] += 1;
   imos[y + 1][x - k] -= 1;
   imos[y + 1][x - k - 1] -= 1;
   imos[y + k + 1][x] += 1;
   imos[y + k + 2][x] += 1;
   imos[y + 1][x + k] -= 1;
   imos[y + 1][x + k + 1] -= 1;

for x in range(-2*w, 2*w + 1):
   for y in range(-2*h, 2*h + 1):
      imos[y + 1][x - y - 1] += imos[y][x - y]
for x in range(-2*w, 2*w + 1):
   for y in range(-2*h, 2*h + 1):
      imos[y + 1][x + y + 1] += imos[y][x + y]

dist = [[-1 for _j in range(w)] for _i in range(h)]
dist[si][sj] = 0
que = deque()
que.append((si, sj))
delta = [0, 1, 0, -1, 0]
dydx = [(delta[i], delta[i + 1]) for i in range(4)]
while len(que) > 0:
   i, j = que.pop()
   for dy, dx in dydx:
      ni, nj = i + dy, j + dx
      if ni < 0 or ni >= h or nj < 0 or nj >= w:
         continue
      if dist[ni][nj] != -1:
         continue
      if imos[ni][nj] > 0:
         continue
      dist[ni][nj] = dist[i][j] + 1
      que.append((ni, nj))

print('Yes' if dist[gi][gj] != -1 else 'No')
