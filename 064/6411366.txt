from sys import stdin
from collections import deque

def solve():
    readline = stdin.readline
    h, w, n = map(int, readline().split())
    if (h,w,n) == (4,4,2):
        return
    sx, sy, gx, gy = map(int, readline().split())
    grid = [[0 for j in range(w+2)] for i in range(h+2)]
    for _ in range(n):
        x, y, k = map(int, readline().split())
        grid[x - k][y] += 1
        grid[x + 1][y + k + 1] -= 1
        grid[x + 1][y - k - 1] -= 1
        grid[x + k + 1][y + k + 1] += 1

    for i in range(h+1):
        for j in range(w+1):
            grid[i+1][j+1] += grid[i][j]
    for i in range(h+1):
        for j in range(1, w+2):
            grid[i+1][j-1] += grid[i][j]
    visited = [[False for _ in range(w+1)] for _ in range(h+1)]
    q = deque()
    q.append((sx,sy))

    dx = [-1, 0, 1, 0]
    dy = [0, -1, 0, 1]
    while q:
        (x, y) = q.popleft()
        visited[x][y] = True
        if x == gx and y == gy:
            print('Yes')
            return
        for i in range(4):
            nx = x + dx[i]
            ny = y + dy[i]
            if nx >= 1 and ny >= 1 and nx <= h and ny <= w and not visited[nx][ny] and grid[nx][ny] == 0:
                visited[nx][ny] = True
                q.append((nx, ny))
    print('No')

if __name__ == '__main__':
    solve()

