#include<bits/stdc++.h>
using namespace std;

#define int long long
//#define lson (rt<<1)
//#define rson ((rt<<1)+1)
//#define mid ((l+r)>>1)
#define mst(a) memset(a,0,sizeof(a))
#define cf int Tcodeforces, Tcodeforce;cin>>Tcodeforces;for(Tcodeforce = 1; Tcodeforce <= Tcodeforces; Tcodeforce++)
typedef long long ll;
typedef double db;
const ll maxn = 1e6 +7;
const ll maxm = 1e3 +7;
const ll inf = 0x3f3f3f3f;
const ll mod = 1e9 +7;

namespace Kmp {
    //下标从0开始
    int nxt[maxm];//前缀函数值
    int cnt = 0;//可以匹配的点的数量
    vector<int> res;//可以匹配的点的下标
    void kmp(char s[], int n, int a[] = nxt) {
        int j = a[0] = 0;
        for(int i = 1; i < n; i++) {
            while(j && s[i] != s[j]) j = a[j-1];
            a[i] = j += s[i] == s[j];
        }
    }
    void compare(char s[], char mode[], int ls, int lmode) {
        res.clear(); memset(nxt, 0, sizeof(nxt));
        kmp(mode, lmode, nxt);
        int j = 0;
        for(int i = 0; i < ls; i++) {
            while(j && s[i] != mode[j]) j = nxt[j-1];
            if(s[i] == mode[j]) j++;
            if(j == lmode) res.push_back(i-j+1);
        }
        cnt = res.size();
    }
};

int n;
char T[maxn], M[maxm];

signed main() {
    #ifdef moyi_qwq
        freopen("D:/source file/intxt/in.txt","r",stdin);
    #endif
    
    cin.tie(0);
    ios::sync_with_stdio(0);

    cin.getline(T,maxn);
    cin>>n; cin.ignore();
    int len = strlen(T);
    for(int i = 1; i <= n; i++) {
        cin.getline(M, maxm);
        Kmp::compare(T,M,len,strlen(M));
        cout<<(Kmp::res.size()?1:0)<<endl;
    }
    
    
    //cerr<<"Time : "<<1000*((double)clock())/(double)CLOCKS_PER_SEC<<"ms";
    return (0);
}

