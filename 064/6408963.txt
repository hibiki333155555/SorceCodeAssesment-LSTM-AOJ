#include <bits/stdc++.h>
using namespace std;

int V, E;
int const INF = numeric_limits<int>::max() / 2;
vector<vector<int>> D, dp;

int recur(int b, int v)
{
  if (dp.at(b).at(v) != -1) {
    return dp.at(b).at(v);
  }
  if (b == (1 << v)) {
    return dp.at(b).at(v) = D.at(0).at(v);
  }
  int res = INF, pb = b & ~(1 << v);
  for (int u = 0; u < V; u++) {
    if (pb & (1 << u))
      res = min(res, recur(pb, u) + D.at(u).at(v));
  }
  return dp.at(b).at(v) = res;
}

int main()
{
  cin >> V >> E;
  D.assign(V, vector<int>(V, INF));
  D.at(0).at(0) = 0;
  for (int i = 0; i < E; i++) {
    int s, t, d;
    cin >> s >> t >> d;
    D.at(s).at(t) = d;
  }
  dp.assign((1 << V), vector<int>(V, -1));
  int ans = recur((1 << V) - 1, 0);
  if (ans >= INF)
    ans = -1;
  cout << ans << '\n';
}

