#include<bits/stdc++.h>
using namespace std;

typedef long long ll;
typedef long double ld;

typedef vector<int> vi;
typedef vector<ll> vl;
typedef vector<vector<int>> vvi;
typedef vector<vector<ll>> vvl;

typedef pair<int, int> pii;
typedef pair<ll, ll> pll;
typedef vector<pii> vpii;
typedef vector<pll> vpll;

#define FOR(i, a, b) for(ll i=(a); i<(b); ++i)
#define REP(i, n) FOR(i, 0, n)
#define NREP(i, n) FOR(i, 1, n+1)

template<class T>bool chmax(T &a, const T &b) { if (a<b) { a=b; return 1; } return 0; }
template<class T>bool chmin(T &a, const T &b) { if (b<a) { a=b; return 1; } return 0; }

ll MODpow(ll x, ll n, ll mod){
    ll res=1;
    while(n>0){
        if(n&1) res=res*x%mod;
        x=x*x%mod;
        n >>= 1;
    }
    return res;
}

ll POW(ll x, ll n){
    ll res=1;
    while(n>0){
        if(n&1) res=res*x;
        x=x*x;
        n >>= 1;
    }
    return res;
}

ll MODcomb(ll n, ll r, ll mod, vl& fact){
    ll res=1;
    if(n>=r){
        res=fact[n]%mod;
        res=res*MODpow(fact[r], mod-2, mod)%mod;
        res=res*MODpow(fact[n-r], mod-2, mod)%mod;
    }
    return res;
}

const ll nmax = 1e5 + 100;
const ll MOD = 998244353;

vl fact(nmax);
void init() {
    REP(i, nmax) {
        if(i == 0) {fact[i] = 1;}
        else {fact[i] = fact[i-1] * i % MOD;}
    }
    return;
}

ll is2[10] = {0, 0, 1, 0, 1, 0, 1, 0, 1, 0};
ll is3[10] = {0, 0, 0, 1, 0, 0, 1, 0, 0, 1};

ll cn[10];

int main(void){
    init();
    ll N; cin >> N;
    vl A(N);
    REP(i, N) {cin >> A[i];}
    A.push_back(6);
    
    ll c2 = 0, c3 = 0;
    ll c6 = 0;
    ll res = 1;
    REP(i, N+1) {
        ll a = A[i];
        cn[a]++;
        if(is2[a] || is3[a]) {c6++;}
        
        if(a == 6) {
            ll mid = MODcomb(c2+c3, c3, MOD, fact);
            res *= mid;
            res %= MOD;
            c2 = c3 = 0;
        }
        else if(a % 2 == 0) {c2++;}
        else if(a % 3 == 0) {c3++;}
    }
    
    ll now = c6 - 1;
    for(ll i = 1; i <= 9; ++i) {
        if(is2[i] || is3[i]) {continue;}
        
        ll c = cn[i];
        ll mid = MODcomb(now+c, c, MOD, fact);
        now += c;
        res *= mid;
        res %= MOD;
    }
    cout << res << endl;
    
    return 0;
}
