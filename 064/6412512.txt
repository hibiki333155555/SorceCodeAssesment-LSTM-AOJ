from collections import defaultdict
import heapq

INF = 1 << 60


def dijkstra(graph, s=1):
    d = [INF] * (n + 1)
    d[s] = 0
    h = []
    heapq.heappush(h, (0, s))
    while h:
        dv, v = heapq.heappop(h)
        for u, x in graph[v].items():
            if dv + x < d[u]:
                d[u] = dv + x
                heapq.heappush(h, (d[u], u))
    return d


n, m, r = map(int, input().split())

g = defaultdict(dict)

for _ in range(m):
    s, t, d = map(int, input().split())
    g[s][t] = d

ans = dijkstra(g, r)[:n]

for x in ans:
    if x == INF:
        print("INF")
    else:
        print(x)
