#include "bits/stdc++.h"
using namespace std;

typedef string::const_iterator State;
#define eps 1e-8L
#define MAX_MOD 1000000007LL
#define GYAKU 500000004LL
#define MOD 998244353LL
#define pb push_back
#define mp make_pair
typedef long long ll;
typedef long double ld;
#define REP(a, b) for (long long(a) = 0; (a) < (b); ++(a))
#define ALL(x) (x).begin(), (x).end()

#define int long long
void solve()
{
  int w, h, v, t, x, y, p, q;
  cin >> w >> h >> v >> t >> x >> y >> p >> q;
  vector<int> X, Y;
  X.push_back(p);
  for (int i = 1;; ++i)
  {
    int next_x = X.back() + 2 * abs(i * w - X.back());
    if ((next_x - x) * (next_x - x) >= v * t * v * t)
    {
      break;
    }
    X.push_back(next_x);
  }
  reverse(ALL(X));
  for (int i = 0;; --i)
  {
    int next_x = X.back() - 2 * abs(X.back() - i * x);
    if ((next_x - x) * (next_x - x) >= v * t * v * t)
    {
      break;
    }
    X.push_back(next_x);
  }
  Y.push_back(q);
  for (int i = 1;; ++i)
  {
    int next_y = Y.back() + 2 * abs(i * h - Y.back());
    if ((next_y - y) * (next_y - y) >= v * t * v * t)
    {
      break;
    }
    Y.push_back(next_y);
  }
  reverse(ALL(Y));
  for (int i = 0;; --i)
  {
    int next_y = Y.back() - 2 * abs(Y.back() - i * y);
    if ((next_y - y) * (next_y - y) >= v * t * v * t)
    {
      break;
    }
    Y.push_back(next_y);
  }

  sort(ALL(X));
  sort(ALL(Y));
  int ans = 0;
  for (auto a : X)
  {
    int s = v * v * t * t - (a - x) * (a - x);
    if (s < 0)
      continue;
    int dist = sqrt(s);
    while ((dist + 1) * (dist + 1) <= s)
    {
      dist++;
    }
    while (dist * dist > s)
    {
      dist--;
    }
    auto Z = lower_bound(ALL(Y), y - dist);
    auto ZZ = upper_bound(ALL(Y), y + dist);

    ans -= (long long)distance(ZZ, Z);
  }
  cout << ans << endl;
}
#undef int

// generated by oj-template v4.7.2
// (https://github.com/online-judge-tools/template-generator)
int main()
{
  // Fasterize input/output script
  ios::sync_with_stdio(false);
  cin.tie(nullptr);
  cout << fixed << setprecision(10);
  // scanf/printf user should delete this fasterize input/output script

  int t = 1;
  // cin >> t; // comment out if solving multi testcase
  for (int testCase = 1; testCase <= t; ++testCase)
  {
    solve();
  }
  return 0;
}

