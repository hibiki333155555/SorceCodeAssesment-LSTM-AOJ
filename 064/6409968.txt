#include <stdio.h>
#include <stdlib.h>

typedef struct node {
    int x;
    int y;
} Node;

int partition(Node * A, int p, int r){
    Node X = A[r];
    int out_j = 0;
    for (int i = p, j = p; i < r; i++){
        if (X.x == A[i].x){
            if (X.y >= A[i].y) {
                Node tmp = A[i];
                A[i] = A[j];
                A[j] = tmp;
                j++;
            }
        } else if (X.x > A[i].x) {
            Node tmp = A[i];
            A[i] = A[j];
            A[j] = tmp;
            j++;
        }
        out_j = j;
    }
    Node tmp = A[r];
    A[r] = A[out_j];
    A[out_j] = tmp;
    return out_j;
}

void QuickSort(Node * A, int p, int r) {
    if (p < r){
        int q = partition(A, p, r);
        QuickSort(A, p, q-1);
        QuickSort(A, q+1, r);
    }
}

int main(void){
    // Your code here!
    int n, x, y;
    scanf(" %d", &n);
    
    Node * A = (Node *)malloc(sizeof(Node) * n);
    
    for (int i = 0; i < n; i++){
        scanf(" %d %d", &x, &y);
        A[i].x = x;
        A[i].y = y;
        //printf(" %d %d\n", A[i].x, A[i].y);
    }
    
    QuickSort(A, 0, n-1);
    
    for (int i = 0; i < n; i++){
        printf("%d %d\n", A[i].x, A[i].y);
    }
    
    return 0;
}

