#pragma GCC optimize("Ofast")
#include <bits/stdc++.h>
using namespace std;
typedef long long int ll;

int main(){
	cin.tie(nullptr);
	ios::sync_with_stdio(false);
	int n; cin >> n;
	ll D,K; cin >> D >> K;
	vector<vector<ll>> g(2);
	for(int i=0;i<n;i++){
		int p; cin >> p;
		ll s; cin >> s;
		g[p-1].push_back(s);
	}
	sort(g[0].begin(), g[0].end());
	sort(g[1].begin(), g[1].end());
	vector<vector<ll>> dp(2,vector<ll>(n+1,1e18));
	dp[0][0]=dp[1][0]=0;
	for(int i=1;i<=n;i++){
		for(int j=0;j<2;j++){
			{
				int sz=g[j].end()-lower_bound(g[j].begin(), g[j].end(),dp[j][i-1]);
				if(sz>=1){
					dp[j][i]=min(dp[j][i],g[j][(int)(g[j].size())-sz]+1);
				}
			}
			{
				int sz=g[j].end()-lower_bound(g[j].begin(), g[j].end(),dp[j^1][i-1]+D+(i-1)*K);
				if(sz>=1){
					dp[j][i]=min(dp[j][i],g[j][(int)(g[j].size())-sz]+1);
				}
			}
		}
	}
	int res=0;
	for(int i=0;i<2;i++){
		for(int j=0;j<=n;j++){
			if(dp[i][j]!=1e18)res=max(res,j);
		}
	}
	cout << res << "\n";
}
