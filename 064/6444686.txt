v, e, r = map(int,input().split())
s = []
t = []
d = []
for i in range(e):
    tmp_s, tmp_t, tmp_d = map(int,input().split())
    s.append(tmp_s)
    t.append(tmp_t)
    d.append(tmp_d)

g = [[] for _ in range(v)]
for i in range(e):
    g[s[i]].append((t[i], d[i]))

min_d = [float("inf") for _ in range(v)]
def bellman_ford(start):
    min_d[start] = 0
    for i in range(v):
        update = False
        for i in range(e):
            if min_d[t[i]] > min_d[s[i]] + d[i]:
                min_d[t[i]] = min_d[s[i]] + d[i]
                update = True
        if not update:
            break
        if i == e - 1:
            return -1
    return min_d

if bellman_ford(r) == -1:
    print("NEGATIVE CYCLE")
else:
    for i in bellman_ford(r):
        print(i)

