#include<stdio.h>
#include<vector>
#include<iostream>
#include<algorithm>
#include<cmath>
#include<set>
#include<map>
using namespace std;

bool func(vector<long long> vec, int k, int p){
  int sum = 0;
  int cnt = 1;
  for (int i = 0; i < vec.size() - 1 ; i++){
    sum += vec.at(i);
    if((sum <= p)&(sum + vec.at(i+1) <= p)){
      continue;
    }
    else if((sum <= p)&(sum + vec.at(i+1) > p)){
      sum = 0;
      cnt++;
    }
    else{
      sum = 0;
      cnt++;
    }
  }
  if (cnt <= k){
    return true;
  }
  else{
    return false;
  }
}

int get_max(vector<long long> vec){
  long long maxv = 0;
  for (int i = 0; i < vec.size(); i++){
    maxv = max(maxv,vec.at(i));
  }
  return maxv;
}
    
int main(){
  int n,k;
  scanf("%d%d",&n,&k);
  vector<long long> vec(n);
  for (int i = 0; i < n; i++){
    scanf("%ld",&vec.at(i));
  }
  for (int i = get_max(vec); ;i++){
    if (func(vec,k,i) == 1){
      printf("%d\n",i);
      return 0;
    }
  }  
  
}
