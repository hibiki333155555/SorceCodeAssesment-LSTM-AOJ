#include <iostream>
#include <vector>
#include <algorithm>

int lcs(std::string a, std::string b) {
    std::vector<std::vector<int>> dp(a.size()+2, std::vector<int>(b.size()+2, 0));
    for (int i = 1; i <= a.size(); i++) {
        for (int j = 1; j <= b.size(); j++) {
            dp[i][j] = std::max(dp[i][j], dp[i-1][j]);
            dp[i][j] = std::max(dp[i][j], dp[i][j-1]);
            if (a.at(i-1) == b.at(j-1)) {
                dp[i][j] = std::max(dp[i-1][j-1] + 1, dp[i][j]);
            }
        }
    }
    return dp[a.size()][b.size()];
}

int main() {
    int n; std::cin >> n;

    for (int i = 0; i < n; i++) {
        std::string a, b;
        std::cin >> a >> b;
        std::cout << lcs(a, b) << std::endl;
    }
}
