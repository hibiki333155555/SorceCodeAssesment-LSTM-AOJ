class Dice:
    def __init__(self, labels):
        self.labels = labels
        self.v_pattern = [[labels[1], labels[2], labels[4], labels[3]],
                          [labels[0], labels[3], labels[5], labels[2]],
                          [labels[0], labels[1], labels[5], labels[4]],
                          [labels[0], labels[4], labels[5], labels[1]],
                          [labels[0], labels[2], labels[5], labels[3]],
                          [labels[1], labels[3], labels[4], labels[2]]]

    def get_top(self):
        return self.labels[0]

    def get_right_from_topfront(self, top, front):
        for i in self.v_pattern:
            if top in i:
                if i[(i.index(top)+1) % 4] == front:
                    return self.labels[self.v_pattern.index(i)]

    def get_left_from_backbottom(self, back, bottom):
        for i in self.v_pattern:
            if back in i:
                if i[(i.index(back)+1) % 4] == bottom:
                    return self.labels[5-self.v_pattern.index(i)]

    def roll(self, direction):
        tmp = self.labels
        if direction == "S":
            self.labels = [tmp[4], tmp[0], tmp[2], tmp[3], tmp[5], tmp[1]]
        if direction == "E":
            self.labels = [tmp[3], tmp[1], tmp[0], tmp[5], tmp[4], tmp[2]]
        if direction == "W":
            self.labels = [tmp[2], tmp[1], tmp[5], tmp[0], tmp[4], tmp[3]]
        if direction == "N":
            self.labels = [tmp[1], tmp[5], tmp[2], tmp[3], tmp[0], tmp[4]]


n = int(input())
dices = [0 for x in range(n)]
for i in range(n):
    dices[i] = Dice(list(map(int, input().split(" "))))

yes = True
for i in range(1, n):
    if (dices[0].get_right_from_topfront(dices[i].labels[0],dices[i].labels[1]) == dices[i].labels[2] and
       dices[0].get_left_from_backbottom(dices[i].labels[5],dices[i].labels[4]) == dices[i].labels[3]):
        print("No")
        yes = False
        break
if yes:
    print("Yes")
