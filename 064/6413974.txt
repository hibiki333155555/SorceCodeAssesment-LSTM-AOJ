#include <iostream>
using namespace std;
typedef long long int ll;

#define SIZE 300005

ll N;
ll M;
ll a;
ll b;
ll c;
ll d;
ll students[1000][1000];
ll queries[100000];
char buffer[200000];

int main() {
	
	int i = 0;
	int q = 0;
	int r = 0;

	int c_prev;
	while(true){
		while( fgets(buffer, sizeof(buffer) , stdin) )
		{
			sscanf(buffer, "%lld %lld %lld %lld", &a,&b,&c,&d);
			if(i == 0){
				N = a;
				M = b;

				for(ll ni = 1; ni <= N; ni++){
					students[0][ni] = 0;
				}
			}else{
				c_prev = 0;
				if(a == 1){
					for(ll ni = 0; ni < N; ni++){
						if(r > 0)
							c_prev = students[r-1][ni];
						else
							c_prev = students[r][ni];
						if(ni >= b-1 && ni <= c-1){
							students[r][ni] = (c_prev + d) % 4; // 0 = north | 2 = south
							// printf("c_prev: %lld | d: %lld\n", c_prev, d);
						}
						else{
							if(r > 0)
								students[r][ni] = students[r-1][ni];
							
							// printf("r: %lld | ni: %lld\n", r, ni);
						}
						//printf("r: %lld stdnt[%lld] = %lld\n",r, r, students[r][ni]);
					}
					r++;
				}
				if(a == 2){
					int north = 0;
					int south = 0;
					int y = r == 0 ? 0 : r - 1;
					for(ll si = 0; si < N; si++){
						if(si >= b-1 && si <= c-1){
							if(students[y][si] == 0)
								north++;
							else if(students[y][si] == 2 || students[y][si] == -2)
								south++;

							students[0][si] = students[y][si];
						}
						//printf("r: %lld std[%lld]: %lld\n",r, si, students[y][si]);
					}
					r = r <= 1 ? 0 : r-1;
					
					queries[q] = north - south;
					cout << queries[q] << "\n";
					q++;
				}
			}
			i++;
			if(i == M+1)
				break;
		}
		if(i >= M)
			break;
	}

	/*i = 0;
	while(true){
		cout << queries[i] << "\n";
		if(i == q-1)
			break;
		i++;
	}*/
	return 0;
}
