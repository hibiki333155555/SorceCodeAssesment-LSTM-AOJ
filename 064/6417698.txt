#include<bits/stdc++.h>
using namespace std;
typedef unsigned long long int ull;
typedef long long int ll;
typedef pair<ll,ll> pll;
typedef long double D;
//typedef complex<D> P;
#define F first
#define S second
//const ll MOD=1000000007;
const ll MOD=998244353;

template<typename T,typename U>istream & operator >> (istream &i,pair<T,U> &A){i>>A.F>>A.S; return i;}
template<typename T>istream & operator >> (istream &i,vector<T> &A){for(auto &I:A){i>>I;} return i;}
template<typename T,typename U>ostream & operator << (ostream &o,const pair<T,U> &A){o<<A.F<<" "<<A.S; return o;}
template<typename T>ostream & operator << (ostream &o,const vector<T> &A){int i=A.size(); for(auto &I:A){o<<I<<(--i?" ":"");} return o;}
template<typename T,typename U>T & chmax(T &a,const U &b){if(a<b){a=b;} return a;}
template<typename T,typename U>T & chmin(T &a,const U &b){if(b<a){a=b;} return a;}

vector<ll> dx={1,0,-1,0};
vector<ll> dy={0,1,0,-1};

int main(){
  cin.tie(0);
  ios::sync_with_stdio(false);

  ll H,W,N,sx,sy,gx,gy;
  cin>>H>>W>>N>>sx>>sy>>gx>>gy;
  vector<pair<pll,ll>> PT(N);
  cin>>PT;
  vector<vector<ll>> A(H+10,vector<ll>(W+10,0));
  for(auto &I:PT){
    auto x=I.F.F,y=I.F.S,k=I.S;
    A[x-k][y]+=1;
    A[x+1][y-k-1]-=1;
    A[x+1][y+k+1]-=1;
    A[x+k+2][y]+=1;
  }
  for(int i=1;i<H+5;i++){
    for(int j=0;j<W+5;j++){
      A[i][j]+=A[i-1][j+1];
    }
  }
  for(int i=1;i<H+5;i++){
    for(int j=1;j<W+5;j++){
      A[i][j]+=A[i-1][j-1];
    }
  }
  for(int i=0;i<H+10;i++){
    for(int j=0;j<W+10;j++){
      if(i==0 || j==0 || i>H || j>W){A[i][j]=1;}
    }
  }
  queue<pll> Q;
  A[sx][sy]=-1;
  Q.push({sx,sy});
  while(!Q.empty()){
    pll a=Q.front(); Q.pop();
    for(int j=0;j<4;j++){
      int x=a.F+dx[j],y=a.S+dy[j];
      if(A[x][y]==0){
	A[x][y]=-1;
	Q.push({x,y});
      }
    }
  }
  if(A[gx][gy]==-1){cout<<"Yes"<<endl;}
  else{cout<<"No"<<endl;}

  //for(auto &I:A){cout<<I<<endl;}
  

  return 0;
}

