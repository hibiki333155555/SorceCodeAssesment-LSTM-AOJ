from sys import stdin, setrecursionlimit, stdout
#	setrecursionlimit(100000) #use "python" instead of "pypy" to avoid MLE
from io import BytesIO
import os
from collections import deque, Counter, defaultdict
#from math import sqrt, floor, ceil, log, log2, log10, pi, gcd, sin, cos, asin
#from heapq import heapify, heappop, heappush, heapreplace, heappushpop
#	to use maxheap, invert all the number.. that means, multyply with -1
#from bisect import bisect_right, bisect_left
#	number of elements in a range is bisect_right(a, el)-bisect_left(a, el)

def ii(): return int(input().decode()) if OJ else int(input())
def fi(): return float(input().decode()) if OJ else float(input())
def mi(): return map(int, input().decode().split()) if OJ else map(int, input().split())
def fmi(): return map(float, input().decode().split()) if OJ else map(float, input().split(''))
def li(): return list(mi())
def si(): return input().decode().rstrip() if OJ else input().rstrip()
def lsi(): return list(si())
def oj():
	global OJ
	OJ=True
#######################################################################################
###########################    M Y     F U N C T I O N S    ###########################
#######################################################################################




#######################################################################################
###########################    M A I N     P R O G R A M    ###########################
#######################################################################################

def main():
	print(*sorted(li()))



#######################################################################################
###########################    S T A R T E R     P A C K    ###########################
#######################################################################################

if __name__=="__main__":
	OJ=False
	#oj()

	if OJ:
		input = BytesIO(os.read(0, os.fstat(0).st_size)).readline
	else:
		input = stdin.readline


	vow={'A', 'E', 'I', 'O', 'U'}
	mod=1000000007
	res=['NO', 'YES']

	

	test, test_case=0, 1
	#test_case=ii()
	#print('>>>>>>>>>>>>> O U T P U T >>>>>>>>>>>>>\n' if not OJ else "", end="")
	while test<test_case:
		test+=1
		#print('Case #', test, ': ', sep='', end='')
		main()
