#include"bits/stdc++.h"
using namespace std;
#define ALL(x) begin(x),end(x)
#define rep(i,n) for(int i=0;i<(n);i++)
#define debug(v) cout<<#v<<":";for(auto x:v){cout<<x<<' ';}cout<<endl;
#define mod 1000000007
using ll=long long;
const int INF=1000000000;
const ll LINF=1001002003004005006ll;
int dx[]={1,0,-1,0},dy[]={0,1,0,-1};
// ll gcd(ll a,ll b){return b?gcd(b,a%b):a;}
template<class T>bool chmax(T &a,const T &b){if(a<b){a=b;return true;}return false;}
template<class T>bool chmin(T &a,const T &b){if(b<a){a=b;return true;}return false;}

struct IOSetup{
    IOSetup(){
        cin.tie(0);
        ios::sync_with_stdio(0);
        cout<<fixed<<setprecision(12);
    }
} iosetup;
 
template<typename T>
ostream &operator<<(ostream &os,const vector<T>&v){
    for(int i=0;i<(int)v.size();i++) os<<v[i]<<(i+1==(int)v.size()?"":" ");
    return os;
}
template<typename T>
istream &operator>>(istream &is,vector<T>&v){
    for(T &x:v)is>>x;
    return is;
}

signed main(){
    int N, M;cin>>N>>M;
    vector<vector<int>> G(N);
    vector<int> A(N, 0);
    rep(i,N-1){
        int u,v;cin>>u>>v;u--,v--;
        G[u].push_back(v);
        G[v].push_back(u);
    }
    rep(i,M){
        int a;cin>>a;a--;
        A[a]=1;
    }

    vector<int> reach(N, 0);
    function<void(int, int, int)> dfs=[&](int par, int cur, int nut_hold){
        if(nut_hold and A[cur]) return ;
        reach[cur]=1;

        int nuts=nut_hold+A[cur];

        int margin=0;
        for(auto &to:G[cur])if(to!=par){
            if(A[to]==0) margin++;
        }
        if(margin==0 and nuts){
            reach[cur]=0;
            return ;
        }
        for(auto &to:G[cur])if(to!=par){
            if(A[to]==0) margin--;   

            if(A[to]){
                if(nuts==0) dfs(cur, to, 0);
            }else{
                if(margin==0 and nuts) dfs(cur, to, 1);
                else                   dfs(cur, to, 0);
            }

            if(A[to]==0) margin++;  
        }   
    };
    dfs(-1, 0, 0);
    int res=0;
    for(auto &x:reach) res+=x;
    cout<<res<<endl;
    return 0;
}
