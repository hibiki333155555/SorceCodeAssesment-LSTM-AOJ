from collections import deque
N = int(input())
A = [int(a) for a in input().split()]
B = [int(a) for a in input().split()]
X = [[] for i in range(N)]
for i in range(N-1):
    x, y = map(int, input().split())
    x, y = x-1, y-1
    X[x].append(y)
    X[y].append(x)

P = [-1] * N
Q = deque([0])
R = []
while Q:
    i = deque.popleft(Q)
    R.append(i)
    for a in X[i]:
        if a != P[i]:
            P[a] = i
            X[a].remove(i)
            deque.append(Q, a)

inf = 10 ** 5
def merge(L1, L2):
    n1, n2 = len(L1), len(L2)
    n = n1 + n2 - 1
    L = [inf] * n
    for i in range(n1):
        for j in range(n2):
            k = i + j
            L[k] = min(L[k], L1[i] + L2[j])
    return L

def adj(pL, i):
    n = len(pL)
    x = A[i] - B[i]
    L = [0] * (n + 1)
    m = inf
    for j in range(n)[::-1]:
        if pL[j] > 0:
            m = min(m, max(pL[j] + x, 0))
        else:
            m = min(m, pL[j] + x)
        L[j+1] = m
    L[0] = min(m, 0)
    return L

Y = [[] for _ in range(N)]
for i in R[::-1]:
    L = [0]
    for j in X[i]:
        L = merge(L, Y[j])
    Y[i] = adj(L, i)
print(max([i + 1 for i in range(N) if Y[0][i] <= 0] + [0]))
