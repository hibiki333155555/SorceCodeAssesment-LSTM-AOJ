#include<bits/stdc++.h>
using namespace std;

#define int unsigned long long
//#define lson (rt<<1)
//#define rson ((rt<<1)+1)
//#define mid ((l+r)>>1)
#define mst(a) memset(a,0,sizeof(a))
#define cf int Tcodeforces, Tcodeforce;cin>>Tcodeforces;for(Tcodeforce = 1; Tcodeforce <= Tcodeforces; Tcodeforce++)
typedef long long ll;
typedef double db;
const ll maxn = 1e3 +7;
const ll maxm = 2e5 +7;
const ll inf = 0x3f3f3f3f;
const ll mod = 1e9 +7;
const int B = 1e8 +7;

int h, w, r, c;
char text[maxn][maxn], mode[maxn][maxn];
int hashT[maxn][maxn], hashM[maxn];

signed main() {
    #ifdef moyi_qwq
        freopen("D:/source file/intxt/in.txt","r",stdin);
    #endif
    
    cin>>h>>w;
    cin.ignore();
    for(int i = 0; i < h; i++) cin.getline(text[i], maxn);
    cin>>r>>c;
    cin.ignore();
    for(int i = 0; i < r; i++) cin.getline(mode[i], maxn);
    
    // hash mode string by row
    for(int i = 0; i < r; i++) {
        for(int j = 0; j < c; j++) {
            hashM[i] = hashM[i] * B + mode[i][j];
        }
    }
    //for the first c it * B^(c-1)
    int B1 = 1;
    for(int i = 1; i < c; i++) B1 *= B;
    // hash base
    for(int i = 0; i < h; i++) {
        for(int j = 0; j < c; j++) {// first colomn
            hashT[i][0] = hashT[i][0] * B + text[i][j];
        }
        for(int j = 1; j < w - c + 1; j++) { // j colomn
            hashT[i][j] = hashT[i][j-1]*B - text[i][j-1]*B1*B + text[i][j+c-1];
        }
    }
    for(int i = 0; i < h-r+1; i++) {
        for(int j = 0; j < w-c+1; j++) {
            int cnt;
            for(cnt=0;cnt<r&&hashT[i+cnt][j]==hashM[cnt]; cnt++);
            if(cnt == r) {cout<<i<<" "<<j<<endl;}
        }
    }

    //cerr<<"Time : "<<1000*((double)clock())/(double)CLOCKS_PER_SEC<<"ms";
    return (0);
}

