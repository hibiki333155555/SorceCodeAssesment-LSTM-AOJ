#include "bits/stdc++.h"
using namespace std;

vector<bool> vis;
vector<vector<int>> G, R;  // Adjacency List
vector<int> scc, post_order;
int k = 0;

void dfs(int u) {
  vis[u] = true;
  for (int v : G[u]) {
    if (!vis[v]) {
      dfs(v);
    }
  }
  post_order.emplace_back(u);
}

void rdfs(int u) {
  scc[u] = k;
  for (int v : R[u]) {
    if (!scc[v]) {
      rdfs(v);
    }
  }
}

int main() {
  int V, E;
  cin >> V >> E;
  vis.resize(V), scc.resize(V);
  G.resize(V), R.resize(V);
  while (E--) {
    int u, v;
    cin >> u >> v;
    G[u].emplace_back(v);
    R[v].emplace_back(u);
  }
  for (int i = 0; i < V; ++i)
    if (!vis[i]) dfs(i);
  reverse(post_order.begin(), post_order.end());
  for (auto o : post_order) {
    if (!scc[o]) ++k, rdfs(o);
  }
  int Q;
  cin >> Q;
  while (Q--) {
    int u, v;
    cin >> u >> v;
    cout << (scc[u] == scc[v]) << '\n';
  }
}
