#include <iostream>
#include <algorithm>
using namespace std;
static const int MAX = 1400;

int H, W;
int G[MAX][MAX];

int getLargestSquare() {
    int dp[MAX][MAX];
    int maxWidth = 0;
    for (int i = 0; i < H; ++i) {
        for (int j = 0; j < W; ++j) {
            dp[i][j] = (G[i][j] + 1) % 2;
//            maxWidth |= dp[i][j];
            if (dp[i][j] == 1) maxWidth = 1;
        }
    }

     for (int i = 1; i < H; ++i) {
        for (int j = 1; j < W; ++j) {
            // 汚れたタイルの場合
            if (G[i][j] == 1) {
                dp[i][j] = 0;
            }
            else {
                dp[i][j] = min(dp[i-1][j-1], min(dp[i-1][j], dp[i][j-1])) + 1;
                maxWidth = max(maxWidth, dp[i][j]);
            }
        }
    }

    return maxWidth * maxWidth;
}

int main() {
    cin >> H >> W;

    for (int i = 0; i < H; ++i) {
        for (int j = 0; j < W; ++j) {
            cin >> G[i][j];
        }
    }

    cout << getLargestSquare() << endl;
}
