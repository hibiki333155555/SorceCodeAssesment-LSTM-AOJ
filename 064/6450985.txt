#include <bits/stdc++.h>
using namespace std;

vector<pair<int,char> > bubbleSort(vector<pair<int,char> > A,int N){

  for(int i = 0;i<N;i++){
    for(int j=N-1;j>= i+1;j--){
      if(A[j].first < A[j-1].first)
	swap(A[j], A[j-1]);
    }
  }
  
  for(int a=0;a<N;a++){
    if(a != 0)
      cout << " ";
    cout << A[a].second << A[a].first;
  }
  cout << endl;
  return A;
}
vector<pair<int, char> > selectionSort(vector<pair<int,char> > A,int N){
  int num=0;
  for(int i=0;i<N;i++){
    int minj = i;
    for(int j=i;j<N;j++){
      if(A[j].first < A[minj].first)
	minj = j;
    }
    if(A[i].first != A[minj].first){
      swap(A[i], A[minj]);
      
    }
  }
  for(int a=0;a<N;a++){
    if(a != 0)
      cout << " ";
    cout << A[a].second << A[a].first;
  }
  cout <<  endl;
  return A;
}
vector<pair<int, char> > insertionSort(vector<pair<int,char> > A,int N){
  for(int i =0;i<N;i++){
    pair<int,char> v = A[i];
    int j = i -1;
    while(j >= 0 && A[j].first > v.first){
      A[j+1] = A[j];
      j--;
    }
    A[j+1] = v;
    
  }
  /*
  for(int a=0;a<N;a++){
      if(a != 0)
	cout << " ";
      cout << A[a].second << A[a].first;
    }
  cout << endl;
  */
  return A;
}
int main(){
  int N;
  cin >> N;
  vector<pair<int, char> > A(N);
  for(int i =0;i<N;i++)
    cin >> A[i].second >> A[i].first;

  vector<pair<int, char> > Insert = insertionSort(A,N);
  vector<pair<int, char> > Bubble  = bubbleSort(A,N);
  if(Insert == Bubble)
    cout << "Stable" << endl;
  else
    cout << "Not stable" << endl;
  vector<pair<int, char> > Selectioin  = selectionSort(A,N);
  if(Insert == Selectioin)
    cout << "Stable" << endl;
  else
    cout << "Not stable" << endl;
    
  return 0;
}

