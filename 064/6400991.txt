import java.util.Scanner;

class Point implements Cloneable {
    private int x;
    private int y;

    public Point() {
    }

    public Point(int x, int y) {
        this.x = x;
        this.y = y;
    }

    public int getX() {
        return x;
    }

    public int getY() {
        return y;
    }

    public void setX(int x) {
        this.x = x;
    }

    public void setY(int y) {
        this.y = y;
    }

    @Override
    protected Point clone() {
        Point clonedItem = null;
        try {
            clonedItem = (Point) super.clone();
        } catch (CloneNotSupportedException e) {
            e.printStackTrace();
        }
        return clonedItem;
    }

    public void showPoint() {
        System.out.println("(" + x + "," + y + ")");
    }

    // 多きい方を返却する
    public int getBig() {
        if (x >= y) {
            return x;
        } else {
            return y;
        }
    }

    // 小さい方を返却する
    public int getlittle() {
        if (x <= y) {
            return x;
        } else {
            return y;
        }
    }
}

class Points {
    // 要素数は3000を超えない
    private Point[] points = new Point[3000];

    public void setPoints(Point[] points) {
        this.points = points;
    }

    public void setPoints(int num, Point point) {
        points[num] = point.clone();
    }

    // 配列pointsのxとyの中身を表示する
    public void showPoint() {
        for (int i = 0; i < points.length; i++) {
            // xとyの値を取り出す
            int x = points[i].getX();
            int y = points[i].getY();

            // 終了判定
            if (x == 0 && y == 0) {
                break;
            } else {
                System.out.println(x + " " + y);
            }
        }
    }

    // 配列pointsの小さい方，多きい方という構文で表示する
    public void showPointLittleAndBig() {
        for (int i = 0; i < points.length; i++) {
            // 終了条件
            if (points[i].getX() == 0 && points[i].getY() == 0) {
                break;
            } else {
                System.out.println(points[i].getlittle() + " " + points[i].getBig());
            }
        }
    }
}

public class Main {
    public static void main(String[] args) {
        Scanner sc = new Scanner(System.in);

        // クラスを宣言
        Point point = new Point();
        Points points = new Points();

        // データを入力
        int num = 0;
        int x, y;
        while (true) {
            x = sc.nextInt();
            y = sc.nextInt();
            if (x == 0 && y == 0) {
                break;
            } else {
                point.setX(x);
                point.setY(y);

                points.setPoints(num, point);
                num++;
            }
        }

        // 小さい方から表示する
        points.showPointLittleAndBig();
    }
}

