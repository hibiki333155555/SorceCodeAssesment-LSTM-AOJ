import sys 
#from statistics import *
#from operator import add
#import collections
import math
#import numpy
#import itertools
import re

read = sys.stdin.read
readline = sys.stdin.readline
readlines = sys.stdin.readlines
input = lambda: sys.stdin.readline().rstrip()

def clc(x, y):
    nl = max(x, y)
    ns = min(x, y)
    if ns == 0:
        return nl
    else:
        return clc(ns, nl%ns)
    
def main():
    #a, b = tuple(map(int, read().split()))
    a, b = map(int, input().split())
    #r = float(read().split()[0])
    #a = [list(map(int, input().split())) for _ in range(n)]
    #for i in sys.stdin: #for i in iter(input, '0'):
    #*a, = map(int, input().split())
    
    print("%d" %clc(a, b))
    #o = re.sub("[\[,\]]", "", str(a))
    #l = a+b+math.sqrt(a**2 + b**2 - 2*a*b*math.cos(rd))
    #rd = math.radians(c)  abs(complex(x2-x1, y2-y1))
    #ds = math.hypot((x2-x1), (y2-y1))
    #s = s[h:] + s[:h]    #if p in ss: #if ss.find(p) != -1:
    #otp = [[0]*(n+1)]*(r+1)xxx   #p = [[0 for _ in range(l)] for _ in range(n)]
    #cnt = sum([1 for i,j,k in itertools.combinations(range(1,n+1),3) if i+j+k==x])
    #otp.append(cnt)
    #opt = mode(dl) #opt = max(dl, key = dl.count)
    #cntDc = collections.Counter(dl)
    #opt = cntDc.most_common()[0][0]
    #print(f'{sd: .10f}')    print("%.10f" %dc) #print("%d "%p[i][j], end='')
    #print(' '.join(map(str, r)))     #print(*otp, sep = "\n") 
    #print(*s[a:b+1], sep='')

main()
