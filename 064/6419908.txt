#include <iostream>
#include <algorithm>
#include <vector>
using namespace std;
#include <set>

int arr[9];
int n = 8;
bool col[16], diag[16], rdiag[16];
set<int> skip;

void dfs(int cur)
{
	if (cur == n)
	{
		bool first = true;
		for (int i = 0; i < n; i++)
		{
			for (int j = 0; j < n; j++)
			{
				if (j != arr[i]) cout << ".";
				else cout << "Q";
			}
			cout << endl;
		}
		return;
	}
	if (skip.count(cur))
	{
		dfs(cur + 1);
		return;
	}
	for (int i = 0; i < n; i++)
	{
		if (col[i] == false && diag[i+cur] == false && rdiag[i-cur+n] == false)
		{
			arr[cur] = i;
			col[i] = diag[i + cur] = rdiag[i - cur + n] = true;
			dfs(cur + 1);
			col[i] = diag[i + cur] = rdiag[i - cur + n] = false;
		}
	}
}

int main()
{
	int t = 1;
	int k; cin >> k;
	int r, c;
	while (k--)
	{
		cin >> r >> c;
		arr[r] = c;
		col[c] = diag[r + c] = diag[c - r + n] == true;
		skip.insert(r);
	}
	dfs(0);
}
