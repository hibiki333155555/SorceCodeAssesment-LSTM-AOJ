class Dice:
    
    def __init__(self, numbers):
        self.numbers_fr = [i for i in numbers]
        self.numbers_to = [i for i in numbers]
        
    def copy_numbers(self):
        for i, num in enumerate(self.numbers_to):
            self.numbers_fr[i] = num
    
    def move_n(self):
        self.numbers_to[0] = self.numbers_fr[1]
        self.numbers_to[1] = self.numbers_fr[5]
        self.numbers_to[2] = self.numbers_fr[2]
        self.numbers_to[3] = self.numbers_fr[3]
        self.numbers_to[4] = self.numbers_fr[0]
        self.numbers_to[5] = self.numbers_fr[4]
        self.copy_numbers()
        return self.numbers_to

    def move_s(self):
        self.numbers_to[0] = self.numbers_fr[4]
        self.numbers_to[1] = self.numbers_fr[0]
        self.numbers_to[2] = self.numbers_fr[2]
        self.numbers_to[3] = self.numbers_fr[3]
        self.numbers_to[4] = self.numbers_fr[5]
        self.numbers_to[5] = self.numbers_fr[1]
        self.copy_numbers()
        return self.numbers_to

    def move_w(self):
        self.numbers_to[0] = self.numbers_fr[2]
        self.numbers_to[1] = self.numbers_fr[1]
        self.numbers_to[2] = self.numbers_fr[5]
        self.numbers_to[3] = self.numbers_fr[0]
        self.numbers_to[4] = self.numbers_fr[4]
        self.numbers_to[5] = self.numbers_fr[3]
        self.copy_numbers()
        return self.numbers_to

    def move_e(self):
        self.numbers_to[0] = self.numbers_fr[3]
        self.numbers_to[1] = self.numbers_fr[1]
        self.numbers_to[2] = self.numbers_fr[0]
        self.numbers_to[3] = self.numbers_fr[5]
        self.numbers_to[4] = self.numbers_fr[4]
        self.numbers_to[5] = self.numbers_fr[2]
        self.copy_numbers()
        return self.numbers_to

    # 右方向に回転
    def move_r(self):
        self.numbers_to[0] = self.numbers_fr[0]
        self.numbers_to[1] = self.numbers_fr[2]
        self.numbers_to[2] = self.numbers_fr[4]
        self.numbers_to[3] = self.numbers_fr[1]
        self.numbers_to[4] = self.numbers_fr[3]
        self.numbers_to[5] = self.numbers_fr[5]
        self.copy_numbers()
        return self.numbers_to    

# 六面が同じがチェック
def is_same():
    for i in range(0, 6):
        if dice1.numbers_to[i] != dice2.numbers_to[i]:
            return False
            break
        elif i == 5:
            return True

# 上面固定で、右回転しながら同じかチェック
def check():
    for i in range(4):
        if is_same():
            return True
        dice2.move_r()
    return False

# サイコロの目を入力、セット
numbers1 = list(map(int, input().split()))
numbers2 = list(map(int, input().split()))
dice1 = Dice(numbers1)
dice2 = Dice(numbers2)

# ６面が一度ずつ上面になるように動かす順番で関数をリスト化
rotate_fn = [dice2.move_n, dice2.move_w, dice2.move_n, dice2.move_w, dice2.move_n]

# リストの関数を呼びながらチェックしていく
for i in range(len(rotate_fn) + 1):
    if check():
        print("Yes")
        break
    elif i == len(rotate_fn):
        print("No")
        break

    rotate_fn[i]()

