from itertools import accumulate

n, m = map(int, input().split())
A = list(map(int, input().split()))
mod = 998244353

_ = 2000  # _!まで求める
fact = [1, 1]  # 階乗の元テーブル
fact_inv = [1, 1]  # 階乗の逆元テーブル
inv = [0, 1]  # 逆元テーブル

# 前処理 O(n)
for i in range(2, _+1):
    fact.append((fact[-1] * i) % mod)
    inv.append((-inv[mod%i] * (mod//i)) % mod)
    fact_inv.append((fact_inv[-1] * inv[-1]) % mod)


# dp[i][j] = i色目まで使って、j個塗った時の場合の数
dp = [[0]*(n+1) for _ in range(m+1)]
dp[0][0] = 1

for i in range(m):
    tmp = [dp[i][j]*fact[n-j]%mod for j in range(n+1)]
    acc = [0] + list(accumulate(tmp))
    for j in range(n+1):
        dp[i+1][j] = (acc[j+1] - acc[max(j-A[i], 0)]) * fact_inv[n-j] % mod

# for d in dp:
#     print(d)
print(dp[-1][-1])
