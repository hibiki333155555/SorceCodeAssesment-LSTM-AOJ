from collections import deque
import sys
import math
sys.setrecursionlimit(10**9)
def lcm(a,b):
  return a*b//math.gcd(a,b)

input=sys.stdin.readline
n,m=map(int,input().split())
G=[[] for i in range(n)]
for i in range(m):
  a,b,c=map(int,input().split())
  G[a-1].append((b-1,c))

dpmin=[float('inf')]*n
dpmax=[0]*n

dpmin[0]=1
dpmax[0]=1
flag=True
def dfs(now,c,lc):
  global flag
  if now==0 and flag:
    flag=False
    for nxt,cost in G[0]:
      dfs(nxt,cost,1)
  else:
    new=lcm(c,lc)
    if dpmin[now]>new:
      dpmin[now]=new
      for nxt,cost in G[now]:
        dfs(nxt,cost,new)
    if dpmax[now]<new:
      dpmax[now]=new
      for nxt,cost in G[now]:
        dfs(nxt,cost,new)

dfs(0,-1,-1)
if dpmax[-1]==0:print('IMPOSSIBLE')
else:
  print(dpmin[-1],dpmax[-1])



