using System;
using System.Collections.Generic;
using System.Linq;

internal class Program
{
    public static void Main()
    {
        if (new System.Diagnostics.StackFrame(1).GetMethod() == null)
            Console.SetOut(new System.IO.StreamWriter(Console.OpenStandardOutput()) { AutoFlush = false });

        Console.ReadLine();
        var cs = new Counting(Console.ReadLine().Split().Select(int.Parse).ToArray());
        Console.WriteLine(cs.Sort().StringJoin(" "));

        Console.Out.Flush();
    }
}

class Counting
{
    int[] A;
    int[] C;
    int k = 10000;
    public Counting(int[] A)
    {
        this.A = A;
        this.C = new int[k + 1];
    }
    public int[] Sort()
    {
        foreach (var a in A)
        {
            C[a]++;
        }
        for (int i = 1; i < k + 1; i++)
        {
            C[i] += C[i - 1];
        }
        var B = new int[A.Length];
        foreach (var a in A.Reverse())
        {
            B[--C[a]] = a;
        }
        return B;

    }
}

internal static class Extensions
{
    public static string StringJoin<T>(this IEnumerable<T> values, string separator) => string.Join(separator, values);
}
