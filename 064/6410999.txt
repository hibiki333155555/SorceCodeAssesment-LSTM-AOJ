#include <iostream>
using namespace std;
const int N = 500010,INF = 2e9;
int n,cnt = 0;
int a[N];
int l[N/2],r[N/2];
void merge (int left,int mid,int right) {
	int n1 = mid-left;
	int n2 = right-mid;
	for (int i = 0;i < n1;i++) l[i] = a[left+i];
	for (int i = 0;i < n2;i++) r[i] = a[mid+i];
	l[n1] = r[n2] = INF;
	int i = 0,j = 0;
	for (int k = left;k < right;k++) {
		cnt++;
		if (l[i] <= r[j]) a[k] = l[i++];
		else a[k] = r[j++];
	}
}
void merge_sort (int l,int r) {
	if (l+1 < r) {
		int mid = (l+r)/2;
		merge_sort (l,mid);
		merge_sort (mid,r);
		merge (l,mid,r);
	}
}
int main () {
	cin >> n;
	for (int i = 0;i < n;i++) cin >> a[i];
	merge_sort (0,n);
	cout << a[0];
	for (int i = 1;i < n;i++) cout << ' ' << a[i];
	cout << endl << cnt << endl;
    return 0;
}
