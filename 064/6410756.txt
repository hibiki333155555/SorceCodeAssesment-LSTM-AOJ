#include "iostream"
#include "climits"
#include "list"
#include "queue"
#include "stack"
#include "set"
#include "functional"
#include "algorithm"
#include "string"
#include "map"
#include "unordered_map"
#include "unordered_set"
#include "iomanip"
#include "cmath"
#include "random"
#include "bitset"
#include "cstdio"
#include "numeric"
#include "cassert"
#include "ctime"

using namespace std;

//constexpr long long int MOD = 1000000007;
constexpr long long int MOD = 998244353;
constexpr double EPS = 1e-8;

//int N, M, K, T, H, W, L, R;
long long int N, M, K, T, H, W, L, R;

int main() {
	ios::sync_with_stdio(false);
	cin.tie(0);

	cin >> N >> K;
	auto st = clock();
	vector<int>u;
	vector<int>v;
	vector<int>d;
	for (int i = 0; i < N; i++) {
		cin >> M;
		while (M--) {
			cin >> L >> R;
			L--;
			u.push_back(i);
			v.push_back(L);
			d.push_back(R);
		}
	}
	M = u.size();
	deque<vector<pair<long long, long long>>>bs(1);
	vector<pair<long long, long long>>box;
	bs[0].resize(100);
	for (int i = 0; i < N; i++) {
		if (i < 50) {
			bs[0][i].first |= 1LL << i;
		}
		else {
			bs[0][i].second |= 1LL << (i - 50);
		}
	}
	set<pair<vector<pair<long long, long long>>, int>>s;
	s.insert({ bs[0],0 });
	for (int i = 1; i <= K; i++) {
		vector<pair<long long, long long>>nx(N);
		for (int j = 0; j < M; j++) {
			if (d[j] <= i) {
				nx[v[j]].first |= bs[i - d[j]][u[j]].first;
				nx[v[j]].second |= bs[i - d[j]][u[j]].second;
			}
		}

		bs.push_back(nx);
		auto it = s.lower_bound({ nx,0 });
		if (it != s.end() && it->first == nx) {
			int loop = i - it->second;
			for (int j = i; j >= 0; j--) {
				if (j % loop == K % loop) {
					box = bs[j];
					break;
				}
			}
			break;
		}
		auto ed = clock();
		if ((ed - st) * 1000 / CLOCKS_PER_SEC > 3500) {
			return 0;
		}
		if (i == K) {
			box = nx;
		}
	}

	vector<int>ans;
	for (int i = 0; i < N; i++) {
		bool ok = true;
		for (int j = 0; j < N; j++) {
			if (j < 50) {
				if (box[i].first >> j & 1) {

				}
				else {
					ok = false;
				}
			}
			else {
				if (box[i].second >> (j - 50) & 1) {

				}
				else {
					ok = false;
				}
			}
		}
		if (ok) {
			ans.push_back(i);
		}
	}
	cout << ans.size() << endl;
	for (auto i : ans)cout << i + 1 << " ";
	cout << endl;
}
