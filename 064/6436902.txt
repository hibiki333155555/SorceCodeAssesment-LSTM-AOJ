#include <iostream>
#include <vector>
#include <array>
#include <algorithm>
#include <math.h>
#include <iomanip>
#include <map>
#include <queue>
#include <climits>

using namespace std;
typedef long long ll;
typedef unsigned long long ull;
typedef unsigned int ui;

ull gcd (ull a, ull b) {
  if(b == 0) return a;

  return gcd(b, a % b);
}

ull lcm (ull a, ull b){
  // バッファ溢れを抑えるために順番大事！！！
  return a / gcd(a, b) * b;
}

ull calcDigitLength(ull n, int count) {
  if(n < 10) return count + 1;

  return calcDigitLength(n/10, count+1);
}

const ll MAX_N = 100000000;

int main () {
  int n;
  cin >> n;

  vector<vector<int>> vec(n);
  vector<int> cost(n);

  for(int i=0; i<n; i++) cost[i] = MAX_N;

  cost[0] = 0;

  for(int i = 0; i < n; i++) {
    for(int j = 0; j < n; j++) {
        int a;
        cin >> a;
        a;
        vec[i].push_back(a);

        // cout << vec[i][j] << " ";
    }
    // cout << endl;
  }

  queue<int> que;

  que.push(0);

  while(que.size() > 0) {
    int start_p = que.front();

    for(int i = 0; i < n; i++) {
      if(vec[start_p][i] != -1 && vec[start_p][i] < cost[i]) {
        cost[i] = vec[start_p][i];
        que.push(i);
      }
    }
    que.pop();
  }

  int res = 0;

  for(int i = 0; i < n; i++) {
    res += cost[i];
    // cout << i << " " << cost[i] << endl;
  }

  cout << res << endl;
}

