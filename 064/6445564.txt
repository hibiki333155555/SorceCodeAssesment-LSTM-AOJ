#include <algorithm>
#include <bits/stdc++.h>
#include <cmath>
using namespace std;
using ll = long long;
template <typename T> using MaxHeap = priority_queue<T>;
template <typename T> using MinHeap = priority_queue<T, vector<T>, greater<T>>;
#define rep(i, n) for (ll i = 0; i < (ll)(n); i++)
#define ff first
#define ss second
#define pii pair<int, int>
#define pll pair<ll, ll>
#define all(a) a.begin(), a.end()
template <typename T> bool chmin(T &a, const T &b) {
    if (a > b) {
        a = b;
        return true;
    }
    return false;
}
template <typename T> bool chmax(T &a, const T &b) {
    if (a < b) {
        a = b;
        return true;
    }
    return false;
}

int main() {
    while(1){
        ll n;
        cin>>n;
        if(n == 0)break;
        MinHeap<pair<double, string>>mp;
        rep(q, n){
            string l;
            ll p,a,b,c,d,e,f,s,m;
            cin>>l>>p>>a>>b>>c>>d>>e>>f>>s>>m;
            double kouritu = -1*(f*s*m-p)/(double)(a+b+c+m*(d+e));
            mp.push({kouritu, l});
        }
        while(!mp.empty()){
            auto c = mp.top();
            mp.pop();
            cout<<c.ss<<endl;
        }
        cout<<"#"<<endl;
    }
}

