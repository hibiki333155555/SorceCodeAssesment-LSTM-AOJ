//#include <atcoder/all>
#include <algorithm>
#include <bitset>
#include <complex>
#include <deque>
#include <exception>
#include <fstream>
#include <functional>
#include <iomanip>
#include <ios>
#include <iosfwd>
#include <iostream>
#include <istream>
#include <iterator>
#include <limits>
#include <list>
#include <locale>
#include <map>
#include <memory>
#include <new>
#include <numeric>
#include <ostream>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <stdexcept>
#include <streambuf>
#include <string>
#include <typeinfo>
#include <utility>
#include <valarray>
#include <vector>
#include <array>
#include <atomic>
#include <chrono>
#include <condition_variable>
#include <forward_list>
#include <future>
#include <initializer_list>
#include <mutex>
#include <random>
#include <ratio>
#include <regex>
#include <scoped_allocator>
#include <system_error>
#include <thread>
#include <tuple>
#include <typeindex>
#include <type_traits>
#include <unordered_map>
#include <unordered_set>
using namespace std;
typedef long long ll;
typedef pair<ll,ll> pll;
typedef vector<int> vint;
typedef vector<vector<int> > vvint;
typedef vector<long long> vll;
typedef vector<vector<long long> > vvll;
typedef vector<pair<ll,ll>> vpll;
typedef vector<string> vst;
typedef vector<bool> vbo;
typedef vector<vector<bool>> vvbo;
#define rep(i,a,b) for(int i=a;i<b;i++)
#define rrep(i,a,b) for(int i=a;i>=b;i--)
#define ALL(v) (v).begin(),(v).end()
#define RALL(v) (v).rbegin(),(v).rend()
ll gcd(ll a,ll b){return a?gcd(b%a,a):b;}
ll lcm(ll a,ll b){return a / gcd(a,b) * b;}
void oye(){cout << "Yes" << endl;}
void ono(){cout << "No"  << endl;}

int main() {
  
  ios::sync_with_stdio(false);
  cin.tie(0);
  ll m,n,ans=1e9,dum;cin>>m>>n;
  ll g=m*n;
  vst s(m);
  rep(i,0,m){
    cin>>s[i];
  }
  rep(lb,0,m-1){
    dum=0;
    rep(i,0,m){
      rep(j,0,n){
        if(i>lb){
          if(s[i][j]=='x'){dum++;}
        }
        else{
          if(s[i][j]=='o'){dum++;}
        }
      }
    }
    ans=min(ans,min(dum,g-dum));
  }
  rep(lb,0,n-1){
    dum=0;
    rep(i,0,m){
      rep(j,0,n){
        if(j>lb){
          if(s[i][j]=='x'){dum++;}
        }
        else{
          if(s[i][j]=='o'){dum++;}
        }
      }
    }
    ans=min(ans,min(dum,g-dum));
  }
  cout<<ans<<endl;
}
