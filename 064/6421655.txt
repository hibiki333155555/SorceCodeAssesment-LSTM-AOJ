#include <bits/stdc++.h>
using namespace std;
#define rep(i,n) for(int (i)=0;(i)<(n);(i)++)
#define ll long long
#define pp pair<ll,ll>
#define ld long double
#define all(a) (a).begin(),(a).end()
#define mk make_pair
#define difine define
constexpr int inf=2000001000;
constexpr ll INF=2e18;
constexpr ll mod=1000000007;
constexpr ll MOD=998244353;
int dx[4]={0,0,-1,1},dy[4]={-1,1,0,0};

 
// #include <atcoder/all>
// typedef atcoder::modint1000000007 mint;
// typedef atcoder::modint998244353 mint;

int main() {
  int h,w;
  cin >> h >> w;
  vector<vector<int>> a(h+2,vector<int>(w+2,1));
  int sx,sy,tx,ty;
  rep(i,h){
      string s;
      cin >> s;
      rep(j,w){
          if (s[j]=='S'){
              a[i+1][j+1]=0;
              sy=i+1;
              sx=j+1;
          }
          if (s[j]=='V'){
              a[i+1][j+1]=0;
              ty=i+1;
              tx=j+1;
          }
          if (s[j]=='.') a[i+1][j+1]=0;
      }
  }
  int m;
  cin >> m;
  vector<tuple<int,int,int>> e(m);
  rep(i,m){
      int f,g,h;
      cin >> f >> g >> h;
      h--;
      e[i]={h,f,g};
  }
  sort(all(e));
  e.push_back({inf,-1,-1});
  queue<pair<int,int>> q;
  q.push({sy,sx});
  int p=h+2;
  vector<vector<int>> d(p*2,vector<int>(w+2,inf));
  d[sy][sx]=0;
  int now=0;
  while(!q.empty()){
      auto [f,g]=q.front();
      q.pop();
    //   cout << f << "a" << g << " " << d[f][g] << endl;
      while(true){
          auto [ff,gg,hh]=e[now];
          if (ff<=d[f][g]){
              now++;
              a[gg][hh]=1;
          }
          else break;
      }
      rep(i,4){
          int y=f+dy[i],x=g+dx[i];
        //   cout << x << " " << y << endl;
          if (x==tx && y==ty) y+=p;
          if (a[(f+dy[i])%p][g+dx[i]]==1) continue;
          if (d[y][x]>d[f][g]+1){
              d[y][x]=d[f][g]+1;
              q.push({y,x});
          }
      }
  }
  if (d[sy+p][sx]==inf) cout << "No" << endl;
  else cout << "Yes" << endl;
}

