#include<iostream>
#include<vector>
#include<queue>
#include<set>
using namespace std;
int gcd(int a,int b)
{
	while(b)
	{
		int t=a%b;
		a=b;
		b=t;
	}
	return a;
}
int lcm(int a,int b){return a/gcd(a,b)*b;}
int N,M;
vector<pair<int,int> >G[1000];
set<int>vis[1000];
int main()
{
	cin>>N>>M;
	for(int i=0;i<M;i++)
	{
		int u,v,c;cin>>u>>v>>c;
		G[u-1].push_back(make_pair(v-1,c));
	}
	queue<pair<int,int> >Q;
	vis[0].insert(1);
	Q.push(make_pair(0,1));
	while(!Q.empty())
	{
		int u=Q.front().first,c=Q.front().second;
		Q.pop();
		for(pair<int,int>e:G[u])
		{
			int v=e.first;
			int nc=lcm(c,e.second);
			if(vis[v].find(nc)==vis[v].end())
			{
				vis[v].insert(nc);
				Q.push(make_pair(v,nc));
			}
		}
	}
	if(vis[N-1].empty())cout<<"IMPOSSIBLE"<<endl;
	else cout<<*vis[N-1].begin()<<" "<<*vis[N-1].rbegin()<<endl;
}

