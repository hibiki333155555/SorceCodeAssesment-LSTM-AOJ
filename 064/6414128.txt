#include <iostream>
using namespace std;
const int N = 200010,INF = INT_MAX;
int n;
int a[N]; 
int l[N/2],r[N/2];
long long merge (int left,int mid,int right) {
	long long cnt = 0;
	int n1 = mid-left;
	int n2 = right-mid;
	for (int i = 0;i < n1;i++) l[i] = a[left+i];
	for (int i = 0;i < n2;i++) r[i] = a[mid+i];
	l[n1] = r[n2] = INF;
	int i = 0,j = 0;
	for (int k = left;k < right;k++) {
		if (l[i] <= r[j]) a[k] = l[i++];
		else {
			a[k] = r[j++];
			cnt += n1-i;
		}
	}
	return cnt;
}
long long merge_sort (int l,int r) {
	long long v1,v2,v3;
	int mid;
	if (l+1 < r) {
		mid = (l+r)/2;
		v1 = merge_sort (l,mid);
		v2 = merge_sort (mid,r);
		v3 = merge (l,mid,r);
		return v1+v2+v3;
	}
	return 0;
}
int main () {
	cin >> n;
	for (int i = 0;i < n;i++) cin >> a[i];
	long long ans = merge_sort (0,n);
	cout << ans << endl;
    return 0;
}
