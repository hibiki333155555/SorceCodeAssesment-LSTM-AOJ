#include <iostream>
#include <vector>

using namespace std;

pair<int, int> f(vector<pair<int, int>>& V, vector<vector<int>>& U, const vector<int> P, int u)
{
	if (V[u].first < 0) {
		U.resize(U.size() + 1);
		auto& UU = U.back();
		for (int j = u, uu = (int) U.size() - 1; j >= 0; j = P[j]) {
			auto [ui, uii] = V[j];
			if (ui >= 0) {
				for (int k = uii; k < (int) U[ui].size(); ++k) UU.push_back(U[ui][k]);
				break;
			}
			UU.push_back(j);
			V[j] = {uu, (int) UU.size() - 1};
		}
	}
	return V[u];
}

int main()
{
	int n; cin >> n;
	vector<int> P(n); P[0] = -1;
	for (int i = 0, k; i < n; ++i) {
		cin >> k;
		for (int j = 0, c; j < k; ++j, P[c] = i) cin >> c;
	}
	int q; cin >> q;
	vector<vector<int>> U;
	vector<pair<int, int>> V(n, {-1, -1});
	for (int i = 0, u, v, a = 0; i < q; ++i) {
		cin >> u >> v;
		auto [ui, uu] = f(V, U, P, u);
		auto [vi, vv] = f(V, U, P, v);
		for (
			int j = (int) U[ui].size() - 1, k = (int) U[vi].size() - 1;
			j >= uu && k >= vv && U[ui][j] == U[vi][k];
			--j, --k
		) a = U[ui][j];
		cout << a << endl;
	}
	return 0;
}

