#include<bits/stdc++.h>
#define rep(i,a,...) for(int i = (a)*(strlen(#__VA_ARGS__)!=0);i<(int)(strlen(#__VA_ARGS__)?__VA_ARGS__:(a));++i)
#define per(i,a,...) for(int i = (strlen(#__VA_ARGS__)?__VA_ARGS__:(a))-1;i>=(int)(strlen(#__VA_ARGS__)?(a):0);--i)
#define foreach(i, n) for(auto &i:(n))
#define all(x) (x).begin(), (x).end()
#define bit(x) (1ll << (x))
#define lambda(RES_TYPE, ...) (function<RES_TYPE(__VA_ARGS__)>)[&](__VA_ARGS__) -> RES_TYPE
#define method(FUNC_NAME, RES_TYPE, ...) function<RES_TYPE(__VA_ARGS__)> FUNC_NAME = lambda(RES_TYPE, __VA_ARGS__)
using namespace std;
using ll = long long;
using pii = pair<int,int>;
using pll = pair<ll,ll>;
//const ll MOD = (ll)1e9+7;
const ll MOD = 998244353;
const int INF = (ll)1e9+7;
const ll INFLL = (ll)1e18;
template<class t>
using vvector = vector<vector<t>>;
template<class t>
using vvvector = vector<vector<vector<t>>>;
template<class t>
using priority_queuer = priority_queue<t, vector<t>, greater<t>>;
template<class t, class u> bool chmax(t &a, u b){if(a<b){a=b;return true;}return false;}
template<class t, class u> bool chmin(t &a, u b){if(a>b){a=b;return true;}return false;}
#ifdef DEBUG
#define debug(x) cout<<"LINE "<<__LINE__<<": "<<#x<<" = "<<x<<endl;
#else
#define debug(x) (void)0
#endif

namespace templates{
    ll modpow(ll x, ll b,ll mod=MOD){
        ll res = 1;
        while(b){
            if(b&1)res = res * x % mod;
            x = x * x % mod;
            b>>=1;
        }
        return res;
    }

    ll modinv(ll x){
        return modpow(x, MOD-2);
    }

    bool was_output = false;

    void print();
    template <class t> void print(const vector<t> &);
    template <class t, class u> void print(const pair<t, u> &);
    template <class t> void print(const t&);
    template <class Head, class... Tail> void print(const Head&, const Tail&...);

    template <class t> void println(const vector<vector<t>>&);
    template <class t> void println(const vector<t>&);
    template <class t> void println(const t&);
    template <class Head, class... Tail> void println(const Head&, const Tail&...);
    void println();
    void newline();

    void print(){
        return;
    }

    template <class t>
    void print(const vector<t>&x){
        for(const t&i:x)print(i);
    }
    template <class t, class u>
    void print(const pair<t,u>&p){
        print(p.first);
        print(p.second);
    }
    template <class t>
    void print(const t&x){
        if(was_output)cout<<" ";
        cout<<x;
        was_output = true;
    }
    template <class Head, class... Tail>
    void print(const Head&head,const Tail&...tail){
        print(head);
        print(tail...);
    }

    template<class t>
    void println(const vector<vector<t>>&x){
        for(vector<t> i:x)println(i);
    }
    template<class t>
    void println(const vector<t>&x){
        for(const t&i:x)print(i);
        println();
    }
    template <class t>
    void println(const t&x){
        print(x);
        println();
    }
    void println(){
        if(was_output){
            cout << endl;
            was_output = false;
        }
    }
    template <class Head, class... Tail>
    void println(const Head&head,const Tail&...tail){
        print(head);
        println(tail...);
    }

    void newline(){
        was_output = true;
        println();
    }

    template<class t>
    istream& operator>>(istream&is, vector<t>&x){
        for(auto &i:x)is >> i;
        return is;
    }

    template<class t, class u>
    istream& operator>>(istream&is, pair<t, u>&x){
        is >> x.first >> x.second;
        return is;
    }

    template<class t>
    ostream& operator<<(ostream&os, vector<t> &v){
        os << "{";
        for(t &i:v){
            os << i << ", ";
        }
        os << "}";
        return os;
    }

    template<class t = long long>
    t in(){
        t res; cin >> res; return res;
    }

    template<class t>
    vector<t> sorted(vector<t> line,function<bool(t,t)> comp=[](t a,t b){return a<b;}){
        sort(line.begin(),line.end(),comp);
        return line;
    }

    template<class t>
    vector<t> reversed(vector<t> line){
        reverse(line.begin(),line.end());
        return line;
    }
    string reversed(string str){
        reverse(str.begin(),str.end());
        return str;
    }

    long long gcd(long long a,long long b){
        while(b){
            a %= b;
            swap(a,b);
        }
        return a;
    }

    long long lcm(long long a,long long b){
        return a / gcd(a,b) * b;
    }

    class output_initializer{
    public:
        output_initializer(){
            ios::sync_with_stdio(false);
            cin.tie(nullptr);
            cout << setprecision(20);
        }
    };output_initializer OUTPUT_INITIALIZER_INSTANCE = output_initializer();
}

using namespace templates;

class Move {
public:
    int x;
    int y;
    int last;
    int next;
    Move(int x,int y,int last,int next):x(x),y(y),last(last),next(next){}
    Move(int x,int y,int last):Move(x,y,last,-1){}
    Move(int x,int y):Move(x,y,-1){}
    Move():Move(0,0,-1){}
    bool canMove(int nextDir){
        return last < 0 or (last - nextDir + 4) % 4 != 2 and
            (next < 0 or next == nextDir);
    }
    Move moved(int nextDir){
        const int dx[] = {1,0,-1,0};
        const int dy[] = {0,1,0,-1};
        return Move(x+dx[nextDir],y+dy[nextDir],nextDir);
    }
    Move withNext(int dir){
        return Move(x,y,last,dir);
    }
    pii position()const{
        return pii(x,y);
    }
};

bool operator<(const Move &a, const Move &b){
    return array<int,4>({a.x,a.y,a.last,a.next}) < array<int,4>({b.x,b.y,b.last,b.next});
}
    

set<pii> func(){
    int n = in();
    int x0 = in();
    int y0 = in();
    int t = in();
    vvvector<int> oks(51,vvector<int>(51,vector<int>(4,false)));
    rep(i,n){
        int x0 = in();
        int y0 = in();
        int x1 = in();
        int y1 = in();
        if(x0>x1)swap(x0,x1);
        if(y0>y1)swap(y0,y1);
        if(y0==y1){
            rep(x,x0,x1+1){
                if(x!=x0)oks[x][y0][2] = true;
                if(x!=x1)oks[x][y0][0] = true;
            }
        }else{
            rep(y,y0,y1+1){
                if(y!=y0)oks[x0][y][3] = true;
                if(y!=y1)oks[x0][y][1] = true;
            }
        }
    }
    method(moved,vector<Move>,Move p){
        vector<Move> res;
        rep(i,4){
            if(not p.canMove(i))continue;
            Move mp = p.moved(i);
            if(oks[p.x][p.y][i]){
                res.emplace_back(mp);
            }
        }
        return res;
    };
    method(movedTimes,set<Move>,Move p,int time,int dir){
        set<Move> res;
        method(rec,void,Move p,int t){
            if(t==time){
                if(p.last==dir){
                    res.emplace(p);
                }else if(oks[p.x][p.y][dir]){
                    res.emplace(p.withNext(dir));
                }
                return;
            }
            foreach(np,moved(p)){
                rec(np,t+1);
            }
        };
        rec(p,0);
        return res;
    };
    set<Move> current;
    {
        rep(i,4){
            if(oks[x0][y0][i])current.emplace(x0,y0,i);
        }
    }
    rep(_,t){
        int T = in();
        char D = in<char>();
        int dir;
        switch(D){
        case 'E':
            dir = 0;
            break;
        case 'N':
            dir = 1;
            break;
        case 'W':
            dir = 2;
            break;
        case 'S':
            dir = 3;
            break;
        }
        set<Move> ncurrent;
        foreach(e,current){
            foreach(i,movedTimes(e,T,dir)){
                ncurrent.emplace(i);
            }
        }
        current = ncurrent;
    }
    set<pii> res;
    foreach(i,current)res.emplace(i.position());
    return res;
}

int main(){
    ios::sync_with_stdio(false);
    cin.tie(nullptr);
    foreach(i,func())println(i);
    return 0;
}

