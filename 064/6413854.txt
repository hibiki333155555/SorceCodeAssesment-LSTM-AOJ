#include<bits/stdc++.h>
using namespace std;
typedef long long int ll;
typedef unsigned long long int ull;
#define chmin(x,y) x = min(x,y)
#define chmax(x,y) x = max(x,y)
#define BIG_NUM 2000000000
#define HUGE_NUM 4000000000000000000 //オーバーフローに注意
#define MOD 1000000007
#define EPS 0.000000001


#define SIZE 2005

enum Type{
	Sente,
	Gote,
	Undef,
};

int N;
Type dp[2][3][SIZE][SIZE],REV[2] = {Gote,Sente};

Type dfs(Type type,int mod,int num1,int num2){

	if(dp[type][mod][num1][num2] != Undef){

		return dp[type][mod][num1][num2];
	}

	int sum = num1 + 2*num2;

	if(mod == 0 && sum < 2*N){

		if(num1 == 0 && num2 == 0){

			return type;

		}else{

			bool FLG = false;

			//1→0にする
			if(num1 > 0){
				if(dfs(REV[type],mod+1,num1-1,num2+1) == type){

					FLG = true;
				}
			}

			//2→0にする
			if(dfs(REV[type],mod+1,num1,num2) == type){

				FLG = true;
			}
			//2→1にする
			if(dfs(REV[type],mod+1,num1+1,num2) == type){

				FLG = true;
			}

			if(FLG){

				return dp[type][mod][num1][num2] = type;

			}else{

				return dp[type][mod][num1][num2] = REV[type];
			}
		}


	}else{

		if(num1 == 0 && num2 == 0){

			return REV[type];

		}else{

			bool FLG = false;

			//1→0にする
			if(num1 > 0){
				if(dfs(REV[type],(mod+1)%3,num1-1,num2) == type){

					FLG = true;
				}
			}


			if(num2 > 0){
				//2→0にする
				if(dfs(REV[type],(mod+1)%3,num1,num2-1) == type){

					FLG = true;
				}
				//2→1にする
				if(dfs(REV[type],(mod+1)%3,num1+1,num2-1) == type){

					FLG = true;
				}
			}

			if(FLG){

				return dp[type][mod][num1][num2] = type;

			}else{

				return dp[type][mod][num1][num2] = REV[type];
			}
		}
	}
}

int main(){

	scanf("%d",&N);

	for(int i = 0; i < 2; i++){
		for(int k = 0; k < 3; k++){
			for(int a = 0; a < SIZE; a++){
				for(int b = 0; b < SIZE; b++){

					dp[i][k][a][b] = Undef;
				}
			}
		}
	}

	Type ret = dfs(Sente,0,0,N);

	if(ret == Sente){

		printf("Alice\n");

	}else{

		printf("Bob\n");
	}

	return 0;
}

