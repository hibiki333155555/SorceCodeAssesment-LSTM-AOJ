from collections import defaultdict
inpl = lambda oneindex=False: list(map(lambda x: int(x)-int(bool(oneindex)),input().split()))
N, M = inpl()
events = []
for _ in range(N):
    A, B, C = inpl()
    events.append((B-1,C,A))
    events.append((C,-1,-A))
Q = int(input())
DE = [0]*M
for _ in range(Q):
    D, E = inpl()
    DE[E-1] += D
events.sort(reverse=True)
ans = 0
strength = 0
deadline = 0
portion = defaultdict(int)
for i in range(M):
    while events and events[-1][0] == i:
        _ , d, a = events.pop()
        if d > deadline:
            deadline = d
        strength += a
    strength -= portion[i]
    if DE[i] > 0 and strength == 0:
        print(-1)
        exit()
    elif DE[i] > strength:
        p = DE[i] - strength
        ans += p
        strength += p
        portion[deadline] += p
print(ans)

