#include <iostream>
using namespace std;

// insertionSort(A, n, g)
//       for i = g to n-1
//           v = A[i]
//           j = i - g
//           while j >= 0 && A[j] > v
//               A[j+g] = A[j]
//               j = j - g
//               cnt++
//           A[j+g] = v

//  shellSort(A, n)
//      cnt = 0
//      m = ?
//      G[] = {?, ?,..., ?}
//      for i = 0 to m-1
//          insertionSort(A, n, G[i])
int cnt=0;
void insertionSort(int* A, int n, int g){
    for(int i=g; i<n; i++){
        int v=A[i];
        int j = i-g;
        while( j >= 0 && A[j] > v){
            A[j+g] = A[j];
            j = j - g;
            cnt++;
        }
        A[j+g] = v;
    } 
}


//  shellSort(A, n)
//      cnt = 0
//      m = ?
//      G[] = {?, ?,..., ?}
//      for i = 0 to m-1
//          insertionSort(A, n, G[i])
int main(){
    int n, a[1000];
    cin >> n;
    for(int i=0; i<n; i++){
        cin >> a[i];
    }
    int g[100], m=0, nn=n;
    while(nn!=1){
        nn/=2;
        g[m++] = nn;
    }
    cout << m << endl;
    for(int i=0; i<m; i++){
        cout << g[i] << ' ';
    }
    cout << endl;
    for(int i=0; i<m; i++){
        insertionSort(a, n, g[i]);
    }
    cout << cnt << endl;
    for(int i=0; i<n; i++){
        cout << a[i] << endl;
    }
    return 0;
}
