#include <stdio.h>

struct cards
{
	char c[2];
};

int main(void)
{
	int i;
	int j;
	int mini;
	int count;
	struct cards t[36];
	struct cards p[36];
	struct cards swap;
	int flag;

	flag = 1;
	i = -1;
	scanf("%d", &count);
	while (++i < count)
	{
		scanf("%s",(t + i)->c);
		p[i] = t[i];
	}

	i = -1;
	while (++i < count)
	{
		j = count;
		while (--j > i)
			if (t[j].c[1] < t[j - 1].c[1])
			{
				swap.c[0] = t[j].c[0];
				swap.c[1] = t[j].c[1];
				t[j].c[0] = t[j - 1].c[0];
				t[j].c[1] = t[j - 1].c[1];
				t[j - 1].c[0] = swap.c[0];
				t[j - 1].c[1] = swap.c[1];
			}
	}
	i = -1;
	while (++i < count - 1)
		printf("%c%c ", t[i].c[0], t[i].c[1]);
	printf("%s\nStable\n", t[i].c);

	i = -1;
	while (++i < count)
	{
		mini = i;
		j = i;
		while (++j < count)
			if (p[j].c[1] < p[mini].c[1])
				mini = j;
		swap.c[0] = p[i].c[0];
		swap.c[1] = p[i].c[1];
		p[i].c[0] = p[mini].c[0];
		p[i].c[1] = p[mini].c[1];
		p[mini].c[0] = swap.c[0];
		p[mini].c[1] = swap.c[1];
	}
	i = -1;
	while (++i < count - 1)
		printf("%c%c ", p[i].c[0], p[i].c[1]);
	printf("%c%c\n", p[i].c[0], p[i].c[1]);

	i = -1;
	while (++i < count)
		if (t[i].c[0] != p[i].c[0] || t[i].c[1] != p[i].c[1])
			flag  = 0;
	if (flag == 0)
		printf("Not stable\n");
	else
		printf("Stable\n");

	return (0);
}


