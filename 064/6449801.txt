from collections import deque

n,m = map(int,input().split())
e = [[] for i in range(n)]

div = [2,4,8,16,3,9,5,7,11,13,17,19]
for _ in range(m):
    a,b,c = map(int,input().split())
    mask = 0
    for i,d in enumerate(div):
        if c%d == 0:
            mask |= 1<<i
    e[a-1].append((b-1,mask))

dp = [[0]*(1<<12) for i in range(n)]
dp[0][0] = 1
q = deque()
q.append((0,0))
while q:
    now,bit = q.popleft()
    for nex,mask in e[now]:
        nmask = bit|mask
        if dp[nex][nmask]:
            continue
        dp[nex][nmask] = 1
        q.append((nex,nmask))

if sum(dp[-1]) == 0:
    print("IMPOSSIBLE")
    exit()

mi = 10**30
ma = 0
for i in range(1<<12):
    if dp[-1][i] == 0:
        continue
    num = 1
    for j in range(6,12):
        if i >> j & 1:
            num *= div[j]
    for j in range(4)[::-1]:
        if i >> j & 1:
            num *= div[j]
            break

    for j in range(4,6)[::-1]:
        if i >> j & 1:
            num *= div[j]
            break

    mi = min(mi,num)
    ma = max(ma,num)

print(mi,ma)
