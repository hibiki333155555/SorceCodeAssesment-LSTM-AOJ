#include <iostream>
#include <vector>
#include <limits>
#include <algorithm>

constexpr int INF = (1<<30)-1;

int main() {
    int V, E; std::cin >> V >> E;
    std::vector<std::vector<int>> dp(V, std::vector<int>(V, INF));

    for (int i = 0; i < V; i++) dp[i][i] = 0;

    for (int i = 0; i < E; i++) {
        int a, b, c; std::cin >> a >> b >> c;
        dp[a][b] = c;
    }

    for (int k = 0; k < V; k++) {
        for (int i = 0; i < V; i++) {
            for (int j = 0; j < V; j++) {
                dp[i][j] = std::min(dp[i][j], dp[i][k] + dp[k][j]);
            }
        }
    }

    for (int i = 0; i < V; i++) {
        if (dp[i][i] < 0) {
            std::cout << "NEGATIVE CYCLE" << std::endl;
            return 0;
        }
    }

    for (int i = 0; i < V; i++) {
        for (int j = 0; j < V; j++) {
            if (j != 0) std::cout << " ";
            if (dp[i][j] == INF) {
                std::cout << "INF";
            } else {
                std::cout << dp[i][j];
            }
        }
        std::cout << std::endl;
    }
}
