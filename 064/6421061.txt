#!/usr/bin/env python3
import sys
import math
from functools import lru_cache
from heapq import heappush, heappop, heappushpop
from itertools import permutations, accumulate
from operator import itemgetter, le
from collections import deque, Counter, defaultdict
from bisect import bisect_right as br
from bisect import bisect_left as bl
inf = float('inf')
input=lambda: sys.stdin.readline().rstrip("\r\n")
def I(): return int(sys.stdin.readline())
def LI(): return list(map(int, sys.stdin.readline().split()))

s = input()
stack = []
for i in range(len(s)):
    if s[i] == ')':
        tmp = []
        while stack:
            t = stack.pop()
            if t == '(':
                n = int(stack.pop())
                tmp = ''.join(tmp[::-1])
                tmp2 = []
                for j in range(len(tmp)):
                    print(tmp[j], n)
                    tmp2.append(chr((ord(tmp[j])-ord('a')+n)%26 + ord('a')))
                stack.append(''.join(tmp2))
                break
            else:
                tmp.append(t)
    else:
        stack.append(s[i])
print(''.join(stack))       

