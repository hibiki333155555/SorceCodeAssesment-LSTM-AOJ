#define _USE_MATH_DEFINES
#include <bits/stdc++.h>
using namespace std;
#define FOR(i,m,n) for(int i=(m);i<(n);++i)
#define REP(i,n) FOR(i,0,n)
#define ALL(v) (v).begin(),(v).end()
using ll = long long;
constexpr int INF = 0x3f3f3f3f;
constexpr long long LINF = 0x3f3f3f3f3f3f3f3fLL;
constexpr double EPS = 1e-8;
constexpr int MOD = 1000000007;
// constexpr int MOD = 998244353;
constexpr int DY4[]{1, 0, -1, 0}, DX4[]{0, -1, 0, 1};
constexpr int DY8[]{1, 1, 0, -1, -1, -1, 0, 1};
constexpr int DX8[]{0, -1, -1, -1, 0, 1, 1, 1};
template <typename T, typename U>
inline bool chmax(T& a, U b) { return a < b ? (a = b, true) : false; }
template <typename T, typename U>
inline bool chmin(T& a, U b) { return a > b ? (a = b, true) : false; }
struct IOSetup {
  IOSetup() {
    std::cin.tie(nullptr);
    std::ios_base::sync_with_stdio(false);
    std::cout << fixed << setprecision(20);
  }
} iosetup;

int main() {
  constexpr int B = 30;
  int n; cin >> n;
  vector<int> a(n); REP(i, n) cin >> a[i];
  vector<pair<int, int>> op;
  int q; cin >> q;
  while (q--) {
    int t; cin >> t;
    if (t == 1) {
      int x, y; cin >> x >> y; --x; --y;
      op.emplace_back(x, y);
    } else if (t == 2) {
      op.pop_back();
    } else if (t == 3) {
      int k; cin >> k;
      vector dp(B, vector(n, -1));
      iota(ALL(dp[0]), 0);
      for (const auto [x, y] : op) swap(dp[0][x], dp[0][y]);
      REP(i, B - 1) REP(j, n) dp[i + 1][j] = dp[i][dp[i][j]];
      vector<int> nxt(n);
      REP(p, n) {
        int j = p;
        for (int i = 0, tmp = k; tmp > 0; ++i, tmp >>= 1) {
          if (tmp & 1) j = dp[i][j];
        }
        nxt[p] = a[j];
      }
      a.swap(nxt);
      // REP(i, n) cout << a[i] << " \n"[i + 1 == n];
    }
  }
  REP(i, n) cout << a[i] << " \n"[i + 1 == n];
  return 0;
}

