

#include <bits/stdc++.h>
#include <iostream>
#include <limits>
#include <numeric>
#include <type_traits>
#include <bitset>
#include <map>
#include <unordered_map>
#include <set>

using namespace std;

#define rep(i,n,m) for(ll (i)=(n);(i)<(m);(i)++)
#define rrep(i,n,m) for(ll (i)=(n);(i)>(m);(i)--)
using ll = long long;
const ll mod = 1000000007;//998244353;
const ll inf = 1e9;
const ll INF = 1e18;


void pline(vector<ll> lis){
    rep(i,0,lis.size()){
        printf ("%lld",lis[i]);
        if (i != lis.size()-1) printf(" ");
        else printf("\n");
    }
}

/*
void pmap(map<ll,mint>& lis){
    for (auto p : lis){
        printf ("%lld:%lld ,",p.first,p.second.val());
    }
    printf ("\n");
}*/

/*
void setxor(set<ll>& a,set<ll>& b){ // a ^= b
    for (ll x : b){
        if (a.count(x) > 0) a.erase(x);
        else a.insert(x);
    }
}

set<ll> setmin(set<ll> a,set<ll> b){

    auto aitr = a.begin();
    auto bitr = b.begin();

    while (aitr != a.end() && bitr != b.end()){
        if (*aitr < *bitr) return a;
        else if (*aitr > *bitr) return b;
        aitr++;
        bitr++;
    }

    if (*aitr == a.end()) return a;
    return b;

}
*/

int main(){

    ios::sync_with_stdio(false);
    std::cin.tie(nullptr);

    //ModFac mf(200000);

    ll N;
    cin >> N;

    vector<ll> A(N);
    rep(i,0,N) cin >> A[i];

    vector<ll> nmax(N+1,0);
    
    rep(pi,1,N+1){
        ll ind = pi + A[pi-1] - 1;
        nmax[ min(N,ind) ] += 1;
    }

    ll ans = 1;
    ll rem = 0;
    rep(i,1,N+1){
        rem += 1;
        rep(j,0,nmax[i]){
            ans *= rem;
            ans %= 998244353;
            rem -= 1;
        }
    }

    cout << ans << endl;
}

