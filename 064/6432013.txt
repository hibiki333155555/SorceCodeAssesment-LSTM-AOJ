#include<iostream>
using namespace std;

static const int MAX = 100000;
/*用来记录序列的数组*/
int C[MAX + 1] = {};

/*用来记录递增子序列的长度,L[i]表示考虑0到i号元素的长度*/
int Length[MAX + 1] = {};

/*用来记录考虑0到i元素时最大子递增子序列的最后一个元素*/
int Position[MAX + 1] = {};


void solve(int n)
{
	Position[1] = 1;
	Length[1] = 1;
	for (int i = 2; i <= n; i++)
	{
		int max = 1;
		Position[i] = i;
		for (int j = 1; j < i; j++)
		{
			if (Length[j] >= max)
			{
				max = Length[j];
				if (C[Position[j]] <= C[i])
				{
					max++;
					Position[i] = i;
				}
				else
				{
					if(max>1)
						Position[i] = Position[j];
					else
						Position[i] = i;
				}
			}
		}
		Length[i] = max;
	}
}
int main()
{
	int n = 0; cin >> n;
	for (int i = 1; i <= n; i++)
		cin >> C[i];
	solve(n);
	cout << Length[n] << endl;
}
