def TSP(G): #Gには距離行列を入れる。対角成分は0。辺がない頂点間はinf
    N = len(G)
    All = 1 << N
    dp = [[float('inf')]*N for _ in range(All)]
    dp[0][0] = 0
    
    for n in range(All):
        for i in range(N):
            for j in range(N): #iからjに移動する遷移
                if i == j or (1 << j) & n: #同じ頂点の場合 or jをすでに訪問済み
                    continue
                if dp[n][i] + G[i][j] < dp[n|(1<<j)][j]:
                    dp[n|(1<<j)][j] = dp[n][i] + G[i][j]
                
    return dp[-1][0]


V, E = map(int, input().split())
G = [[float('inf')]*V for _ in range(V)]
for _ in range(E):
    s, t, d = map(int, input().split())
    G[s][t] = d
         
ans = TSP(G)
if ans < float('inf'):
    print(ans)
else:
    print(-1)
