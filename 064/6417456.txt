#include <bits/stdc++.h>
using namespace std;
#define repl(i, l, r) for (int i = (l); i < (int)(r); ++i)
#define rep(i, n) repl(i, 0, n)
#define CST(x) cout << fixed << setprecision(x)
#define all(x) (x).begin(), (x).end()
#define sz(x) (int)(x).size()
using ll = long long;
constexpr ll MOD = 1000000007;
constexpr int inf = 1e9 + 10;
constexpr ll INF = (ll)4e18 + 10;
constexpr int dx[9] = {1, 0, -1, 0, 1, -1, -1, 1, 0};
constexpr int dy[9] = {0, 1, 0, -1, 1, 1, -1, -1, 0};
template <typename T>
using MaxHeap = priority_queue<T>;
template <typename T>
using MinHeap = priority_queue<T, vector<T>, greater<T>>;
template <typename T>
inline bool chmax(T &a, T b) {
    return ((a < b) ? (a = b, true) : (false));
}
template <typename T>
inline bool chmin(T &a, T b) {
    return ((a > b) ? (a = b, true) : (false));
}
template <typename T>
inline void yn(const T &a) {
    ((a) ? (cout << "Yes" << endl) : (cout << "No" << endl));
}
template <typename T>
inline void YN(const T &a) {
    ((a) ? (cout << "YES" << endl) : (cout << "NO" << endl));
}
int main() {
    cin.tie(nullptr);
    cout.tie(nullptr);
    ios::sync_with_stdio(false);

    int n, k;
    cin >> n >> k;
    int a[n];
    rep(i, n) cin >> a[i];

    vector<int> b;
    rep(i, n) {
        if (a[i] == 1) {
            b.emplace_back(4);
            b.emplace_back(1);
        } else {
            b.emplace_back(6 - a[i]);
        }
    }
    sort(all(b));
    reverse(all(b));

    int ans = accumulate(a, a + n, 0);
    rep(i, min(n, k)) ans += b[i];

    cout << ans << endl;
    return 0;
}
