#include <iostream>
#include <queue>

using namespace std;

queue<int> Q;
int d[100];
int G[100][100];
int n;
int visited[100];

void bfs(int start) {
  Q.push(start);
  d[start] = 0;
  while (!Q.empty()) {
    int front = Q.front();
    Q.pop();
    for (int i = 0; i < n; i++) {
      if (G[front][i] != 0 && !visited[i]) {
        visited[i] = 1;
        Q.push(i);
        d[i] = d[front] + 1;
      }
    }
  }
}

int main(void) {
  cin >> n;
  for (int i = 0; i < n; i++) {
    int to, m;
    cin >> to >> m;
    for (int k = 0; k < m; k++) {
      int v;
      cin >> v;
      G[to - 1][v - 1] = 1;
    }
  }
  bfs(0);
  for (int i = 0; i < n; i++) {
    printf("%d %d\n", i + 1, d[i]);
    cout << i + 1 << ' ' << d[i] << endl;
  }
}

