#include<stdio.h>
#include<iostream>
#include<limits.h>
using namespace std;
static const int MAX = 100;
static const int INF = INT_MAX;
int Graph[MAX][MAX];
int visited[MAX];
int mini_dis[MAX];
int parents[MAX];
int prim(int vertex) {
	mini_dis[0] = 0;
	parents[0] = -1;
	int u,minicost,sum=0;
	while (1) {
		minicost = INF;
		for (int i = 0; i < vertex; i++) {
			if (visited[i] != 2 && mini_dis[i] < minicost) {
				minicost = mini_dis[i];
				u = i;
			}
		}
		if (minicost == INF)
			break;
		visited[u] = 2;
		sum = sum + minicost;
		for (int i = 0; i < vertex; i++) {
			if (visited[i] == 2)
				u = i;
			for (int j = 0; j < vertex; j++) {
				if (visited[j] != 2 && Graph[u][j]!=-1 && Graph[u][j] < mini_dis[j]) {
					mini_dis[j] = Graph[u][j];
					parents[j] = u;
					visited[j] = 1;
				}
			}
		}
	}
	return sum;
}
int main() {
	int vertex;
	cin >> vertex;
	for (int i = 0; i < vertex; i++) {
		for (int j = 0; j < vertex; j++)
			cin >> Graph[i][j];
	}
	for (int i = 0; i < vertex; i++) {
		visited[i] = 0;
		mini_dis[i] = INF;
		parents[i] = i;
	}
	cout << prim(vertex) << endl;
	return 0;
}
