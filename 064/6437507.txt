def inversion_number(seq):
    from bisect import bisect 
    n = len(seq)
    res = [0]*n
    B = [(v, i) for i, v in enumerate(seq)]
    
    def count(arr):
        m = len(arr)
        mid = m//2
        lft, rgt = arr[:mid], arr[mid:]
        
        if len(lft) > 1:
            lft = count(lft)
        if len(rgt) > 1:
            rgt = count(rgt)
            
        R = [r[0] for r in rgt]
        for v, i in lft:
            idx = bisect(R, v)
            res[i] += idx
            
        return sorted(arr, key=lambda x:x[0])
    
    _ = count(B)
    return sum(res)


n = int(input())
A = list(map(int, input().split()))
ans = inversion_number(A)
print(ans)
