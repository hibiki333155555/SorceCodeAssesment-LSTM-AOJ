#include<bits/stdc++.h>

#define int ll
#define rep(i, N) for(int i = 0; i < (int)N; ++i)
#define rep1(i, N) for(int i = 1; i <= (int)N; ++i)
#define per(i, N) for(int i = N-1; i >= 0; --i)
#define per1(i, N) for(int i = N; i >= 1; --i)
#define FOR(i, f, t) for(int i = f; i < (int)t; ++i)
#define all(v) (v).begin(), (v).end()
#define rall(v) (v).rbegin(), (v).rend()
#define TakAo(ans) ans ? cout << "Takahashi\n" : cout << "Aoki\n"
#define YesNo(ans) ans ? cout << "Yes\n" : cout << "No\n"
#define endl '\n'
#define fi first
#define se second
#define pb push_back
#define eb emplace_back
#define mkpr make_pair
#define mktpl make_tuple
#define getpl(T, N) get<N>(T)

using namespace std;
using ll = int64_t;
using ull = uint64_t;
using ld = long double;

constexpr ld EPS = 1e-10;
constexpr ll INF = 1e18+10;
constexpr int MOD = 998244353;
constexpr int DIV2 = 499122177;
//constexpr int MOD = 1e9+7;
constexpr int NIL = -1;

ll cel(ll a, ll b){ return (a + b - 1) / b;}
ll Gcd(ll a, ll b){ return b ? Gcd(b, a % b) : a;}
ll sq(ll a){ return a * a;}
ll bit(ll n){ ll res = 1; while(res <= n) res <<= 1; return res;}
template<class T> bool chmin(T &a, T b){ return a > b ? (a = b) | 1 : 0;}
template<class T> bool chmax(T &a, T b){ return a < b ? (a = b) | 1 : 0;}

using P = pair<int, int>;
using Tpl = tuple<int, int, int>;
using vvi = vector<vector<int>>;
using vvl = vector<vector<ll>>;
using vvc = vector<vector<char>>;
using vvb = vector<vector<bool>>;
using vvp = vector<vector<P>>;

template<class T>
class SegTree{
    using Fnc = function<T(T, T)>;
    using Gnc = function<void(T&, T)>;
    T E = INT32_MAX;
    Fnc fnc = [](T a, T b){return min(a, b);};
    Gnc gnc = [](T &a, T b){a = b;};
    vector<T> dat;
    int N;
    T _query(int qL, int qR, int k, int l, int r){
        if(r <= qL || qR <= l) return E;
        if(qL <= l && r <= qR) return dat[k];
        int vl = _query(qL, qR, (k << 1) + 1, l, (l + r) >> 1);
        int vr = _query(qL, qR, (k << 1) + 2, (l + r) >> 1, r);
        return fnc(vl, vr);
    }

    public:
    SegTree(int _N){
        for(N = 1; N < _N; N <<= 1);
        dat.resize((N << 1) - 1, E);
    }
    SegTree(int _N, Fnc _fnc, Gnc _gnc) : E(0), fnc(_fnc), gnc(_gnc){
        for(N = 1; N < _N; N <<= 1);
        dat.resize((N << 1) - 1, E);
    }
    void ch(int idx, T x){
        idx += N - 1;
        gnc(dat[idx], x);
        while(idx > 0){
            idx = (idx - 1) >> 1;
            dat[idx] = fnc(dat[(idx << 1) + 1], dat[(idx << 1) + 2]);
        }
    }
    T query(int l, int r){ return _query(l, r, 0, 0, N); }
};

void Main(){
    int N, Q; cin >> N >> Q;
    SegTree<int> st(N);
    while(Q--){
        int c, x, y; cin >> c >> x >> y;
        if(c == 0) st.ch(x, y);
        else cout << st.query(x, y+1) << endl;
    }
}

signed main(){
    cin.tie(nullptr);
    ios_base::sync_with_stdio(false);
    cout << fixed << setprecision(10);
    Main();
    return 0;
}
