#include<bits/stdc++.h>
using namespace std;
#define INF 0x3f3f3f3f
struct node{
	int a,b,v;
	node(){
	}
	node(int a,int b,int v):a(a),b(b),v(v){
	}
};
char g[1010][1010];
int lens;
int h,w,k;
int dx[4]={0,1,0,-1},dy[4]={1,0,-1,0};
int vis[1010][1010];
int bfs(int a,int b,int s,int t){
	for(int i=0;i<h;i++)
		memset(vis[i],0,sizeof(vis[i]));
	queue<node> qar;
	qar.push(node(a,b,0));
	vis[a][b]=1;
	while(qar.size()){
		node mid=qar.front();
		qar.pop();
		int x,y,v=mid.v;
		if(mid.a==s&&mid.b==t)
			return mid.v;
		for(int i=0;i<4;i++){
			x=mid.a+dx[i];
			y=mid.b+dy[i];
			if(x>=0&&x<h&&y>=0&&y<w&&!vis[x][y]&&g[x][y]!='X'){
				qar.push(node(x,y,mid.v+1));
				vis[x][y]=1;
			}
				
		}
	}
	return 0;
}
int tar[10][2];
int main(){
	scanf("%d%d%d",&h,&w,&k);
	for(int i=0;i<h;i++){
		getchar();
		for(int j=0;j<w;j++){
			scanf("%c",&g[i][j]);
			if(g[i][j]=='S'){
				tar[0][0]=i;
				tar[0][1]=j;
			}
			else if(g[i][j]<='9'&&g[i][j]>='0'){
				tar[g[i][j]-'0'][0]=i;
				tar[g[i][j]-'0'][1]=j;
			}
		}
	}
	
	int  ans=0;
	for(int i=1;i<=k;i++)
		ans+=bfs(tar[i-1][0],tar[i-1][1],tar[i][0],tar[i][1]);
	printf("%d\n",ans);
	return 0;
}
