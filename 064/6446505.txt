#include <iostream>

using namespace std;

char grid[100][100];
int H, W;
int dx[] = {-1, 1, 0, 0}, dy[] = {0, 0, 1, -1};

void dfs(int x, int y) {
  char current_state = grid[x][y];
  grid[x][y] = '.';
  for (int d = 0; d < 4; d++) {
    int nx = x + dx[d], ny = y + dy[d];
    if (nx >= 0 && nx < H && ny >= 0 && ny < W && 
      grid[nx][ny] == current_state && grid[nx][ny] != '.') {
      dfs(nx, ny);
    }  
  }
  return;
}

int main() {
  cin >> H >> W;
  for (int i = 0; i < H; i++) {
      for (int j = 0; j < W; j++) {
          cin >> grid[i][j];
      }
  }
  int dummy0, dummy1;
  cin >> dummy0 >> dummy1;
  
  int count = 0;
  for (int i = 0; i < H; i++) {
    for (int j = 0; j < W; j++) {
      if (grid[i][j] != '.') {
        dfs(i, j);
        count++;
      }
    }
  }
  cout << count;
}


