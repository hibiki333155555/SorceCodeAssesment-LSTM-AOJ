from math import sqrt
n,q = map(int,input().split())
class sqrtTable:
    def __init__(self,N,e) -> None:
        self.A = [e for _ in range(N)]
        self.div = int(sqrt(N)) + 1
        self.m = N // self.div + 1#m分割する
        self.block = [e for _ in range(self.m)]
    def add(self,i,x):
        index = i // self.div
        self.block[index] += x
        self.A[i] += x
    def get(self,s,t):
        left = s //self.div
        right = t // self.div
        ans = 0
        if left == right:
            for i in range(s,t+1):
                ans += self.A[i]
            return ans
                
        for i in range(left+1,right):
            ans += self.block[i]
        for l in range(s,left * self.div + self.div):
            ans += self.A[l]
        for r in range(right * self.div,t+1):
            ans += self.A[r]
        return ans
table = sqrtTable(n,0)
ANS = []
for _ in range(q):
    c,x,y = map(int,input().split())
    if c == 0:
        table.add(x-1,y)
    elif c == 1:
        ANS.append(table.get(x-1,y-1))
print(*ANS,sep='\n')

