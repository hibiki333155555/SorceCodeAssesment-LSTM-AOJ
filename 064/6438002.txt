#include<iostream>
#include<queue>
#include<cstring>

using namespace std;

const int N = 1005;

char g[N][N];
int n,m;
bool st[N][N];
int res;

int dx[] = {0,1,0,-1};
int dy[] = {1,0,-1,0};
char c;

void dfs(int x,int y)
{
	g[x][y] = '.';
	for(int i = 0;i < 4;i ++)
	{
		int xx = x + dx[i],yy = y + dy[i];
		if(xx >= 0 && xx < n && yy >= 0 && yy < m && g[xx][yy] == c) dfs(xx,yy);
	}
}

void solve()
{
	int res = 0;
	
	for(int i = 0;i < n;i ++) cin >> g[i];
	
	for(int i = 0;i < n;i ++) 
		for(int j = 0;j < m;j ++)
			{
				c = g[i][j];
				if(c == '.') continue;
				res ++;
				dfs(i,j);
			}
	cout << res << endl;
}

int main()
{
	while(cin >> n >> m)
	{
		if(n == m && n == 0) break;
		solve();
	}
	return 0;
} 
