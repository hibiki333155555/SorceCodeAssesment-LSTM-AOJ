#include <iostream>
#include <list>

using namespace std;

bool canLoad(int *weights, int weights_size, int trucks_size, int P)
{
  int trucks_count = 1;
  int trucks_sum = 0;
  for (int i = 0; i < weights_size; i++)
  {
    if (weights[i] > P) return false;
    trucks_sum += weights[i];

    if (trucks_sum > P)
    {
      trucks_sum = weights[i];
      trucks_count++;
    }
    else if (trucks_sum == P)
    {
      trucks_sum = 0;
      if (i != weights_size-1) trucks_count++;
    }
  }

  return (trucks_count <= trucks_size) ? true : false;
}

int main(int argc, char const *argv[])
{
  int n, k;
  cin >> n >> k;

  int *weights = new int[n];
  int sum = 0;

  for (int i = 0; i < n; i++)
  {
    cin >> weights[i];
    sum += weights[i];
  }
  
  int P = sum;

  int left = 0;
  int right = sum;

  while (left < right)
  {
    int mid = (left + right) / 2;
    if (canLoad(weights, n, k, mid))
    {
      P = mid;
      right = mid;
    }
    else left = mid + 1;
  }
  
  cout << P << endl;

  return 0;
}

