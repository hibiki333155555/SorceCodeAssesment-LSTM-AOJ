#include <bits/stdc++.h>
using namespace std;
#define rep(i,n) for(int (i)=0;(i)<(n);(i)++)
#define ll long long
#define pp pair<ll,ll>
#define ld long double
#define all(a) (a).begin(),(a).end()
#define mk make_pair
#define difine define
constexpr int inf=2000001000;
constexpr ll INF=2e18;
constexpr ll mod=1000000007;
constexpr ll MOD=998244353;
int dx[4]={0,0,-1,1},dy[4]={-1,1,0,0};

 
// #include <atcoder/all>
// typedef atcoder::modint1000000007 mint;
// typedef atcoder::modint998244353 mint;

int main() {
  int h,w;
  cin >> h >> w;
  vector<vector<int>> a(h+2,vector<int>(w+2,1));
  vector<vector<pair<int,int>>> b(h+2,vector<pair<int,int>>(w+2));
  int sx,sy,tx,ty;
  rep(i,h+2){
      rep(j,w+2) b[i][j]={i,j};
  }
  rep(i,h){
      string s;
      cin >> s;
      rep(j,w){
          if (s[j]=='S'){
              sx=j+1;
              sy=i+1;
              a[i+1][j+1]=0;
          }
          else if (s[j]=='G'){
              tx=j+1;
              ty=i+1;
              a[i+1][j+1]=0;
          }
          else if (s[j]=='U'){
              a[i+1][j+1]=2;
          }
          else if (s[j]=='D'){
              a[i+1][j+1]=3;
          }
          else if (s[j]=='L'){
              a[i+1][j+1]=4;
          }
          else if (s[j]=='R'){
              a[i+1][j+1]=5;
          }
          else if (s[j]=='.') a[i+1][j+1]=0;
      }
  }
  for (int i=1;i<=h;i++){
      for (int j=1;j<=w;j++){
          if (a[i][j]==0 || a[i][j]==1) continue;
          queue<pair<int,int>> q;
          int nx=j,ny=i;
          while(true){
            //   cout << ny << " " << nx << endl;
            //   cout << nx+dx[a[ny][nx]-2] << endl;
              if (a[ny][nx]>1){
                  q.push({ny,nx});
                  int temp=ny;
                  ny+=dy[a[ny][nx]-2];
                  nx+=dx[a[temp][nx]-2];
              }
              else break;
          }
          while(!q.empty()){
              auto [f,g]=q.front();
              q.pop();
              b[f][g]=b[ny][nx];
              a[f][g]=a[ny][nx];
          }
      }
  }
  vector<vector<int>> d(h+2,vector<int>(w+2,inf));
  priority_queue<tuple<int,int,int>,vector<tuple<int,int,int>>,greater<tuple<int,int,int>>> q;
  q.push({0,sy,sx});
  d[sy][sx]=0;
  while(!q.empty()){
      auto [di,f,g]=q.top();
      q.pop();
      if (d[f][g]>di) continue;
      rep(i,4){
        //   cout << f << " " << g << endl;
          auto [y,x]=b[f+dy[i]][g+dx[i]];
        //   cout << y << " " << x << endl;
          if (a[y][x]==1) continue;
          if (d[y][x]>d[f][g]+1){
              d[y][x]=d[f][g]+1;
              q.push({di+1,y,x});
          }
      }
  }
  if (d[ty][tx]==inf) cout << -1 << endl;
  else cout << d[ty][tx] << endl;
}

