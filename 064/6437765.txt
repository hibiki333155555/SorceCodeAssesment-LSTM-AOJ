#include <iostream>

using namespace std;

struct Card { char suit, value;};

void bubble (struct Card A[], int N)
{
  for (int i = 0; i < N; ++i) {
    for (int j = N - 1; j >= i; --j) {
    if (A[j].value < A[j-1].value)
      swap(A[j], A[j-1]);
    }
  }
}

void selection (struct Card A[], int N)
{
  for (int i = 0; i < N; ++i) {
    int mini = i;
    for (int j = i; j < N; ++j) {
      if (A[j].value < A[mini].value) {
        mini = j;
      }
    }
    swap(A[i], A[mini]);
  }
}

void print(struct Card A[], int N)
{
  for (int i = 0; i < N; ++i) {
    if (i > 0) cout << " ";
    cout << A[i].suit << A[i].value;
  }
  cout << endl;
}
bool isStable(struct Card c1[], struct Card c2[], int N)
{
  for (int i = 0; i < N; ++i) {
    if (c1[i].suit != c2[i].suit) return false;
  }
  return true;
}

int main()
{
  Card c1[100]; Card c2[100];
  int N;
  cin >> N;
  for (int i = 0; i < N; ++i) {
    cin >> c1[i].suit >> c1[i].value;
  }

  for (int i = 0; i < N; ++i) 
    c2[i] = c1[i];
 bubble(c1, N);
  selection(c2, N);
  print(c1, N);
  cout << "Stable" << endl;
  print(c2, N);
  if (isStable(c1, c2, N)) {
    cout << "Stable" << endl;
  } else {
    cout << "Not stable" << endl;
  }
  return 0;
}

