inpl = lambda oneindex=False: list(map(lambda x: int(x)-int(bool(oneindex)),input().split()))
MOD = 998244353
def inv_mod(a, p=MOD):
    p = abs(p)
    a %= p
    stack = []
    p0 = p
    while a > 1:
        d, a, p = p//a, p%a, a
        stack.append(d)
    x, y = 1, 0
    while stack:
        d = stack.pop()
        x, y = y-d*x, x
    return x % p0
N = int(input())
A = inpl()
T = [False]*(N-1) + [True]*N
LR = [None]*(2*N-1)
for i in range(N-1,2*N-1):
    LR[i] = (i-(N-1),i-(N-1))
for i in range(N-2,-1,-1):
    c = A[2*i+1] + A[2*i+2]
    LR[i] = (LR[2*i+1][0], LR[2*i+2][1])
    if A[i] < c:
        T[i] = True
    else:
        A[i] = c
Y = 0
for i in range(2*N-1):
    if not T[i]:
        continue
    j = i
    while j > 0 and (j == i or T[j] == False):
        j = (j-1) // 2
    if T[j] == False or i == 0:
        Y += A[i] * (LR[i][0]+1) * (N-LR[i][1]) % MOD
    else:
        Y += A[i] * (((LR[i][0]+1)*(N-LR[i][1]))-(LR[j][0]+1)*(N-LR[j][1])) % MOD
    Y %= MOD

X = N*(N+1)//2
Z = Y*inv_mod(X) % MOD
print(Z)

