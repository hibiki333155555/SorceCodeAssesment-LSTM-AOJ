#include <iostream>
#include <vector>
//#include<queue>
//#include <iomanip>
//#include<math.h>
//#include<map>
//#include <utility>

using namespace std;

//構造体
struct Node{
    //初期設定
    Node(){
        parent = siblig = children1 = children2 = -1;
        depth = height = degree = 0;
    }
    int parent; //親
    int siblig; //兄弟
    int degree; //子の数
    int depth;  //深さ
    int height; //高さ
    int children1;  //子1
    int children2;  //子2
};

void calcDepth(vector<Node>&tree,int id){
    if (tree[id].children1 != -1) {
        tree[tree[id].children1].depth = tree[id].depth + 1;
        calcDepth(tree, tree[id].children1);
    }
    if (tree[id].children2 != -1) {
        tree[tree[id].children2].depth = tree[id].depth + 1;
        calcDepth(tree, tree[id].children2);
    }
}

void calcHeight(vector<Node>&tree,int id){
    if (tree[id].parent == -1) return;
    if (tree[tree[id].parent].height < tree[id].height + 1) {
        tree[tree[id].parent].height = tree[id].height + 1;
        calcHeight(tree, tree[id].parent);
    }
}

int main(){
    int n,id,left,right,root_id;
    cin >> n;
    vector<Node>tree(n);
    
    //情報よりツリーを作る。
    for (int i = 0;i < n; i++){
        cin >> id >> left >> right;
        tree[id].children1 = left;
        tree[id].children2 = right;
        tree[left].parent = id;
        tree[right].parent = id;
    }
    //ツリーからルートIDを探す。
    for (root_id = 0; root_id < n; root_id++){
        if (tree[root_id].parent == -1)break;
    }
    
    //深さの情報を計算する。
    calcDepth(tree, root_id);
    
    //degreeを計算する。
    for (int i = 0; i < n; i++){
        tree[i].degree = (int)(tree[i].children1 != -1) + (int)(tree[i].children2 != -1);
    }
    
    //siblingを計算する。
    for (int i = 0; i < n; i++){
        if (tree[i].parent == -1) {
            tree[i].siblig = -1;
        }else{
            if (tree[tree[i].parent].children1 == i){
                tree[i].siblig = tree[tree[i].parent].children2;
            }else{
                tree[i].siblig = tree[tree[i].parent].children1;
            }
        }
    }
    //heightを計算する。
    for (int i = 0; i < n; i++){
        calcHeight(tree,i);
    }
    
    //ツリー情報の表示
    for (int i = 0; i < n; i++){
        cout << "node " << i <<
        ": parent = " << tree[i].parent <<
        ", sibling = " << tree[i].siblig <<
        ", degree = " << tree[i].degree <<
        ", depth = " << tree[i].depth << ", " <<
        ", height = " << tree[i].height << ", ";
        if (tree[i].depth == 0) {
            cout << "root, ";
        }else if(tree[i].degree == 0){
            cout << "leaf, ";
        }else{
            cout << "internal node, ";
        }
        cout << endl;
    }
}


