#include "bits/stdc++.h"
using namespace std;

typedef string::const_iterator State;
#define eps 1e-8L
#define MAX_MOD 1000000007LL
#define GYAKU 500000004LL
#define MOD 998244353LL
#define pb push_back
#define mp make_pair
typedef long long ll;
typedef long double ld;
#define REP(a, b) for (long long(a) = 0; (a) < (b); ++(a))
#define ALL(x) (x).begin(), (x).end()

#define int long long

void solve()
{
  int m, n;
  cin >> m >> n;
  vector<vector<int>> inputs;
  REP(i, m)
  {
    inputs.push_back({});
    string s;
    cin >> s;
    REP(q, n)
    {
      if (s[q] == 'o')
        inputs.back().push_back(1);
      else
        inputs.back().push_back(0);
    }
  }
  int ans = 1e18;
  int costs[2][2] = {};
  REP(i, m)
  {
    REP(q, n)
    {
      costs[0][inputs[i][q]]++;
    }
  }
  REP(i, m - 1)
  {
    REP(q, n)
    {
      costs[0][inputs[i][q]]--;
      costs[1][inputs[i][q]]++;
    }
    ans = min({ans, costs[0][0] + costs[1][1], costs[0][1] + costs[1][0]});
  }
  REP(i, 2)
  {
    REP(q, 2)
    costs[i][q] = 0;
  }
  REP(i, m)
  {
    REP(q, n)
    {
      costs[0][inputs[i][q]]++;
    }
  }

  REP(q, n - 1)
  {
    REP(i, m)
    {
      costs[0][inputs[i][q]]--;
      costs[1][inputs[i][q]]++;
    }
    ans = min({ans, costs[0][0] + costs[1][1], costs[0][1] + costs[1][0]});
  }

  cout << ans << endl;
}
#undef int

// generated by oj-template v4.7.2
// (https://github.com/online-judge-tools/template-generator)
int main()
{
  // Fasterize input/output script
  ios::sync_with_stdio(false);
  cin.tie(nullptr);
  cout << fixed << setprecision(100);
  // scanf/printf user should delete this fasterize input/output script

  int t = 1;
  // cin >> t; // comment out if solving multi testcase
  for (int testCase = 1; testCase <= t; ++testCase)
  {
    solve();
  }
  return 0;
}

