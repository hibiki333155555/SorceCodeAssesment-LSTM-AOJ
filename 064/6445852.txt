/**
 *  author: hanyu
**/
#include <bits/stdc++.h>
using namespace std;

vector<int> di = {1, 0, -1, 0}, dj = {0, 1, 0, -1};

int main() {
  cin.tie(0);
  ios::sync_with_stdio(false);

  while (true) {
    int  h, w;
    cin >> h >> w;
    if (h + w == 0) break;

    vector<string> s(h);
    int si, sj, gi, gj;
    for (int i = 0; i < h; i++) {
      cin >> s[i];
      for (int j = 0; j < w; j++) {
        if (s[i][j] == 'A') {
          si = i;
          sj = j;
          s[i][j] = '.';
        }
        if (s[i][j] == 'B') {
          gi = i;
          gj = j;
          s[i][j] = '.';
        }
      }
    }

    string t;
    cin >> t;

    vector<vector<int>> d(h, vector<int>(w, 1e9));
    d[si][sj] = 0;
    queue<pair<int, int>> q;
    q.push(pair(si, sj));
    while (!q.empty()) {
      pair<int, int> p = q.front();
      q.pop();
      for (int i = 0; i < 4; i++) {
        int ni = p.first + di[i], nj = p.second + dj[i];
        if (ni < 0 || h <= ni || nj < 0 || w <= nj || s[ni][nj] == '#') continue;
        if (d[ni][nj] == 1e9) {
          d[ni][nj] = d[p.first][p.second] + 1;
          q.push(pair(ni, nj));
        }
      }
    }

    bool ok = false;
    for (int i = 0; i < 5000; i++) {
      int ni = gi, nj = gj, way = t[i % t.size()] - '0';
      if (way == 8) ni--;
      if (way == 6) nj++;
      if (way == 4) nj--;
      if (way == 2) ni++;
      if (ni < 0 || h <= ni) ni = gi;
      if (nj < 0 || w <= nj) nj = gj;
      gi = ni;
      gj = nj;
      if (d[gi][gj] <= i + 1) {
        ok = true;
        cout << i + 1 << " " << gi << " " << gj << '\n';
        break;
      }
    }

    if (!ok) cout << "impossible\n";
  }
}
