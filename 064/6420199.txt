#include<stdio.h>
#include<stdlib.h>
int cmp();
typedef struct{
    char pic;
    int num;
}card;
card *cards_forB;
card *cards_forS;
int n;
int main(){
    scanf("%d\n",&n);
    cards_forB=(card *)malloc(sizeof(card)*n);
    cards_forS=(card *)malloc(sizeof(card)*n);
    for(int i=0;i<n;i++)scanf("%c%d ",&cards_forB[i].pic,&cards_forB[i].num);
    for(int i=0;i<n;i++)cards_forS[i]=cards_forB[i];
    //for(int i=0;i<n;i++)printf("%c%d ",cards_forB[i].pic,cards_forB[i].num);//
    //for(int i=0;i<n;i++)printf("%c%d ",cards_forS[i].pic,cards_forS[i].num);//
    //bubblesort
    int flag=1;
    while(flag){
        flag=0;
        for(int i=n-1;i>0;i--){
            if(cards_forB[i-1].num>cards_forB[i].num){
                card tmp=cards_forB[i-1];
                cards_forB[i-1]=cards_forB[i];
                cards_forB[i]=tmp;
                flag=1;
            }
        }
    }
    //selectsort
    for(int i=0;i<n;i++){
        int minj=i;
        for(int j=i;j<n;j++)if(cards_forS[j].num<cards_forS[minj].num)minj=j;
        card tmp=cards_forS[i];
        cards_forS[i]=cards_forS[minj];
        cards_forS[minj]=tmp;
    }
    //output
    for(int i=0;i<n;i++)printf("%c%d ",cards_forB[i].pic,cards_forB[i].num);
    printf("\nStable\n");
    for(int i=0;i<n;i++)printf("%c%d ",cards_forS[i].pic,cards_forS[i].num);
    if(cmp())printf("\nStable\n");
    else printf("\nNot stable\n");
    return 0;
}
int cmp(){
    int flag;
    for(int i=0;i<n;i++){
        if(cards_forB[i].num==cards_forS[i].num&&cards_forB[i].pic==cards_forS[i].pic)flag=1;
        else {flag=0;break;}
    }
    return flag;
}
