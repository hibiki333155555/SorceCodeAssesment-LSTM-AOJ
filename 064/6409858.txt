#pragma GCC optimize("Ofast")
#include <bits/stdc++.h>
using namespace std;

map<tuple<int,int,int>,bool> memo;

bool win(int two,int one=0,int turnmod3=0){
  if(memo.count({two,one,turnmod3}))return memo[{two,one,turnmod3}];
  if(two+one==0)return memo[{two,one,turnmod3}]=false;
  if(two){
    if(!win(two-1+(turnmod3%3==2),one,(turnmod3+1)%3))return memo[{two,one,turnmod3}]=true;
    if(!win(two-1+(turnmod3%3==2),one+1,(turnmod3+1)%3))return memo[{two,one,turnmod3}]=true;
  }
  if(one)if(!win(two+(turnmod3%3==2),one-1,(turnmod3+1)%3))return memo[{two,one,turnmod3}]=true;
  return memo[{two,one,turnmod3}]=false;
}

int main(){
  //for(int i=1;i<=30;i++)cout<<i<<":"<<(win(i)?"Alice":"Bob")<<endl;
  int n;cin>>n;
  if(n%3==2)cout<<"Bob"<<endl;
  else cout<<"Alice"<<endl;
}
