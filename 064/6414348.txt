#include<stdio.h>
#define MAX 200002

int H;
int A[MAX];

void maxHeapfy(int A[], int i)
{
  int l = 2 * i;
  int r = 2 * i + 1;
  int largest;
  int temp;

  if(l <= H && A[l] > A[i]) largest = l;
  else largest = i;

  if(r <= H && A[r] > A[largest]) largest = r;

  if(largest == i) return;
  else{
    temp = A[largest];
    A[largest] = A[i];
    A[i] = temp;
    maxHeapfy(A, largest);
  }
}

void heapSort(int A[])
{
  int temp;

  for(int i = H / 2; i > 0; i-- ){
    maxHeapfy(A, i);
  }

  while(H >= 2){
    temp = A[H];
    A[H] = A[1];
    A[1] = temp;
    H--;
    maxHeapfy(A, 1);
  }
}

int main()
{
  int temp;
  scanf("%d", &H);
  int heapsize = H;
  for(int i = 1; i <= H; i++ ) scanf("%d", &A[i]);

  heapSort(A);


  H = heapsize;

  for(int i = 2; i < H; i++ ){
    temp = A[i];
    A[i] = A[1];
    A[1] = temp;

    int j = i;
    while(j != 1){
      temp = A[j];
      A[j] = A[j / 2];
      A[j / 2] = temp;
      j = j / 2;
    }
  }

  temp = A[1];
  A[1] = A[H];
  A[H] = temp;

  for(int i = 1; i <= heapsize; i++ ) printf("%d ", A[i]);
  printf("\n");

  return 0;
}
