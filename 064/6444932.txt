def cross3(a, b, c):
    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0])

# ps = [(x, y), ...]: ソートされた座標list
def convex_hull(ps):
    qs = []
    n = len(ps)
    for p in ps:
        # 一直線上で高々2点にする場合は ">=" にする
        while len(qs) > 1 and cross3(qs[-1], qs[-2], p) > 0:
            qs.pop()
        qs.append(p)
    t = len(qs)
    for i in range(n - 2, -1, -1):
        p = ps[i]
        while len(qs) > t and cross3(qs[-1], qs[-2], p) > 0:
            qs.pop()
        qs.append(p)
    qs.pop()
    return qs

n = int(input())
points = [list(map(int, input().split())) for _ in range(n)]
points.sort()
lst = convex_hull(points)
print(len(lst))

ind = -1
mi_y = 1 << 30
mi_x = 1 << 30
for i, (x, y) in enumerate(lst):
    if y < mi_y:
        mi_x, mi_y = x, y
        ind = i
    elif y == mi_y and x < mi_x:
        mi_x, mi_y = x, y
        ind = i

lst = lst[ind:] + lst[:ind]

for row in lst:
    print(*row)
