#include <iostream>
#include <vector>

using namespace std;

pair<vector<int>&, int> f(vector<pair<int, int>>& V, vector<vector<int>>& U, const vector<int> P, int u)
{
	if (V[u].first < 0) {
		U.resize(U.size() + 1);
		auto& UU = U.back();
		for (int j = u, uu = (int) U.size() - 1; j >= 0; j = P[j]) {
			UU.push_back(j);
			V[j] = {uu, (int) UU.size() - 1};
		}
	}
	return {U[V[u].first], V[u].second};
}

int main()
{
	int n; cin >> n;
	vector<int> P(n); P[0] = -1;
	for (int i = 0, k; i < n; ++i) {
		cin >> k;
		for (int j = 0, c; j < k; ++j, P[c] = i) cin >> c;
	}
	int q; cin >> q;
	vector<vector<int>> U;
	vector<pair<int, int>> V(n, {-1, -1});
	for (int i = 0, u, v, a = 0; i < q; ++i) {
		cin >> u >> v;
		auto [Uu, uu] = f(V, U, P, u);
		auto [Uv, vv] = f(V, U, P, v);
		for (
			int j = (int) Uu.size() - 1, k = (int) Uv.size() - 1;
			j >= uu && k >= vv && Uu[j] == Uv[k];
			--j, --k
		) a = Uu[j];
		cout << a << endl;
	}
	return 0;
}

