#include <stdio.h>


int insertionsort(int *a, int n ,int g)
{
	int i;
	int j;
	int v;
	int cnt;

	i = g - 1;
	cnt = 0;
	while (++i < n)
	{
		v = a[i];
		j = i - g;
		while (j >= 0 && a[j] > v)
		{
			a[j + g] = a[j];
			j = j - g;
			cnt++;
			a[j + g] = v;
		}
	}
	return (cnt);
}

int sellsort(int *a, int n, int m, int *g)
{
	int i;
	int cnt;

	i = -1;
	cnt = 0;
	while (++i < m)
		cnt += insertionsort(a, n, g[i]);
	return (cnt);
}

int main(void)
{
	int cnt;
	int i;
	int j;
	int n;
	int g[100];
	int m;
	int num[1000000];

	i = -1;
	scanf("%d", &n);
	while (++i < n)
		scanf("%d", &num[i]);
	m =  -1;
	while (++m * 3 + 1 < n)
		g[m] = 3 * m + 1;
	cnt = 0;
	i = -1;
	cnt = sellsort(num, n, m, g);
	printf("%d\n", m);
	i = -1;
	while (++i < m - 1)
		printf("%d ", g[i]);
	printf("%d\n", g[i]);
	printf("%d\n", cnt);
	i = -1;
	while (++i < n)
		printf("%d\n", num[i]);
	return (0);

}
