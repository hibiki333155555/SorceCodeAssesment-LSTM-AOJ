#include <stdio.h>
#include <stdlib.h>

#define MAX_UNSORETED_ITEMS 2000001
#define MAX_NUM_TYPES 10000

void bucketSort();

int C[MAX_NUM_TYPES];
unsigned short *A, *B;

/**
 * https://onlinejudge.u-aizu.ac.jp/courses/lesson/1/ALDS1/6/ALDS1_6_A
 */
int main() {
  unsigned short *A, *B;
  int n, i;

  scanf("%d", &n);

  A = malloc(sizeof(short) * n + 1);
  B = malloc(sizeof(short) * n + 1);

  for (i = 1; i < n; i++) {
    if (i > 1) printf(" ");
    printf("%d", B[i]);
  }
  printf("\n");

  return 0;
}

// Perform a bucket sort on an unsorted array
void bucketSort() {
  int i;

  // Initialize the counter array
  for (i = 0; i < MAX_NUM_TYPES; i++) C[i] = 0;

  for (i = 0; i < MAX_UNSORETED_ITEMS; i++) {
    scanf("%hu", &A[i+1]);
    // Keep track of the number of occurrences
    C[A[i+1]]++;
  }

  // Compute the cumulative sum of occurrences
  for (i = 1; i < MAX_NUM_TYPES; i++) C[i] = C[i] + C[i-1];

  for (i = n-1; i > 1; i--) {
    B[C[A[i]]] = A[i];
    C[A[i]]--;
  }
}

