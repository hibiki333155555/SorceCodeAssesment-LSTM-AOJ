#include<iostream>
#include<algorithm>
#include<cmath>
#include<cstdio>
#include<cstring>
#include<vector>
#include<queue>
#include<map>
#include<set>
#include<stack>
#include<iomanip>
using namespace std;
typedef long long ll;
const long long ll_inf=0x3f3f3f3f3f3f3f3f;
const int inf=0x3f3f3f3f;
const double pi=acos(-1.0);
const int Mod=1e9+7;
const int Max=1010;
//cout<<setw(8)<<fixed<<setprecision(3);
//ios::sync_with_stdio(false);
int d[4]={1,-1,4,-4};
map<string,int> dp;
void bfs(){
      queue<string>q;
      q.push("01234567");
      dp["01234567"]=0;
	while(!q.empty()){
      	string s=q.front();
      	q.pop();
		int pos=0;//pos是0的位置 
            for(int i=0;i<8;i++){
            	if(s[i]=='0'){
            		pos=i;
            		break;
			}
            	
		}
		for(int i=0;i<4;i++){
			int dx=pos+d[i];
            	if(dx>=0&&dx<8&&!(pos==3&&i==0)&&!(pos==4&&i==1)){//长方形的左上角和右下角需要特殊判断 
                		string temp=s;
                		swap(temp[pos],temp[dx]);
                		if(dp.find(temp)==dp.end()){
                			dp[temp]=dp[s]+1;
                			q.push(temp);
				} 
            	}
       	}
  	}
}
int main(){
	bfs();
	string s;
	while(getline(cin,s)){
		s.erase(remove(s.begin(),s.end(),' '),s.end());
		cout<<dp[s]<<endl;
	}
	return 0;
}
————————————————
版权声明：本文为CSDN博主「始归零」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。
原文链接：https://blog.csdn.net/qq_51567843/article/details/121151529
