#include "bits/stdc++.h"
using namespace std;

typedef string::const_iterator State;
#define eps 1e-8L
#define MAX_MOD 1000000007LL
#define GYAKU 500000004LL
#define MOD 998244353LL
#define pb push_back
#define mp make_pair
typedef long long ll;
typedef long double ld;
#define REP(a, b) for (long long(a) = 0; (a) < (b); ++(a))
#define ALL(x) (x).begin(), (x).end()

#define int long long
int convert(char x)
{
  if (x >= 'A' and x <= 'Z')
    return x - 'A';
  if (x >= 'a' and x <= 'z')
    return x - 'a' + 26;
  if (x == '+')
    return 62;
  if (x == '/')
    return 63;
  return x - '0' + 52;
}

vector<vector<int>> spin(vector<vector<int>> now)
{
  vector<vector<int>> ans = now;
  REP(i, now.size())
  {
    REP(q, now[i].size())
    {
      ans[q][now.size() - i - 1] = now[i][q];
    }
  }
  return ans;
}

void solve()
{
  int w, h, p;
  cin >> w >> h >> p;
  if (w == 0)
    exit(0);
  vector<vector<int>> image(h, vector<int>(w)), pat(p, vector<int>(p));
  REP(i, h)
  {
    string s;
    cin >> s;
    REP(q, s.length())
    {
      int x = convert(s[q]);
      REP(j, 6)
      {
        if ((q + 1) * 6 - 1 - j < w)
          if (x & (1 << j))
            image[i][(q + 1) * 6 - 1 - j] = 1;
      }
    }
  }
  REP(i, p)
  {
    string s;
    cin >> s;
    REP(q, s.length())
    {
      int x = convert(s[q]);
      REP(j, 6)
      {
        if ((q + 1) * 6 - 1 - j < p)
          if (x & (1 << j))
            pat[i][(q + 1) * 6 - 1 - j] = 1;
      }
    }
  }
  set<vector<vector<int>>> go;
  REP(i, 3)
  {
    REP(t, 5)
    {
      go.insert(pat);
      pat = spin(pat);
    }
    vector<vector<int>> nexts = pat;
    REP(i, p)
    {
      REP(q, p)
      {
        nexts[i][p - 1 - q] = pat[i][q];
      }
    }
    nexts = pat;
  }
  int ans = 0;
  for (auto pattern : go)
  {
    REP(i, h - p + 1)
    {
      REP(q, w - p + 1)
      {
        int ok = 1;
        REP(j, p)
        {
          REP(t, p)
          {
            if (pattern[j][t] != image[i + j][q + t])
            {
              ok = 0;
            }
          }
        }
        ans += ok;
      }
    }
  }
  cout << ans << endl;
}
#undef int

// generated by oj-template v4.7.2
// (https://github.com/online-judge-tools/template-generator)
int main()
{
  // Fasterize input/output script
  ios::sync_with_stdio(false);
  cin.tie(nullptr);
  cout << fixed << setprecision(10);
  // scanf/printf user should delete this fasterize input/output script

  int t = 10000;
  // cin >> t; // comment out if solving multi testcase
  for (int testCase = 1; testCase <= t; ++testCase)
  {
    solve();
  }
  return 0;
}

