#include<bits/stdc++.h>
using namespace std;

#define MAX 1000000

int H;

int parent(int i){
    return i / 2;
}

int left(int i){
    return 2 * i;
}

int right(int i){
    return 2 * i + 1;
}

void swap(int *a, int *b){
    int tmp;
    tmp = *a;
    *a = *b;
    *b = tmp;
}

void maxHeapify(int A[], int i, int H){
    int l = left(i);
    int r = right(i);
    int largest;
    if(l <= H && A[l] > A[i]){
        largest = l;
    }
    else{
        largest = i;
    }
    if(r <= H && A[r] > A[largest]){
        largest = r;
    }

    if(largest != i){
        swap(A[i], A[largest]);
        maxHeapify(A, largest, H);
    }
}

void buildMaxHeap(int A[], int H){
    for(int i = H / 2; i > 0; i--){
        maxHeapify(A, i, H);
    }
}

int main(){
    int A[MAX + 1];
    int H;
    cin >> H;
    for(int i = 1; i <= H; i++){
        cin >> A[i];
    }

    buildMaxHeap(A, H);

    for(int i = 1; i <= H; i++){
        cout <<" " << A[i];
    }
    cout << endl;


}
