#include<stdio.h>
#include<iostream>
#include<string>
#include<vector>
#include<queue>
using namespace std;


int initial(vector <vector<int> >& b,int n,int m){
    vector<int> temp;
    for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
                temp.push_back(-1);
            }
            b.push_back(temp);
            temp.clear();
    }
    return 0;
}


   bool bFS(vector <vector<int> >& a, int n,int* num,int start,int target){
    queue<int> q1;
    int visit[100001];
    for(int i=0;i<n;i++){
        visit[i]=0;
    }
    q1.push(start);
    visit[start]=1;
    while(!q1.empty()){
        int top=q1.front();
        for(int j=0;j<num[top];j++){
            int temp=a[top][j];
            if(temp==target){
                return true;
            }
            if(temp!=-1&&visit[temp]==0){
                q1.push(temp);
                visit[temp]=1;
            }
        }
        q1.pop();
        visit[top]=2;
    }
    return false;
   }
int main() {
	string operation;
	int n,num[100001],row,temp,m,n1,temp2,temp4;
	vector< vector<int> > a;
	vector<int> temp1;
    cin>>n>>m;
    for(int i=0;i<n;i++){
        num[i]=0;
    }
    initial(a,n,m);
    //initial(b,n,m);
    for(int i=0;i<m;i++){
       cin>>temp>>temp4;
        temp2=num[temp];
        a[temp][temp2]=temp4;
        num[temp]=temp2+1;
        temp2=num[temp4];
        a[temp4][temp2]=temp;
        num[temp4]=temp2+1;
    }
    int start,target;
    cin>>n1;
    for(int i=0;i<n1;i++){
        cin>>start>>target;
        bool temp3=bFS(a,n,num,start,target);
        if(temp3==true){
            cout<<"yes"<<endl;
        }else{
            cout<<"no"<<endl;
        }
    }
} 
