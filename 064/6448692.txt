#include <bits/stdc++.h>
#define endl '\n'

using namespace std;

const int N = 1e6 + 10;
int r, c, q, n, m;
int a[2 * N * (int)log2(N)];

int id(int x1, int x2, int x3, int x4) {
    return x4 + x3 * m + x2 * m * n + x1 * m * n * c;
}

int main() {
    ios::sync_with_stdio(false);
    cin.tie(0);
    while (cin >> r >> c >> q, r || c || q) {
        n = ceil(log2(r)) + 1, m = ceil(log2(c)) + 1;
        for (int i = 0; i < r; i++) {
            for (int j = 0; j < c; j ++) {
                cin >> a[id(i, j, 0, 0)];
            }
        }
        for (int k = 1; k < n; k ++) {
            for (int i = 0; i < r; i ++) {
                for (int j = 0; j < c; j ++) {
                    int u = min(r - 1, i + (1 << (k - 1)));
                    a[id(i, j, k, 0)] = min(a[id(i, j, k - 1, 0)], a[id(u, j, k - 1, 0)]);
                }
            }
        }
        for (int s = 1; s < m; s ++) {
            for (int i = 0; i < r; i ++) {
                for (int j = 0; j < c; j ++) {
                    int k = min(c - 1, j + (1 << (s - 1)));
                    a[id(i, j, 0, s)] = min(a[id(i, j, 0, s - 1)], a[id(i, k, 0, s - 1)]);
                }
            }
            for (int k = 1; k < n; k ++) {
                for (int i = 0; i < r; i ++) {
                    for (int j = 0; j < c; j ++) {
                        int u = min(r - 1, i + (1 << (k - 1)));
                        a[id(i, j, k, s)] = min(a[id(i, j, k - 1, s)], a[id(u, j, k - 1, s)]);
                    }
                }
            }
        }
        while (q --) {
            int r1, c1, r2, c2; cin >> r1 >> c1 >> r2 >> c2;
            int k = log2(r2 - r1 + 1), s = log2(c2 - c1 + 1);
            int u = r2 - (1 << k) + 1, v = c2 - (1 << s) + 1;
            cout << min({a[id(r1, c1, k, s)], a[id(u, c1, k, s)], a[id(r1, v, k, s)], a[id(u, v, k, s)]}) << endl;
        }
    }
    return 0;
}
/*
14 4 1
1270216262 1191391529 812669700 553475508
445349752 1344887256 730417256 1812158119
147699711 880268351 1889772843 686078705
2105754108 182546393 1949118330 220137366
1979932169 1089957932 1873226917 715669847
1486937972 1196032868 777206980 68706223
1843638549 212567592 1883488164 964776169
928126551 1301950427 1992516190 1426542624
849040635 941604920 1400427944 1994719310
2038269862 659998484 1280937363 1681643301
725914710 1729267236 2023351876 142750431
1840579929 2098560397 1910500675 1170970491
1856224190 983059344 1718458134 1876268425
1764841629 398844030 185252727 1370429126
5 0 8 3
*/

