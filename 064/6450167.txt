#include<bits/stdc++.h>
using namespace std;

using ll = long long;
const int INF = 1e9;
const ll inf = 1LL<<62;

void solve() {
  int n, m; cin >> n >> m;
  vector<vector<pair<ll, ll>>> G(n);
  for (int i=0; i<m; i++) {
    ll a, b, c; cin >> a >> b >> c;
    a--; b--;
    G[a].emplace_back(b, c);
  }
  vector<set<ll>> v(n);
  queue<pair<ll, ll>> q;
  auto gcd = [&](auto&& gcd, ll x, ll y) -> ll {
    if (x%y) return gcd(gcd, y, x%y);
    return y;
  };
  q.emplace(0, 1);
  v[0].insert(1);
  while (q.size()) {
    auto now = q.front(); q.pop();
    for (auto e : G[now.first]) {
      ll val = now.second*e.second/gcd(gcd, now.second, e.second);
      if (v[e.first].count(val)) continue;
      v[e.first].insert(val);
      q.emplace(e.first, val);
    }
  }
  if (v[n-1].size() == 0) {
    cout << "IMPOSSIBLE" << '\n';
    return;
  }
  cout << *v[n-1].begin() << " " << *v[n-1].rbegin() << '\n';
}

int main() {
  ios::sync_with_stdio(false);
  std::cin.tie(nullptr);
  // int t; cin >> t;
  /*while (t--)*/ solve();
}

