#include <iostream>
using namespace std;
static const int DIAGONAL = 0;
static const int TOP = 1;

struct Item {
    int value, weight;
};

int main() {
    int N, W;
    cin >> N >> W;

    Item Items[N+1];
    int C[N+1][W+1], G[N+1][W+1];

    for (int i = 1; i <= N; ++i) {
        cin >> Items[i].value >> Items[i].weight;
    }

    for (int w = 0; w <= W; ++w) {
        C[0][w] = 0;
        G[0][w] = DIAGONAL;
    }

    for (int i = 1; i <= N; ++i) C[i][0] = 0;

    for (int i = 1; i <= N; ++i) {
        for (int w = 1; w <= W; ++w) {
            C[i][w] = C[i - 1][w];
            G[i][w] = TOP;
            if (Items[i].weight > w) continue;
            if (Items[i].value + C[i - 1][w - Items[i].weight] > C[i - 1][w]) {
                C[i][w] = Items[i].value + C[i - 1][w - Items[i].weight];
                G[i][w] = DIAGONAL;
            }
        }
    }

    int maxWeight = C[N][W];

    cout << maxWeight << endl;
}
