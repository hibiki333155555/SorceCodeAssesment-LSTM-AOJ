from sys import stdin 
input = stdin.readline 

class Element:
    def __init__(self, val):
        self.val = val
        self.prev = None
        self.next = None
    
    
class DoublyLinkedList:
    def __init__(self):
        self.head = None
        self.tail = None
        
        
    def append(self, element):
        if self.head is None:
            self.head = element
            self.tail = element 
        else:
            self.tail.next = element 
            element.prev = self.tail 
            self.tail = element 
            
            
    def get(self, index):
        ptr = self.head 
        for _ in range(index):
            ptr = ptr.next 
        return ptr 
    
    
    def find(self, key):
        ptr = self.head 
        while ptr is not None:
            if ptr.val == key:
                return ptr
            ptr = ptr.next 
            
    
    def insert(self, index, element):
        ptr = self.get(index)
        
        if ptr is None:
            self.append(element)
        else:
            element.prev = ptr.prev 
            element.next = ptr 
            if ptr.prev is None:
                self.head = element 
            else:
                ptr.prev.next = element 
            ptr.prev = element 
            
            
    def appendleft(self, element):
        self.insert(0, element)
            
            
    def delete(self, element):
        if element.prev is None:
            self.head = element.next 
        else:
            element.prev.next = element.next 
            
        if element.next is None:
            self.tail = element.prev 
        else:
            element.next.prev = element.prev 
            
            
    def remove(self, key):
        element = self.find(key)
        if element is not None:
            self.delete(element)
            
            
    def deleteFirst(self):
        self.delete(self.head)
        
    
    def deleteLast(self):
        self.delete(self.tail)
            
    
    def show(self):
        ptr = self.head 
        res = []
        while ptr:
            res.append(ptr.val)
            ptr = ptr.next 
        print(' '.join(res))
        

def main():
    n = int(input())
    que = DoublyLinkedList()
    for _ in range(n):
        command = input().rstrip()
        if command[0] == 'i':
            que.appendleft(Element(command[7:]))  
        elif command[6] == 'F':
            que.deleteFirst()
        elif command[6] == 'L':
            que.deleteLast()
        else :
            que.remove(command[7:])
    
    que.show()
    
main()
