// #include "atcoder/all"
#include <iostream> // cout, endl, cin
#include <string> // string, to_string, stoi
#include <vector> // vector
#include <algorithm> // min, max, swap, sort, reverse, lower_bound, upper_bound
#include <utility> // pair, make_pair
#include <tuple> // tuple, make_tuple
#include <cstdint> // int64_t, int*_t
#include <cstdio> // printf
#include <map> // map
#include <queue> // queue, priority_queue
#include <set> // set
#include <stack> // stack
#include <deque> // deque
#include <unordered_map> // unordered_map
#include <unordered_set> // unordered_set
#include <bitset> // bitset
#include <cctype> // isupper, islower, isdigit, toupper, tolower
#include <iomanip> // setprecision
#include <complex> // complex
#include <math.h>
#include <functional>
#include <cassert>
using namespace std;
// using namespace atcoder;
using ll = long long;
using P = pair<ll,ll>;
constexpr ll INF = 1e15;
constexpr ll LLMAX = 9223372036854775807;
constexpr int inf = 1e9;
constexpr ll mod = 1000000007;
// constexpr ll mod = 998244353;
// 右下左上
const int dx[8] = {1, 0, -1, 0,1,1,-1,-1};
const int dy[8] = {0, 1, 0, -1,1,-1,1,-1};
template<class T> inline bool chmax(T& a, T b) { if (a < b) { a = b; return 1; } return 0; }
template<class T> inline bool chmin(T& a, T b) { if (a > b) { a = b; return 1; } return 0; }
#define eol "\n"
// ---------------------------------------------------------------------------

int main(){
    ios::sync_with_stdio(false);
    cin.tie(nullptr);
    ll y1,y2;
    string x1,x2;
    cin >> x1 >> y1 >> x2 >> y2;
    vector<string> W;
    for(int i=0; i<26; i++){
        string res = "";
        res += i + 'A';
        W.emplace_back(res);
    }
    for(int i=0; i<26; i++){
        for(int j=0; j<26; j++){
            string res = "";
            res += i + 'A';
            res += j + 'A';
            W.emplace_back(res);
        }
    }
    ll X1,X2;
    for(int i=0; i<W.size(); i++){
        if(x1 == W[i]){
            X1 = i;
        }
        if(x2 == W[i]){
            X2 = i;
        }
    }
    ll y = max(y1,y2) - min(y1,y2) + 1;
    ll x = max(X2,X1) - min(X2,X1) + 1;
    cout << y*x << endl;
    return 0;
}
