#include <bits/stdc++.h>
#define rep(i,n) for(int i = 0; i < (n); i++)
using namespace std;
typedef long long ll;

int main(){
    cin.tie(0);
    ios::sync_with_stdio(0);
    
    string s; cin >> s;
    int n = (int)s.size();
    vector<vector<vector<int>>> nt(n + 1, vector<vector<int>>(10, vector<int>(10, -1)));
    vector<vector<vector<int>>> pr(n + 1, vector<vector<int>>(10, vector<int>(10, -1)));
    for(int i = 0; i <= n; i++) {
        for(int A = 0; A <= 9; A++) {
            for(int L = 0; L <= 9; L++) {
                if(A == 0) {
                    if(i + 1 <= n && s[i] == L + '0') {
                        nt[i][A][L] = i + 1;
                    }
                } else if(L == 0) {
                    nt[i][A][L] = i;
                } else if(A <= i) {
                    if(i + L <= n && s.substr(i, L) == s.substr(i - A, L)) {
                        nt[i][A][L] = i + L;
                    }
                }
            }
        }
    }

    for(int i = 0; i <= n; i++) {
        for(int A = 0; A <= 9; A++) {
            for(int L = 0; L <= 9; L++) {
                if(nt[i][A][L] != -1) {
                    pr[nt[i][A][L]][A][L] = i;
                }
            }
        }
    }

    // dp[i][j] := 前からi文字目まで, 後ろからj文字目まで一致
    vector<vector<int>> dp(n + 1, vector<int>(n + 1, 1e9));
    vector<vector<pair<int,int>>> dp_prev(n + 1, vector<pair<int,int>>(n + 1, {-1, -1}));
    dp[0][n] = 0;
    for(int i = 0; i <= n; i++) {
        for(int j = n; j >= 0; j--) {
            for(int L = 0; L <= 9; L++) {
                for(int A = 0; A <= 9; A++) {
                    int ni = nt[i][A][L], nj = pr[j][L][A];
                    if(ni != -1 && nj != -1) {
                        if(dp[ni][nj] >= dp[i][j] + 1) {
                            dp[ni][nj] = dp[i][j] + 1;
                            dp_prev[ni][nj] = {i, j};
                        }
                    }
                }
            }
        }
    }

    string ans = "";
    int i = n, j = 0;
    while(i != 0 || j != n) {
        for(int L = 0; L <= 9; L++) {
            bool f = false;
            for(int A = 0; A <= 9; A++) {
                int pi = pr[i][A][L], pj = nt[j][L][A];
                if(pi != -1 && pj != -1 && dp_prev[i][j] == pair<int,int>{pi, pj}) {
                    i = pi; j = pj;
                    ans += (char)(L + '0');
                    ans += (char)(A + '0');
                    f = true;
                }
            }
            if(f) break;
        }
    }
    cout << ans << endl;
}
