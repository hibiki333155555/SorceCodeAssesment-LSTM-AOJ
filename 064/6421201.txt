from collections import deque
H, W = map(int, input().split())
X = [[a for a in input()] + ["#"] for _ in range(H)] + [["#"] * (W + 1)]

H, W = H + 1, W + 1
for i in range(H):
    for j in range(W):
        if X[i][j] == "S":
            si, sj = i, j
            X[i][j] = "."
        elif X[i][j] == "V":
            ti, tj = i, j
            X[i][j] = "."
M = int(input())
for _ in range(M):
    a, b, t = map(int, input().split())
    a, b = a-1, b-1
    X[a][b] = t

def BFS(i0, j0, i1, j1, d0 = 0):
    Q = deque([(i0, j0)])
    D = [[-1] * W for _ in range(H)]
    D[i0][j0] = d0
    while Q:
        i, j = Q.popleft()
        x = X[i][j]
        if (i, j) == (i1, j1):
            return D[i][j]
        if x == "#":
            continue
        d = D[i][j]
        if x == "." or x > d:
            for di, dj in ((0, 1), (0, -1), (1, 0), (-1, 0)):
                ni, nj = i + di, j + dj
                if D[ni][nj] == -1:
                    D[ni][nj] = d + 1
                    Q.append((ni, nj))
    return -1

d = BFS(si, sj, ti, tj)
d = BFS(ti, tj, si, sj, d)

print("Yes" if d >= 0 else "No")

