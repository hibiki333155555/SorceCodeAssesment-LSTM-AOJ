#include <iostream>
#include <vector>

using namespace std;

void printArray(int a[], int n)
{
    for (int i = 0; i < n; ++i) {
	cout << a[i];
	if (i < n - 1)
	    cout << " ";
	else
	    cout << endl;
    }
}

vector<int> G;
int m;          // G のサイズ

int cnt;

/*
数列 {A[0], A[1], ... A[n-1]} の g 個の部分数列
{A[0], A[0+g], A[0+2g],...},
{A[1], A[1+g], A[1+2g],...},
{A[2], A[2+g], A[2+2g],...},..
を同時に挿入ソート
*/
void insertionSort(int A[], int n, int g)
{
    for (int i = g; i < n; ++i) {
	// ...A[i-3g] < A[i-2g] < A[i-g] の中の適当な位置へ A[i] を挿入
	int v = A[i];
	int j = i - g;
	while (j >= 0 && A[j] > v) {
	    A[j+g] = A[j];
	    j -= g;
	    ++cnt;
	}
	A[j + g] = v;
    }
}
	
void shellSort(int A[], int n)
{
    int G[100];
    cnt = 0;
    int m = 0;
    for (int g = n/2; g > 0; ++m, g /= 2) 
	    G[m] = g;
    for (int i = 0; i < m; ++i) 
	insertionSort(A, n, G[i]);
}
    
int main()
{
    int n;
    cin >> n;

    int A[n];
    for (int i = 0; i < n; ++i)
	cin >> A[i];

    shellSort(A, n);
    
    cout << m << endl;
    for (int i = 0; i < m; ++i) {
	cout << G[i];
	if (i < m - 1)
	    cout << " ";
	else
	    cout << endl;
    }
    
    cout << cnt << endl;

    for (int i = 0; i < n; ++i)
	cout << A[i] << endl; 
    
    return 0;
}
	    

