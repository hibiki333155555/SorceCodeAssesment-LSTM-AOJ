// g++ -std=c++17 -D DEV=1 main.cpp
#include <stdio.h>
#include <cassert>
#include <iostream>
#include <fstream>
#include <vector>
#include <algorithm>
#include <string>

using std::cin;
using std::cout;
using std::endl;
using std::terminate;
using std::vector;
using std::sort;
using std::string;
using std::unique;
using std::find;
using std::lower_bound;
using std::distance;

#define rep(i, a, n) for (int i = (a); i < (n); ++i)
#define bit(n, k) ((n >> k) & 1)

class Program {
private:

    bool max(int &a, const int b) {
        if (a < b) {
            a = b;
            return true;
        } else {
            return false;
        }
    }

    bool min(int &a, const int b) {
        if (a > b) {
            a = b;
            return true;
        } else {
            return false;
        }
    }

public:

    int n, m;
    string s;
    char status = 'I';
    vector<int> a, b;

    Program() {
    }

    // void input() {
    //     cin >> n >> s;
    // }

    void input() {
        cin >> n >> m;
        a.resize(n);
        rep(i, 0, n) cin >> a[i];
        b.resize(m);
        rep(i, 0, m) cin >> b[i];
    }

    void solve() {
        input();

        sort(a.begin(), a.end());
        sort(b.begin(), b.end());

        int y = 0;
        rep(i, 0, n) {
            auto it = lower_bound(b.begin(), b.end(), a[i]);

            y += distance(it, b.end());
        }

        cout << y << endl;
    }
};

int main() {

#ifdef DEV
    std::ifstream in("input");
    cin.rdbuf(in.rdbuf());

    int t; cin >> t;
    for (int x = 1; x <= t; ++x) {
        Program p;
        p.solve();
    }
#else
    Program p;
    p.solve();
#endif

    return 0;
}

