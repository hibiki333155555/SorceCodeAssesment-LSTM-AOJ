#include <bits/stdc++.h>
using namespace std;

#ifdef _RUTHEN
#include "debug.hpp"
#else
#define show(...) true
#endif

using ll = long long;
#define rep(i, n) for (int i = 0; i < (n); i++)
template <class T> using V = vector<T>;

int main() {
    ios::sync_with_stdio(false);
    cin.tie(0);
    int N, M;
    cin >> N >> M;
    V<int> A(N), B(M);
    rep(i, N) cin >> A[i];
    rep(j, M) cin >> B[j];
    A.push_back(N + M + 1);
    B.push_back(N + M + 2);
    set<int> S;
    rep(i, N + M) S.insert(i + 1);
    rep(i, N) S.erase(A[i]);
    rep(i, M) S.erase(B[i]);
    while (!S.empty()) {
        int v = *S.begin();
        S.erase(v);
        int za = -1;
        rep(i, N) {
            if (A[i] == 0) {
                za = i;
                break;
            }
        }
        int zb = -1;
        rep(i, M) {
            if (B[i] == 0) {
                zb = i;
                break;
            }
        }
        if (za == -1) {
            B[zb] = v;
            continue;
        }
        if (zb == -1) {
            A[za] = v;
            continue;
        }
        int ya = -1;
        for (int i = za + 1; i < N + 1; i++) {
            if (A[i] != 0) {
                ya = i;
                break;
            }
        }
        int yb = -1;
        for (int i = zb + 1; i < M + 1; i++) {
            if (B[i] != 0) {
                yb = i;
                break;
            }
        }
        if (A[ya] < B[yb]) {
            // Aに入れる
            if ((za > 0 && A[za - 1] < v) || za == 0) {
                A[za] = v;
            } else {
                B[zb] = v;
            }
        } else {
            // Bに入れる
            if ((zb > 0 && B[zb - 1] < v) || zb == 0) {
                B[zb] = v;
            } else {
                A[za] = v;
            }
        }
    }
    rep(i, N) cout << A[i] << (i == N - 1 ? '\n' : ' ');
    rep(i, M) cout << B[i] << (i == M - 1 ? '\n' : ' ');
    return 0;
}
