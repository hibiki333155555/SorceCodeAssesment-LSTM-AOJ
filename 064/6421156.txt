import sys

# sys.setrecursionlimit(200005)
int1 = lambda x: int(x)-1
pDB = lambda *x: print(*x, end="\n", file=sys.stderr)
p2D = lambda x: print(*x, sep="\n", end="\n\n", file=sys.stderr)
def II(): return int(sys.stdin.readline())
def LI(): return list(map(int, sys.stdin.readline().split()))
def LLI(rows_number): return [LI() for _ in range(rows_number)]
def LI1(): return list(map(int1, sys.stdin.readline().split()))
def LLI1(rows_number): return [LI1() for _ in range(rows_number)]
def SI(): return sys.stdin.readline().rstrip()
dij = [(0, 1), (-1, 0), (0, -1), (1, 0)]
# dij = [(0, 1), (-1, 0), (0, -1), (1, 0), (1, 1), (1, -1), (-1, 1), (-1, -1)]
# inf = (1 << 63)-1
inf = (1 << 31)-1
# md = 10**9+7
md = 998244353

s = SI()
i = 0
ll = []
aa = []
imos = [0]*len(s)
cc = []

for c in s:
    if c.islower():
        i += 1
        cc.append(c)
    elif c == "(":
        ll.append(i)
    elif c == ")":
        l = ll.pop()
        a = aa.pop()
        imos[l] += a
        imos[i] -= a
    else:
        aa.append(int(c))
# print(cc)
# print(imos)

for i in range(len(cc)-1):
    imos[i+1] += imos[i]

ans = []
for c, d in zip(cc, imos):
    c = chr((ord(c)-97+d)%26+97)
    ans.append(c)

print("".join(ans))

