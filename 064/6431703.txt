import sys
while True:
  N,M = map(int,input().split())
  if N == 0 and M == 0:
    sys.exit()
  else:
    List1 = [list(map(int,input().split())) for _ in range(N)]
    import itertools
    INF = 10**7
    memo = [[[[INF,0] for k in range(1000)] for j in range(M+1)] for i in range(N)]
    import functools
    @functools.lru_cache()
    def solve(x,y,n):
      if List1[0][0] != 0:
        index = 0
        key = 0
      else:
        index = 1
        key = 1
      if x == index:
        if n == key:
          memo[x][n][List1[x][2*y+1]-1] = [0,List1[x][2*(y+1)]]
          return memo[x][n][List1[x][2*y+1]-1]
        else:
          return memo[x][n][List1[x][2*y+1]-1]
      else:
        ansnum = INF
        if List1[x-1][0] != 0:
          for i in range(List1[x-1][0]):
            if memo[x-1][n][List1[x-1][2*i+1]-1][0] == INF:
              memo[x-1][n][List1[x-1][2*i+1]-1] = solve(x-1,i,n)
            ansnum = min(ansnum,memo[x-1][n][List1[x-1][2*i+1]-1][0]+(memo[x-1][n][List1[x-1][2*i+1]-1][1]+List1[x][2*(y+1)])*abs(List1[x][2*y+1]-List1[x-1][2*i+1]))
        if x >= 2 and n >= 1 and List1[x-2][0] != 0:
          for j in range(List1[x-2][0]):
            if memo[x-2][n-1][List1[x-2][2*j+1]-1][0] == INF:
              memo[x-2][n-1][List1[x-2][2*j+1]-1] = solve(x-2,j,n-1)
            ansnum = min(ansnum,memo[x-2][n-1][List1[x-2][2*j+1]-1][0]+(memo[x-2][n-1][List1[x-2][2*j+1]-1][1]+List1[x][2*(y+1)])*abs(List1[x][2*y+1]-List1[x-2][2*j+1]))
        memo[x][n][List1[x][2*y+1]-1] = [ansnum,List1[x][2*(y+1)]]
        #print(memo[x][n][List1[x][2*y+1]-1])
        return memo[x][n][List1[x][2*y+1]-1]
    for s in range(List1[N-1][0]):
      for n in range(M+1):
        solve(N-1,s,n)
    #print(memo[3][1][0:11])
    ans = INF
    for j in range(M+1):
      for k in range(1000):
        ans = min(ans,memo[N-1][j][k][0])
    print(ans)
