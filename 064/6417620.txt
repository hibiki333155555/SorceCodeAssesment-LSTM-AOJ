#include<bits/stdc++.h>
//#include<atcoder/all>
//using namespace atcoder;
#define rep(i,n) for(ll i=0;i<(n);++i)
#define rep2(i,n) for(ll i=1;i<=(n);++i)
#define rep3(i,i0,n) for(ll i=i0;i<(n);++i)
#define rrep(i,n) for(ll i=((n)-1); i>=0; --i)
#define rrep2(i,n) for(ll i=(n); i>0; --i)
#define pb push_back
#define mod 1000000007
#define fi first
#define se second
#define len(x) ((ll)(x).size())
using namespace std;
using ll = long long;
using ld = long double;
using Pi = pair< ll, ll >;
using Tup = tuple< ll, ll ,ll>;
using vl = vector<ll>;
using vd = vector<ld>;
using vvd = vector<vd>;
using vc = vector<char>;
using vb = vector<bool>;
using vs = vector<string>;
using vp = vector<Pi>;
using vvc = vector<vector<char>>;
using vvl = vector<vector<ll>>;
using vvvl = vector<vector<vector<ll>>>;
using vvvvl = vector<vvvl>;
const ll INF = 1LL << 60;
const ld PI = 3.1415926535897932385;
template<class T>bool chmax(T &a, const T &b) { if (a<b) { a=b; return 1; } return 0; }
template<class T>bool chmin(T &a, const T &b) { if (b<a) { a=b; return 1; } return 0; }
ll gcd(ll a, ll b) {return b?gcd(b,a%b):a;}
ll lcm(ll a, ll b) {return a/gcd(a,b)*b;}
#define all(x) x.begin(), x.end()
#define rall(x) x.rbegin(), x.rend()
#define mp make_pair
void printb(ll N,ll d=16){
    rep(i,d){
        cout<<(N/((1LL)<<(d-i-1)))%2;
    }
    cout<<endl;
    
}
void printv(vector<ll>a){
    rep(i,a.size()){
        if(i==a.size()-1){
            cout<<a[i]<<endl;
        }else{
            cout<<a[i]<<" ";
        }
    }
}
void printv2(vector<ll>a){
    rep(i,a.size()){
        cout<<a[i]<<endl;
    }
}
void printvv(vvl a){
    rep(i,a.size()){
        printv(a[i]);
    }
}
bool In_map(ll y,ll x,ll h,ll w){
    if(y<0 || x<0 || y>=h || x>=w){
        return 0;
    }else{
        return 1;
    }
}
bool compare(Pi a, Pi b) {
    if(a.first != b.first){
        return a.first < b.first;
        
    }else{
        return a.second < b.second;
    }
}


//const vector<ll> dx = {1, 0, -1, 0, 1, -1, 1, -1};
//const vector<ll> dy = {0, 1, 0, -1, 1, 1, -1, -1};
const vector<ll> dx{1,0,-1,0};
const vector<ll> dy{0,1,0,-1};


int main() {
    ll H,W,N;
    cin>>H>>W>>N;

    ll sx,sy,gx,gy;
    cin>>sx>>sy>>gx>>gy;
    vvl c(H,vl(W));
    rep(i,N){
        ll x,y,k;
        cin>>x>>y>>k;
        x--,y--;
        if(k==0){
            c[y][x]=1;
        }
        rep(j,k){
            c[y+j][x-j+k]=1;
            c[y-j][x+j-k]=1;
            c[y-j+k][x+j]=1;
            c[y+j-k][x-j]=1;
        }
        
    }   

    //printvv(c);

    vector<vector<ll>> dist(H,vector<ll>(W,-1));
    queue<pair<ll,ll>> que;
    ll ans=0;
    dist[sy-1][sx-1] = 0;
    que.push(make_pair(sy-1,sx-1));
    while(!que.empty()){
        pair<ll,ll> v =que.front();
        que.pop();
        
        rep(dir,4){
            ll ny = v.first + dy[dir] ;
            ll nx = v.second + dx[dir] ;
            if(ny<0 || ny>=H || nx<0 || nx>=W) continue;
            if(c[ny][nx] == 1) continue;
            if(dist[ny][nx] != -1) continue;
            dist[ny][nx] = dist[v.first][v.second]+1;
            que.push(make_pair(ny,nx));
        }
    }


    if(dist[gy-1][gx-1]!=-1){
        cout<<"Yes"<<endl;
    }else{
        cout<<"No"<<endl;
    }
    return 0;
    

}
