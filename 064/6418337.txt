//L - 多重背包 - Knapsack Problem with Limitations Aizu - DPL_1_G 
#include <iostream>
using namespace std;
const int N = 110, M = 1e4 + 5;
int n, m;
int v[N], w[N], s[N];
int f[N][M]; //f[i][j]:选前i种物品放到背包容量是j的最大价值 
int main()
{
	cin >> n >> m; 
	for(int i = 1 ; i <= n ; i ++)
	{
		cin >> v[i] >> w[i] >> s[i]; //value, weight and limitation
	}
	for(int i = 1; i <= n ; i ++) //i:物品遍历
	{
		for(int j = 0 ; j <= m ; j ++)  //j:背包容量（重量） 
		{
			for(int k = 0 ; k <= s[i] && k * w[i] <= j ; k ++ )
			{
				f[i][j] = max(f[i][j],f[i-1][j - k * w[i]] + k * v[i]);
			}	
		}	
	} 
	cout << f[n][m] << endl;
	return 0;
}
