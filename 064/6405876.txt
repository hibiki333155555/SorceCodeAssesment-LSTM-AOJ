#pragma GCC optimize("O3")
#include<bits/stdc++.h> 
using namespace std;
using ll=long long;
using P=pair<ll,ll>;
template<class T> using V=vector<T>; 
#define fi first
#define se second
#define all(v) (v).begin(),(v).end()
const ll inf=(1e18);
//const ll mod=998244353;
const ll mod=1000000007;
const vector<int> dy={-1,0,1,0},dx={0,-1,0,1};
ll GCD(ll a,ll b) {return b ? GCD(b,a%b):a;}
ll LCM(ll c,ll d){return c/GCD(c,d)*d;}
struct __INIT{__INIT(){cin.tie(0);ios::sync_with_stdio(false);cout<<fixed<<setprecision(20);}} __init;
template<class T> bool chmax(T &a, const T &b) { if (a<b) { a=b; return 1; } return 0; }
template<class T> bool chmin(T &a, const T &b) { if (a>b) { a=b; return 1; } return 0; }
template<class T>void debag(const vector<T> &a){cerr<<"debag :";for(auto v:a)cerr<<v<<" ";cerr<<"\n";}
template<class T>void print(const vector<T> &a){for(auto v:a)cout<<v<<" ";cout<<"\n";}
int main(){
    int n;
    cin>>n;
    V<string> a(n),b(n),c(n);
    for(int i=0;i<n;i++)cin>>a[i];
    for(int i=0;i<n;i++)cin>>b[i];
    for(int i=0;i<n;i++)cin>>c[i];
    V<V<bool>> ad(n,V<bool>(n)),bd(n,V<bool>(n)),cd(n,V<bool>(n));
    for(int i=0;i<n;i++){
        for(int j=0;j<n;j++){
            for(int k=0;k<n;k++){
                 if(a[i][n-j-1]=='1'&&b[n-k-1][n-i-1]=='1'&&c[j][k]=='1'){
                     ad[i][n-j-1]=true;
                     bd[n-k-1][n-i-1]=true;
                     cd[j][k]=true;
                 }
            }
        }
    }
    for(int i=0;i<n;i++){
        for(int j=0;j<n;j++){
            if(a[i][j]=='1'&&!ad[i][j]){
                cout<<"No"<<"\n";
                return 0;;
            }
            if(b[i][j]=='1'&&!bd[i][j]){
                cout<<"No"<<"\n";
                return 0;;
            }
            if(c[i][j]=='1'&&!cd[i][j]){
                cout<<"No"<<"\n";
                return 0;;
            }         
        }
    }
    cout<<"Yes"<<"\n";
}
