#include <bits/stdc++.h>
using namespace std;

template<typename T>
void printVec(const std::vector<T>& v)
{
	//for (int i = 0; i < n; ++i) for (int j = 0; j < n; ++j) cout << ans[i][j] << (j == n-1 ? '\n' : ' ');
	if (v.size() > 0){
        std::cout << "[" << v[0];
        for (auto i = v.begin() + 1; i != v.end(); i++)
        {
            std::cout << ", " << *i;
        }
    } else{
        std::cout << "[";
    }
	std::cout << "]" << endl;
}

class Dice{
public:
    vector<int> state;
    vector<int> score;

    Dice(vector<int>& value);
    void init_state(vector<int>& state);
    void cmd(char ch, vector<int>& state, vector<int>& score);

};


Dice::Dice(vector<int>& value){
    score = value; //値コピー
    state = {0,1,2,3,4,5,6};
}

void Dice::init_state(vector<int>& state){
    state = {0,1,2,3,4,5,6};
}


void Dice::cmd(char ch, vector<int>& state, vector<int>& score){
    vector<int> st = state;
    vector<int> sc = score;
    if (ch == 'E'){
        state[1] = st[4]; score[1] = sc[4];
        state[3] = st[1]; score[3] = sc[1];
        state[6] = st[3]; score[6] = sc[3];
        state[4] = st[6]; score[4] = sc[6];
    } else if (ch == 'W'){
        state[1] = st[3]; score[1] = sc[3];
        state[3] = st[6]; score[3] = sc[6];
        state[6] = st[4]; score[6] = sc[4];
        state[4] = st[1]; score[4] = sc[1];          
    } else if (ch == 'S'){
        state[1] = st[5]; score[1] = sc[5];
        state[5] = st[6]; score[5] = sc[6];
        state[6] = st[2]; score[6] = sc[2];
        state[2] = st[1]; score[2] = sc[1];           
    } else if (ch == 'N'){
        state[1] = st[2]; score[1] = sc[2];
        state[5] = st[1]; score[5] = sc[1];
        state[6] = st[5]; score[6] = sc[5];
        state[2] = st[6]; score[2] = sc[6];               
    }
}


int main(){
    vector<int> value(7);
    for (int i=1; i < 7; i++) cin >> value[i];
    Dice dice1(value);
    for (int i=1; i < 7; i++) cin >> value[i];
    Dice dice2(value);

    int id1 = -1, id2 = -1;
    for (int j=1; j < 7; j++){
        if (dice1.score[1] == dice2.score[j]){
            id1 = j;
            break;
        }
    }

    if (id1 == 4) dice2.cmd('E', dice2.state, dice2.score);
    else if (id1 == 2) dice2.cmd('N', dice2.state, dice2.score);
    else if (id1 == 3) dice2.cmd('W', dice2.state, dice2.score);
    else if (id1 == 5) dice2.cmd('S', dice2.state, dice2.score);
    else if (id1 == 6) {
        dice2.cmd('N', dice2.state, dice2.score);
        dice2.cmd('N', dice2.state, dice2.score);
    }
    //printVec(dice1.score);
    //printVec(dice2.score);
    if (dice2.score[6] != dice1.score[6]){
        cout << "No" << endl;
        return 0;
    }

    vector<int> order1{dice1.score[4], dice1.score[2], dice1.score[3], dice1.score[5]};
    vector<int> order2{dice2.score[4], dice2.score[2], dice2.score[3], dice2.score[5]};
    //printVec(order1);
    //printVec(order2);
    for (int i=0; i < 4; i++){
        if (order2[i] == dice1.score[4]){
            id2 = i;
            break;
        }
    }
    if (id2 == -1){
        cout << "No" << endl;
        return 0;
    }

    vector<int> order{order2[id2], order2[(id2+1) % 4], order2[(id2+2) % 4], order2[(id2+3) % 4]};
    string s = "Yes";
    for (int i=1; i < 4; i++){
        if (order1[i] != order[i]){
            s = "No";
            break;
        }
    }
    cout << s << endl;
}
