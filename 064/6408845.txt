import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.StringTokenizer;

import static java.lang.Integer.parseInt;

/**
 * Pattern - Largest Square
 */
public class Main {

	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		String line;

		line = br.readLine();

		int H, W;
		H = parseInt(line.substring(0, line.indexOf(' ')));
		W = parseInt(line.substring(line.indexOf(' ') + 1));

		int[][] dp = new int[H + 1][W + 1];

		for (int i = 1; i <= H; i++) {
			StringTokenizer st = new StringTokenizer(br.readLine());
			for (int j = 1; j <= W; j++) {
				dp[i][j] = parseInt(st.nextToken()) == 1 ? 0 : 1;
			}
		}

		int max = 0;

		for (int i = 1; i <= H; i++) {
			for (int j = 1; j <= W; j++) {
				if (dp[i][j] == 1) {
					dp[i][j] = Math.min(dp[i - 1][j - 1], Math.min(dp[i - 1][j], dp[i][j - 1])) + 1;
					max = Math.max(max, dp[i][j]);
				}
			}
		}

		System.out.println(max * max);

	}
}

