#include "bits/stdc++.h"
using namespace std;

typedef string::const_iterator State;
#define eps 1e-8L
#define MAX_MOD 1000000007LL
#define GYAKU 500000004LL
#define MOD 998244353LL
#define pb push_back
#define mp make_pair
typedef long long ll;
typedef long double ld;
#define REP(a, b) for (long long(a) = 0; (a) < (b); ++(a))
#define ALL(x) (x).begin(), (x).end()

#include "kotamanegi/geometry.hpp"

#define int long long
void solve()
{
  int n;
  cin >> n;
  if (n == 0)
    exit(0);
  ld a, b, c;
  cin >> a >> b >> c;

  vec3 rayDirection(a, b, c);
  vector<pair<vec3, ld>> inputs;
  REP(i, n)
  {
    ld d;
    cin >> a >> b >> c >> d;
    inputs.push_back({{a, b, c}, d});
  }
  vec3 rayPosition(0, 0, 0);
  while (true)
  {
    ld minT = 1e18;
    int reflect = -1;
    REP(i, n)
    {
      ld t = collisionTime(rayPosition, rayDirection, inputs[i].first, inputs[i].second);
      if (t < minT)
      {
        reflect = i;
        minT = t;
      }
    }
    if (reflect == -1)
    {
      cout << rayPosition.x << " " << rayPosition.y << " " << rayPosition.z << endl;
      return;
    }

    rayPosition = rayPosition + rayDirection * minT;
    rayDirection = reflectVector(rayDirection, rayPosition, inputs[reflect].first);
  }
}
#undef int

// generated by oj-template v4.7.2
// (https://github.com/online-judge-tools/template-generator)
int main()
{
  // Fasterize input/output script
  ios::sync_with_stdio(false);
  cin.tie(nullptr);
  cout << fixed << setprecision(10);
  // scanf/printf user should delete this fasterize input/output script

  int t = 10000;
  // cin >> t; // comment out if solving multi testcase
  for (int testCase = 1; testCase <= t; ++testCase)
  {
    solve();
  }
  return 0;
}

