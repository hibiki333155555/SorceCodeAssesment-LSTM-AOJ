// #pragma GCC target("avx2")
#pragma GCC optimize("O3")
// #pragma GCC optimize("unroll-loops")
#include<bits/stdc++.h>
using namespace std;

vector<int> manacher(const string& S) {
    vector<int> R(S.size());
    int i = 0, j = 0;
    while (i < S.size()) {
        while (i-j >= 0 && i+j < S.size() && S[i-j] == S[i+j]) ++j;
        R[i] = j;
        int k = 1;
        while (i-k >= 0 && k+R[i-k] < j) R[i+k] = R[i-k], ++k;
        i += k; j -= k;
    }
    return R;
}

int main() {
    cin.tie(0);
    ios::sync_with_stdio(0);
    int n;
    cin >> n;
    string s;
    cin >> s;
    string t = "";
    for (int i = 0; i < n; ++i) {
        t += s[i];
        t += '#';
    }
    t.pop_back();
    vector<int> a = manacher(t);
    int ans = 0;
    for (int i = 0; i < n - 1; ++i) {
        int j = i * 2 + 1;
        if (a[j] == min(j + 1, (int)a.size() - j)) {
            ++ans;
        }
    }
    cout << ans << '\n';


    return 0;
}

