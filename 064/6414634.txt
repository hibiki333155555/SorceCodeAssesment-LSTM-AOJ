#include <bits/stdc++.h>
#include <complex>
#include <random>
#include <functional>
using namespace std;
using ll = long long;
#define all(A) A.begin(),A.end()
#define ALL(A) A.begin(),A.end()
using vll = vector<ll>;
using vvll = vector<vll>;
#define rep(i, n) for (long long i = 0; i < (long long)(n); i++)
vector<ll> fact, factinv, inv;
ll mod = 998244353;
void prenCkModp(ll n) {
	fact.resize(n + 5);
	factinv.resize(n + 5);
	inv.resize(n + 5);
	fact.at(0) = fact.at(1) = 1;
	factinv.at(0) = factinv.at(1) = 1;
	inv.at(1) = 1;
	for (ll i = 2; i < n + 5; i++) {
		fact.at(i) = (fact.at(i - 1) * i) % mod;
		inv.at(i) = mod - (inv.at(mod % i) * (mod / i)) % mod;
		factinv.at(i) = (factinv.at(i - 1) * inv.at(i)) % mod;
	}

}
ll nCk(ll n, ll k) {
	if (n < k) return 0;
	return fact.at(n) * (factinv.at(k) * factinv.at(n - k) % mod) % mod;
}

int main() {
    ll N;
    cin>>N;
    vll A(N);
    rep(i,N)cin>>A[i];
    prenCkModp(N);
    ll an=1;
    ll D=0;
    ll T=0;
    
    ll P=0;
    rep(i,N){
        if(A[i]==6){
            an*=nCk(D+T,T);
            an%=mod;
            D=0;
            T=0;
            an%=mod;
        }
        else{
            if(A[i]%2==0)D++;
            if(A[i]%3==0)T++;
            if(A[i]==1||A[i]==5||A[i]==7)P++;
        }
    }
    an*=nCk(D+T,T);
    an%=mod;
    an*=nCk(N,P);
    
    an%=mod;
    an*=fact[P];
    an%=mod;
    an%=mod;
    cout<<an<<endl;
}
    


