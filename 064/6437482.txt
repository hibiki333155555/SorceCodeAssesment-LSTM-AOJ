from math import sqrt 

def rotate60(vx, vy):
    x_to = vx*(1/2) - vy*(sqrt(3)/2)
    y_to = vx*(sqrt(3)/2) + vy*(1/2)
    return x_to, y_to


def Koch(x1, y1, x2, y2, n, now=0):
    if now == n:
        res.append((x1, y1))
        return
        
    vx, vy = x2 - x1, y2 - y1
    sx, sy = x1 + vx*(1/3), y1 + vy*(1/3)
    tx, ty = x1 + vx*(2/3), y1 + vy*(2/3)
    
    rx, ry = rotate60(tx - sx, ty - sy)
    ux, uy = sx + rx, sy + ry
    Koch(x1, y1, sx, sy, n, now+1)
    Koch(sx, sy, ux, uy, n, now+1)
    Koch(ux, uy, tx, ty, n, now+1)
    Koch(tx, ty, x2, y2, n, now+1)
        
res = []
n = int(input())
Koch(0, 0, 100, 0, n)
res.append((100, 0))
for x, y in res:
    print(x, y)
