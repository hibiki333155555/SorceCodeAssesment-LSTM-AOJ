// g++ -std=c++17 -D DEV=1 main.cpp
#include <stdio.h>
#include <math.h>
#include <cassert>
#include <iostream>
#include <fstream>
#include <vector>
#include <algorithm>
#include <string>
#include <queue>
#include <stack>
#include <tuple>
#include <map>

using std::cin;
using std::cout;
using std::endl;
using std::terminate;
using std::vector;
using std::sort;
using std::string;
using std::unique;
using std::find;
using std::lower_bound;
using std::distance;
using std::queue;
using std::stack;
using std::tuple;
using std::make_tuple;
using std::tie;
using std::pair;
using std::make_pair;

#define rep(i, a, n) for (int i = (a); i < (n); ++i)
#define bit(n, k) ((n >> k) & 1)

using Vector = pair<long, long>;

class Program {
private:

    bool max(int &a, const int b) {
        if (a < b) {
            a = b;
            return true;
        } else {
            return false;
        }
    }

    bool min(int &a, const int b) {
        if (a > b) {
            a = b;
            return true;
        } else {
            return false;
        }
    }

    Vector p1, p2, p;
    int q;

public:

    Program() {
    }

    void input() {
        {
            auto& [x, y] = p1;
            cin >> x >> y;
        }

        {
            auto& [x, y] = p2;
            cin >> x >> y;
        }

        cin >> q;
    }

    long norm(const Vector &a, const Vector &b) {
        return a.first * b.first + a.second * b.second;
    }

    long cross(const pair<float, float> &a, const pair<float, float> &b) {
        return a.first * b.second - a.second * b.first;
    }

    pair<double, double> projection(const Vector &a, const Vector &b) {
        auto [x, y] = b;

        if (x == 0 && y == 0) {
            return make_pair(0.0, 0.0);
        } else if (x == 0) {
            return make_pair(0.0, 1.0 * a.second);
        } else if (y == 0) {
            return make_pair(1.0 * a.first, 0.0);
        } else {
            return make_pair(
                    1.0 * norm(a, b) / norm(b, b) * x,
                    1.0 * norm(a, b) / norm(b, b) * y);
        }
    }

    pair<float, float> rejection(const Vector &a, const Vector &b) {
        auto [x, y] = projection(a, b);
        return make_pair(a.first - x, a.second - y);
    }

    void solve() {
        input();

        // ベクトルの始点を原点とする
        Vector b = make_pair(p2.first - p1.first, p2.second - p1.second);

        rep(i, 0, q) {
            auto& [x, y] = p;
            cin >> x >> y;

            Vector a = make_pair(x - p1.first, y - p1.second);

            auto c = projection(a, b);

            printf("%.8f %.8f\n", c.first + p1.first, c.second + p1.second);

        }

        // printf("%.8f\n", 0.00000001);
    }
};

int main() {

#ifdef DEV
    std::ifstream in("input");
    cin.rdbuf(in.rdbuf());

    int t; cin >> t;
    for (int x = 1; x <= t; ++x) {
        Program p;
        p.solve();
    }
#else
    Program p;
    p.solve();
#endif

    return 0;
}

