#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#define MAX 500001

int H = 0;
int A[MAX];

void heapIncreasKey(int A[], int i, int key)
{
  int temp;
  A[i] = key;
  while(i > 1 && A[i / 2] < A[i]){
    temp = A[i / 2];
    A[i / 2] = A[i];
    A[i] = temp;
    i = i / 2;
  }
}

void insert(int key)
{
  H++;
  heapIncreasKey(A, H, key);
}

void maxHeapfy(int A[], int i)
{
  int l = 2 * i;
  int r = 2 * i + 1;
  int largest;
  int temp;

  if(l <= H && A[l] > A[i]) largest = l;
  else largest = i;

  if(r <= H && A[r] > A[largest]) largest = r;

  if(largest == i) return;
  else{
    temp = A[largest];
    A[largest] = A[i];
    A[i] = temp;
    maxHeapfy(A, largest);
  }
}


void buidMaxHeap(int A[])
{
  for(int i = H / 2; i > 0; i-- ){
    maxHeapfy(A, i);
  }
}

int heapExtractMax()
{
  int max = A[1];
  A[1] = A[H];
  H--;
  maxHeapfy(A, 1);

  return max;
}

int main()
{
  char s[10];
  int key;
  while(1){
    scanf("%s", s);
    if(s[0] == 'i'){
      scanf("%d", &key);
      insert(key);
    }else if(s[1] == 'x'){
      printf("%d\n", heapExtractMax());
    }else{
      break;
    }
  }

  return 0;
}



