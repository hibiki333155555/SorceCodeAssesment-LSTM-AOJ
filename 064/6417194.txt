#include <iostream>
#include <vector>
#include <deque>
using namespace std;

const int MX = 1000000000;
#define mkp make_pair
pair<int,int> ar4[4] = {mkp(0,1),mkp(0,-1),mkp(1,0),mkp(-1,0)};
struct d{
  int y,x;
  int c;
};
vector<vector<int>> dist(1010,vector<int>(1010,MX));

int main(){
  int h,w;cin>>h>>w;
  int sy=-1,sx=-1,gy=-1,gx=-1;
  vector<vector<char>> A(h,vector<char>(w));
  for(int i = 0; h > i; i++){
    for(int j = 0; w > j; j++){
      cin>>A[i][j];
      if(A[i][j] == 'S'){
        sy = i;
        sx = j;
      }
      if(A[i][j] == 'G'){
        gy = i;
        gx = j;
      }
    }
  }

  deque<d> R;
  R.push_back({sy,sx,0});
  dist[sy][sx] = 0;
  while(R.size()){
    auto x = R.front();R.pop_front();
    if(A[x.y][x.x] == 'U'){
      if(x.y && A[x.y-1][x.x] != '#'){
        if(x.c < dist[x.y-1][x.x]){
          dist[x.y-1][x.x] = x.c;
          R.push_front({x.y-1,x.x,x.c});
        }
      }
    }else if(A[x.y][x.x] == 'D'){
      if(x.y+1 != h && A[x.y+1][x.x] != '#'){
        if(x.c < dist[x.y+1][x.x]){
          dist[x.y+1][x.x] = x.c;
          R.push_front({x.y+1,x.x,x.c});
        }
      }
    }else if(A[x.y][x.x] == 'L'){
      if(x.x && A[x.y][x.x-1] != '#'){
        if(x.c < dist[x.y][x.x-1]){
          dist[x.y][x.x-1] = x.c;
          R.push_front({x.y,x.x-1,x.c});
        }
      }
    }else if(A[x.y][x.x] == 'R'){
      if(x.x+1 != w && A[x.y][x.x+1] != '#'){
        if(x.c < dist[x.y][x.x+1]){
          dist[x.y][x.x+1] = x.c;
          R.push_front({x.y,x.x+1,x.c});
        }
      }
    }else{
      for(int i = 0; 4 > i; i++){
        if(0 <= x.y+ar4[i].first && x.y+ar4[i].first < h && 0 <= x.x+ar4[i].second && x.x+ar4[i].second < w && A[x.y+ar4[i].first][x.x+ar4[i].second] != '#'){
          if(x.c+1 < dist[x.y+ar4[i].first][x.x+ar4[i].second]){
            dist[x.y+ar4[i].first][x.x+ar4[i].second] = x.c+1;
            R.push_back({x.y+ar4[i].first,x.x+ar4[i].second,x.c+1});
          }
        }
      }
    }
  }
  cout << (dist[gy][gx]==MX?-1:dist[gy][gx]) << endl;

}
