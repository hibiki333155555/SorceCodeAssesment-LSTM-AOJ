#!usr/bin/env python3
from collections import defaultdict, deque
from heapq import heappush, heappop
from itertools import permutations, accumulate
import sys
import math
import bisect
def LI(): return [int(x) for x in sys.stdin.readline().split()]
def I(): return int(sys.stdin.readline())
def IR(n):
    return [I() for _ in range(n)]
def LIR(n):
    return [LI() for _ in range(n)]

sys.setrecursionlimit(1000000)
mod = 1000000007

def main():
    g = [chr(ord("A")+i) for i in range(26)]
    f = g+[i+j for i in g for j in g]

    c1,r1,c2,r2 = input().split()
    ans = int(r2)-int(r1)+1
    ans *= f.index(c2)-f.index(c1)+1
    print(ans)
    return


if __name__ == "__main__":
    main()

