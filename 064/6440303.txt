#include <iostream>
#include <string>
#include <vector>
#include <utility>
#include <tuple>
#include <stack>
#include <queue>
#include <deque>
#include <algorithm>
#include <numeric>
#include <cmath>
#include <iomanip>
#include <bitset>

#define rep(i, m, n) for (int i=m; i<n; i++)
#define rept(i, m, n) for (int i=m; i<=n; i++)
#define repi(n) for (int i=0; i<n; i++)
#define repi1(n) for (int i=1; i<=n; i++)
#define repj(n) for (int j=0; j<n; j++)
#define repj1(n) for (int j=1; j<=n; j++)
#define repk(n) for (int k=0; k<n; k++)
#define repk1(n) for (int k=1; k<=n; k++)

#define ALL(x) begin(x), end(x)

#define YY cout<<"Yes"<<endl;
#define NN cout<<"No"<<endl;

#define nextcon(nx, ny, h, w) (0<=nx && nx<h && 0<=ny && ny<w)
#define nxnycon (0<=nx && nx<h && 0<=ny && ny<w)
const int dx[] = {-1, 0, 1, 0};
const int dy[] = {0, 1, 0, -1};
const int dx8[] = {-1, -1, 0, 1, 1, 1, 0, -1};
const int dy8[] = {0, 1, 1, 1, 0, -1, -1, -1};

using namespace std;
using ll = long long;
using vi = vector<int>;
using vvi = vector<vector<int>>;
using pii = pair<int, int>;
using vl = vector<ll>;
using vvl = vector<vector<ll>>;
using pll = pair<ll, ll>;
using graph = vector<vector<int>>;
using wgraph = vector<vector<pair<int, ll>>>;

const int inf = 1e9;
const ll INF = 1e18;
const ll MOD = 1e9 + 7;



int main(){
    int k;
    cin>>k;
    vi r(k),c(k);
    repi(k){
        cin>>r[i]>>c[i];
    }
    vi v={0,1,2,3,4,5,6,7};
    do{
        bool f=1;
        repi(k){
            if(v[r[i]]!=c[i])f=0;
        }
        repi(8)rep(j,i+1,8){
            if(j-i==v[j]-v[i])f=0;
            if(j-i==-v[j]+v[i])f=0;
        }
        if(f){
            repi(8){
                repj(8){
                    cout<<(v[i]==j?'Q':'.');
                }
                cout<<endl;
            }
            return 0;
        }
    }while(next_permutation(ALL(v)));
}

