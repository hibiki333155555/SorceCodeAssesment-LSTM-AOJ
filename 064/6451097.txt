#include <bits/stdc++.h>
// #pragma GCC optimize("Ofast")
// #pragma GCC optimize("unroll-loops")
// #pragma GCC target("sse,sse2,sse3,ssse3,sse4,fma,abm,mmx,avx,avx2")
#define rep(i, n) for (int i = 0; i < (int)(n); i++)
#define rrep(i, n) for (int i = (int)(n - 1); i >= 0; i--)
#define all(x) (x).begin(), (x).end()
#define sz(x) int(x.size())
#define yn(joken) cout<<((joken) ? "Yes" : "No")<<"\n"
#define YN(joken) cout<<((joken) ? "YES" : "NO")<<"\n"
using namespace std;
using ll = long long;
using vi = vector<int>;
using vl = vector<ll>;
using vs = vector<string>;
using vc = vector<char>;
using vd = vector<double>;
using vld = vector<long double>;
using vvi = vector<vector<int>>;
using vvl = vector<vector<ll>>;
using vvs = vector<vector<string>>;
using vvc = vector<vector<char>>;
using vvd = vector<vector<double>>;
using vvld = vector<vector<long double>>;
using vvvi = vector<vector<vector<int>>>;
using vvvl = vector<vector<vector<ll>>>;
using vvvvi = vector<vector<vector<vector<int>>>>;
using vvvvl = vector<vector<vector<vector<ll>>>>;
using pii = pair<int,int>;
using pll = pair<ll,ll>;
const int INF = 1e9;
const ll LINF = 1e18;
template <class T>
bool chmax(T& a, const T& b) {
    if (a < b) {
        a = b;
        return 1;
    }
    return 0;
}
template <class T>
bool chmin(T& a, const T& b) {
    if (b < a) {
        a = b;
        return 1;
    }
    return 0;
}
bool ispow2(int i) { return i && (i & -i) == i; }
bool ispow2(ll i) { return i && (i & -i) == i; }
template <class T>
vector<T> make_vec(size_t a) {
    return vector<T>(a);
}
template <class T, class... Ts>
auto make_vec(size_t a, Ts... ts) {
    return vector<decltype(make_vec<T>(ts...))>(a, make_vec<T>(ts...));
}
template <typename T>
istream& operator>>(istream& is, vector<T>& v) {
    for (int i = 0; i < int(v.size()); i++) {
        is >> v[i];
    }
    return is;
}
template <typename T>
ostream& operator<<(ostream& os, const vector<T>& v) {
    for (int i = 0; i < int(v.size()); i++) {
        os << v[i];
        if (i < int(v.size()) - 1) os << ' ';
    }
    return os;
}

void solve(){
    int N,S;
    cin>>N>>S;
    vvi A(N,vi(4));
    rep(i,N) cin>>A[i];
    vi cnt(4);
    int corner=0;
    int hashi=0;
    rep(i,N){
        vi V(4);
        rep(j,4){
            V[A[i][j]]++;
        }
        if(V[1]==2) corner++;
        if(V[1]==3) hashi++;
        rep(j,4) cnt[j]+=V[j];
    }
    if(hashi){
        if(hashi==2){
            if(cnt[2]==N){
                vi ANS={1,3,1,3};
                cout<<ANS<<endl;
            }
            else if(cnt[2]==N-1){
                vi ANS={1,2,1,3};
                cout<<ANS<<endl;
            }
            else{
                vi ANS={1,2,1,2};
                cout<<ANS<<endl;
            }
        }
        else{
            if(cnt[2]==N){
                vi ANS={1,1,1,3};
                cout<<ANS<<endl;
            }
            else{
                vi ANS={1,1,1,2};
                cout<<ANS<<endl;
            }
        }
        return ;
    }
    int edge_num=0;
    int sm=-1;
    if(corner==4){
        sm=(cnt[1]+1)/2;
        if(cnt[1]&1) edge_num=1;
    }
    else{
        edge_num=2;
        sm=(cnt[1]+2)/2;
    }
    int H=-1,W=-1;
    for(int h=1;h*h<=N+1;h++){
        if((N+1)%h) continue;
        if(h+(N+1)/h==sm){
            H=h;
            W=(N+1)/h;
        }
    }
    int X=H*(W-1)+W*(H-1);
    int num2=X-cnt[2],num3=X-cnt[3];
    if(edge_num==0){
        if(num2==4){
            vi ANS={2,2,2,2};
            cout<<ANS<<endl;
        }
        else if(num2==3){
            vi ANS={2,2,2,3};
            cout<<ANS<<endl;
        }
        else if(num2==2){
            if(S==0){
                vi ANS={2,2,3,3};
                cout<<ANS<<endl;
            }
            else{
                vi ANS={2,3,2,3};
                cout<<ANS<<endl;
            }
        }
        else if(num2==1){
            vi ANS={2,3,3,3};
            cout<<ANS<<endl;
        }
        else{
            vi ANS={3,3,3,3};
            cout<<ANS<<endl;
        }
    }
    else if(edge_num==1){
        if(num2==3){
            vi ANS={1,2,2,2};
            cout<<ANS<<endl;
        }
        else if(num2==2){
            int n2=0,n3=0;
            rep(i,N){
                vi tmp(4);
                rep(j,4) tmp[A[i][j]]++;
                if(tmp[1]==2){
                    n2+=tmp[2];
                    n3+=tmp[3];
                }
                else if(tmp[1]==1){
                    rep(j,4){
                        if(A[i][(j+2)%4]!=1){
                            if(A[i][j]==2) n2++;
                            else if(A[i][j]==3) n3++;
                        }
                    }
                }
            }
            int wanted=2*(H+W-2);
            if(n2==wanted-2){
                vi ANS={1,2,3,2};
                cout<<ANS<<endl;
            }
            else{
                vi ANS={1,2,2,3};
                cout<<ANS<<endl;
            }
        }
        else if(num2==1){
            int n2=0,n3=0;
            rep(i,N){
                vi tmp(4);
                rep(j,4) tmp[A[i][j]]++;
                if(tmp[1]==2){
                    n2+=tmp[2];
                    n3+=tmp[3];
                }
                else if(tmp[1]==1){
                    rep(j,4){
                        if(A[i][(j+2)%4]!=1){
                            if(A[i][j]==2) n2++;
                            else if(A[i][j]==3) n3++;
                        }
                    }
                }
            }
            int wanted=2*(H+W-2);
            if(n3==wanted-2){
                vi ANS={1,3,2,3};
                cout<<ANS<<endl;
            }
            else{
                vi ANS={1,2,3,3};
                cout<<ANS<<endl;
            }
        }
        else{
            vi ANS={1,3,3,3};
            cout<<ANS<<endl;
        }
    }
    else{
        vi ANS;
        ANS.push_back(1);
        ANS.push_back(1);
        rep(_,num2) ANS.push_back(2);
        rep(_,num3) ANS.push_back(3);
        sort(all(ANS));
        cout<<ANS<<endl;
    }
}

int main(){
    cin.tie(nullptr);
    ios::sync_with_stdio(false);

    int tt;
    cin>>tt;
    while(tt--){
        solve();
    }
}

