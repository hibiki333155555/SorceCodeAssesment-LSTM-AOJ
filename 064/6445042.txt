#include <bits/stdc++.h>

int main() {
    int N; std::cin >> N;
    std::vector<std::vector<int>> G(N);

    for (int i = 0; i < N; i++) {
        int u, k; std::cin >> u >> k;
        for (int j = 0; j < k; j++) {
            int v; std::cin >> v;
            G[u-1].push_back(v-1);
        }
    }

    std::vector<std::pair<int, int>> visited(N);
    for (int i = 0; i < N; i++) {
        visited[i].first = -1;
        visited[i].second = -1;
    }

    int cnt = 1;
    auto dfs = [&](auto self, int v) {
        if (visited[v].first != -1) return;
        visited[v].first = cnt++;
        for (const auto nv : G[v]) {
            self(self, nv);
        }
        visited[v].second = cnt++;
    };
    dfs(dfs, 0);

    for (int i = 0; i < N; i++) {
        const auto [in, out] = visited[i];
        std::cout << i + 1 << " " << in << " " << out << std::endl;
    }
}
