#include "iostream"
#include "climits"
#include "list"
#include "queue"
#include "stack"
#include "set"
#include "functional"
#include "algorithm"
#include "string"
#include "map"
#include "unordered_map"
#include "unordered_set"
#include "iomanip"
#include "cmath"
#include "random"
#include "bitset"
#include "cstdio"
#include "numeric"
#include "cassert"
#include "ctime"


using namespace std;

//constexpr long long int MOD = 1000000007;
constexpr long long int MOD = 998244353;
constexpr double EPS = 1e-8;

//int N, M, K, T, H, W, L, R;
long long int N, M, K, T, H, W, L, R;

vector<vector<long long int>>matrix_product(vector<vector<long long int>>v, vector<vector<long long int>>w) {
	vector<vector<long long int>>ret(v.size(), vector<long long int>(w.front().size()));
	for (int i = 0; i < ret.size(); i++) {
		for (int j = 0; j < ret[i].size(); j++) {
			for (int k = 0; k < w.size(); k++) {
				ret[i][j] += v[i][k] * w[k][j];
				ret[i][j] %= MOD;
			}
		}
	}
	return ret;
}

long long val(long long x, long long a, long long b, long long loop) {
	vector<vector<long long>>ans(2, vector<long long>(1));
	ans[0][0] = x;
	ans[1][0] = b;
	vector<vector<long long>>box(2, vector<long long>(2));
	box[0][0] = a;
	box[0][1] = 1;
	box[1][1] = 1;
	vector<vector<long long>>by(2, vector<long long>(2));
	by[0][0] = by[1][1] = 1;
	for (int i = 0; i < 30; i++) {
		if (loop >> i & 1) {
			by = matrix_product(box, by);
		}
		box = matrix_product(box, box);
	}
	ans = matrix_product(by, ans);
	return ans[0][0];
}

vector<long long> val(string& s, vector<long long>& num, int l, int r) {
	long long by = 1;
	vector<long long>ret(27);
	vector<long long>add(27);
	for (int i = l; i < r; i++) {
		if (s[i] == '+') {
			for (int j = 0; j < 27; j++) {
				ret[j] += add[j];
				ret[j] %= MOD;
				add[j] = 0;
			}
			by = 1;
		}
		else if (s[i] == '-') {
			for (int j = 0; j < 27; j++) {
				ret[j] += add[j];
				ret[j] %= MOD;
				add[j] = 0;
				by = -1;
			}
		}
		else if (s[i] >= 'a' && s[i] <= 'z') {
			add[s[i] - 'a'] = MOD + by;
			add[s[i]-'a'] %= MOD;
		}
		else {
			add[26] *= 10;
			add[26] %= MOD;
			add[26] += MOD + by * (s[i] - '0');
			add[26] %= MOD;
		}
	}
	for (int i = 0; i < 27; i++) {
		ret[i] += add[i];
		ret[i] %= MOD;
	}
	return ret;
}

long long val(vector<long long>v, vector<long long>& num) {
	long long ret = 0;
	for (int i = 0; i < 26; i++) {
		ret += v[i] * num[i] % MOD;
	}
	ret += v[26];
	ret %= MOD;
	return ret;
}

vector<pair<long long, long long>>func(vector<string>s) {
	vector<pair<long long, long long>>ret;
	vector<long long>num(26);
	for (auto i : s) {
		if (i.size() == 1)continue;
		long long by = 1;
		for (int j = 0; j < i.size(); j++) {
			if (j + 2 < i.size() && i[j] == 'f' && i[j + 1] == 'o' && i[j + 2] == 'r') {
				int ed = i.size();
				for (int k = j + 4; k < i.size(); k++) {
					if (i[k] == ')') {
						ed = k;
						break;
					}
				}
				by *= val(val(i, num, j + 4, ed), num);
				if (by > MOD * 2) {
					by = 0;
				}
				j = ed;
			}
			else if (j + 4 < i.size() && i[j] == 'p' && i[j + 1] == 'r' && i[j + 2] == 'i' && i[j + 3] == 'n' && i[j + 4] == 't') {
				int ed = i.size();
				for (int k = j + 6; k < i.size(); k++) {
					if (i[k] == ')') {
						ed = k;
						break;
					}
				}
				long long n = val(val(i, num, j + 6, ed), num);
				if (by) {
					if (ret.size() && ret.back().first == n) {
						ret.back().second += by;
					}
					else {
						ret.push_back({ n,by });
					}
				}
				j = ed;
			}
			else {
				int ed = i.size();
				auto box = val(i, num, j + 3, ed);
				long long a = 0;
				long long b = 0;
				for (int k = 0; k < 26; k++) {
					if (i[j] - 'a' == k) {
						a += box[k];
						a %= MOD;
					}
					else {
						b += num[k] * box[k];
						b %= MOD;
					}
				}
				b += box[26];
				b %= MOD;
				num[i[j] - 'a'] = val(num[i[j] - 'a'], a, b, by);
				break;
			}
		}
	}
	return ret;
}

void Solve() {
	vector<string>s(N), t(M);
	for (auto& i : s) {
		cin >> i;
	}
	for (auto& i : t) {
		cin >> i;
	}
	auto a = func(s);
	auto b = func(t);
//	cout << "---a---" << endl;
//	for (auto i : a) {
//		cout << i.first << " " << i.second << endl;
//	}
//	cout << "---b---" << endl;
//	for (auto i : b) {
//		cout << i.first << " " << i.second << endl;
//	}
	if (a == b)cout << "Yes\n";
	else cout << "No\n";
}

int main() {
	ios::sync_with_stdio(false);
	cin.tie(0);

	while (cin >> N >> M, N) {
		Solve();
	}
}
