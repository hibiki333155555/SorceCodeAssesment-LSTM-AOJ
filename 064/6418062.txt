#include <iostream>
#include <algorithm>
#include <vector>
#include <string>

using namespace std;

vector<int> Manacher(string &s){
    int sz = s.size();
    vector<int> res(sz, 0);
    int i = 0, j = 0;
    while (i < sz) {
        while (i - j >= 0 && i + j < sz && s[i - j] == s[i + j]) ++j;
        res[i] = j;
        int k = 1;
        while (i - k >= 0 && k + res[i - k] < j)
            res[i + k] = res[i - k], ++k;
        i += k; j -= k;
    }
    return res;
}

void solve(){
    int N; cin >> N;
    string s;
    for(int i = 0; i < N; i++){
        char c; cin >> c;
        s += c;
        if(i != N - 1) s += '|';
    }

    vector<int> range = Manacher(s);

    int ans = 0, M = N * 2 - 1;
    for(int i = 1; i < M; i += 2){
        if(range[i] == min(i + 1, M - i)) ans++;
    }

    cout << ans << "\n";
}

int main(){
    cin.tie(nullptr);
    ios::sync_with_stdio(false);
    solve();
    return 0;
}
