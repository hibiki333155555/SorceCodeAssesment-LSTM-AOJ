#include<stdio.h>
#include<stdlib.h>
#include<string.h>
typedef struct node{
    struct node *right,*left;
    int key;
}ND;
ND root;
void insert(ND *,int);
ND *make(int);
void print();
void print_pr(ND *);
void print_in(ND *);
int find(ND *,int);
int main(){
    int n,num,flag=0;
    char order[7];
    scanf("%d",&n);
    while(n--){
        scanf("%s",order);
        if(0==strcmp(order,"insert")){scanf("%d",&num);if(flag==0){root.key=num;root.right=NULL;flag=1;}else insert(&root,num);}
        else if(0==strcmp(order,"print"))print();
        else if(0==strcmp(order,"find")){scanf("%d",&num);if(find(&root,num))printf("yes\n");else printf("no\n");}
        else exit(9);
    }
    return 0;
}
void insert(ND *now,int num){
    if(now->left==NULL&&num<now->key){now->left=make(num);return;}
    else if(now->right==NULL&&num>now->key){now->right=make(num);return;}
    else {
        if(num<now->key)insert(now->left,num);
        else insert(now->right,num);
    }
}
ND *make(int num){ND *tmp=(ND *)malloc(sizeof(ND));tmp->key=num;tmp->left=tmp->right=NULL;return tmp;}
void print(){
    print_in(&root);
    printf("\n");
    print_pr(&root);
    printf("\n");
}
void print_in(ND *now){
    if(now==NULL)return;
    print_in(now->left);
    printf(" %d",now->key);
    print_in(now->right);
}
void print_pr(ND *now){
    if(now==NULL)return;
    printf(" %d",now->key);
    print_pr(now->left);
    print_pr(now->right);
}

int find(ND *now,int num){
    if(now==NULL)return 0;
    else if(now->key==num)return 1;
    else if(now->key<=num)return find(now->right,num);
    else if(now->key>num)return find(now->left,num);
    else exit(8);
}
