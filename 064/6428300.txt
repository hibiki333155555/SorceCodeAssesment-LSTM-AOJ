#include <iostream>
#include <vector>
using namespace std;

int N, S;
int A[200009][4];

vector<int> Solve() {
	// Step #1. 個数を数える
	int cnt1 = 0, cnt2 = 0, cnt3 = 0;
	for (int i = 0; i < N; i++) {
		for (int j = 0; j < 4; j++) {
			if (A[i][j] == 1) cnt1 += 1;
			if (A[i][j] == 2) cnt2 += 1;
			if (A[i][j] == 3) cnt3 += 1;
		}
	}
	int SA = cnt2 - cnt3;

	// Step #2. 角の数を数える
	int Kado = 4, Kado2 = 0;
	for (int i = 0; i < N; i++) {
		int ret = 0;
		if (A[i][0] == 1 && A[i][1] == 1) ret += 1;
		if (A[i][1] == 1 && A[i][2] == 1) ret += 1;
		if (A[i][2] == 1 && A[i][3] == 1) ret += 1;
		if (A[i][3] == 1 && A[i][0] == 1) ret += 1;
		Kado -= ret;
		if (ret >= 2) Kado2 = 1;
	}

	// Step #3. 場合分け（H=1 の場合）
	if (Kado2 == 1) {
		if (SA ==  2) return vector<int>{1, 3, 1, 3};
		if (SA == -2) return vector<int>{1, 2, 1, 2};
		if (SA ==  1) return vector<int>{1, 1, 1, 3};
		if (SA == -1) return vector<int>{1, 1, 1, 2};
		return vector<int>{1, 2, 1, 3};
	}

	// Step #4. そうでない場合
	if (Kado2 == 0) {
		if (SA ==  4) return vector<int>{3, 3, 3, 3};
		if (SA == -4) return vector<int>{2, 2, 2, 2};
		if (SA ==  3) return vector<int>{1, 3, 3, 3};
		if (SA == -3) return vector<int>{1, 2, 2, 2};
		if (SA ==  2 && Kado == 0) return vector<int>{2, 3, 3, 3};
		if (SA ==  2 && Kado == 1) return vector<int>{1, 1, 3, 3};
		if (SA == -2 && Kado == 0) return vector<int>{2, 2, 2, 3};
		if (SA == -2 && Kado == 1) return vector<int>{1, 1, 2, 2};
		if (SA ==  1) return vector<int>{1, 2, 3, 3};
		if (SA == -1) return vector<int>{1, 2, 2, 3};
		if (SA == 0 && Kado == 1) return vector<int>{1, 1, 2, 3};
		if (SA == 0 && S == 0) return vector<int>{2, 2, 3, 3};
		return vector<int>{2, 3, 2, 3};
	}
}

int main() {
	int T;
	cin >> T;
	for (int i = 0; i < T; i++) {
		cin >> N >> S;
		for (int j = 0; j < N; j++) cin >> A[j][0] >> A[j][1] >> A[j][2] >> A[j][3];
		vector<int> Answer = Solve();
		cout << Answer[0] << " " << Answer[1] << " " << Answer[2] << " " << Answer[3] << endl;
	}
	return 0;
}
