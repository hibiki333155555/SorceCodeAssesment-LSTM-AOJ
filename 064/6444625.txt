#include <bits/stdc++.h>
using namespace std;
struct point{
    int x,y;
    double len() {return sqrt(x*x+y*y);}
    bool operator<(point &b) {return (x==b.x)?(y>b.y):(x<b.x);}
    point operator-(point &b) {return point{x-b.x,y-b.y};}
};
const int N=400;
typedef point vec;
double cross(vec a,vec b) {return a.x*b.y-a.y*b.x;}
double dot(vec a,vec b) {return a.x*b.x+a.y*b.y;}
int main()
{
    while (1)
    {
        int n,x,y,c;
        scanf("%d",&n);
        if (n==0) break;
        point p[N+5];
        for (int i=0;i<n;i++) scanf("%d%d",&p[i].x,&p[i].y);
        sort(p,p+n);
        point a={0,0},b=p[0];
        int vis[N+5]={0},flag=1;
        double ans=(b-a).len();
        vis[0]=1;
        while (flag)
        {
            flag=0;
            vec now=b-a;
            double tmp=-2;
            for (int i=1;i<n;i++)
            {
                vec op=p[i]-b;
                double tmpp=dot(op,now)/now.len()/op.len();
                if (!vis[i]
                &&cross(now,p[i]-a)<=0
                &&tmpp>tmp)
                    tmp=tmpp,c=i,flag=1;
            }
            if (flag) vis[c]=1,ans+=(p[c]-b).len(),a=b,b=p[c];
        }
        printf("%.1lf\n",ans);
    }
}
