#include <bits/stdc++.h>
using namespace std;
const long long MOD = 998244353;
long long modsub(long long a, long long b){
	return (a % MOD - b % MOD + MOD) % MOD;
}
long long modpow(long long a, long long b){
	long long ans = 1;
	while (b > 0){
		if (b % 2 == 1){
			ans *= a;
			ans %= MOD;
		}
		a *= a;
		a %= MOD;
		b /= 2;
	}
	return ans;
}
long long modinv(long long a){
	return modpow(a, MOD - 2);
}
vector<long long> mf = {1};
vector<long long> mfi = {1};
long long modfact(int n){
	if (mf.size() > n){
		return mf[n];
	} else {
		for (int i = mf.size(); i <= n; i++){
			long long next = mf.back() * i % MOD;
			mf.push_back(next);
			mfi.push_back(modinv(next));
		}
		return mf[n];
	}
}
long long modfactinv(int n){
	if (mfi.size() > n){
		return mfi[n];
	} else {
		return modinv(modfact(n));
	}
}
long long modbinom(int n, int k){
	if (n < 0 || k < 0 || k > n){
		return 0;
	} else {
		return modfact(n) * modfactinv(k) % MOD * modfactinv(n - k) % MOD;
	}
}
int main(){
  int N;
  cin >> N;
  vector<int> a(N);
  for (int i = 0; i < N; i++){
    cin >> a[i];
  }
  int c157 = 0;
  int c2 = 0, c3 = 0;
  long long ans = 1;
  for (int i = 0; i < N; i++){
    if (a[i] == 1 || a[i] == 5 || a[i] == 7){
      c157++;
    }
    if (a[i] == 2 || a[i] == 4 || a[i] == 8){
      c2++;
    }
    if (a[i] == 3 || a[i] == 9){
      c3++;
    }
    if (a[i] == 6){
      ans *= modbinom(c2 + c3, c2);
      ans %= MOD;
      c2 = 0;
      c3 = 0;
    }
  }
  ans *= modbinom(c2 + c3, c2);
  ans %= MOD;
  for (int i = 0; i < c157; i++){
    ans *= N - i;
    ans %= MOD;
  }
  cout << ans << endl;
}
