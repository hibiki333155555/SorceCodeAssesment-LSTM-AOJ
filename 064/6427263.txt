#include <stdio.h>

const int Mod = 998244353;

long long div_mod(long long x, long long y, long long z)
{
	if (x % y == 0) return x / y;
	else return (div_mod((1 + x / y) * y - x, (z % y), y) * z + x) / y;
}

int main()
{
	int i, N, M, A[2001];
	scanf("%d %d", &N, &M);
	for (i = 1; i <= M; i++) scanf("%d", &(A[i]));
		
	long long fact[2001], fact_inv[2001];
	for (i = 1, fact[0] = 1; i <= N; i++) fact[i] = fact[i-1] * i % Mod;
	for (i = N - 1, fact_inv[N] = div_mod(1, fact[N], Mod); i >= 0; i--) fact_inv[i] = fact_inv[i+1] * (i + 1) % Mod;

	int j, cur, prev;
	long long dp[2][2001] = {}, sum;
	for (i = 1, cur = 1, prev = 0, dp[0][0] = 1; i <= M; i++, cur ^= 1, prev ^= 1) {
		for (j = 0, sum = 0; j <= N; j++) {
			sum += dp[prev][j] * fact_inv[j] % Mod;
			if (j > A[i]) sum -= dp[prev][j - A[i] - 1] * fact_inv[j - A[i] - 1] % Mod;
			if (sum >= Mod) sum -= Mod;
			else if (sum < 0) sum += Mod;
			dp[cur][j] = sum * fact[j] % Mod;
		}
	}
	printf("%lld\n", dp[prev][N]);
	fflush(stdout);
	return 0;
}
