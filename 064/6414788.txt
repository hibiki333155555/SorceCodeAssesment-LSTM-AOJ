#include <bits/stdc++.h>
using namespace std;

constexpr int mod = 998244353;

long long fac[200005], finv[200005], inv[200005];

void COMinit() {
    fac[0] = fac[1] = finv[0] = finv[1] = inv[1] = 1;
    for (int i = 2; i < 200005; i++) {
        fac[i] = fac[i - 1] * i % mod;
        inv[i] = mod - inv[mod % i] * (mod / i) % mod;
        finv[i] = finv[i - 1] * inv[i] % mod;
    }
}

long long COM(int n, int k){
    if (n < k) return 0;
    if (n < 0 || k < 0) return 0;
    return fac[n] * (finv[k] * finv[n - k] % mod) % mod;
}

int main() {
    int N;
    cin >> N;
    vector<int>A(N);
    for(int i = 0; i < N; i++) {
        cin >> A[i];
    }
    int cnt = 0;
    vector<pair<int,int>>tmp;
    tmp.push_back({0,0});
    for(int i = 0; i < N; i++) {
        if(A[i] == 6) {
            tmp.push_back({0,0});
        }
        else if(A[i]%2 == 0) {
            tmp.back().first++;
        }
        else if(A[i]%3 == 0) {
            tmp.back().second++;
        }
        else {
            cnt++;
        }
    }
    COMinit();
    long long ans = 1;
    for(int i = 0; i < tmp.size(); i++) {
        ans *= COM(tmp[i].first+tmp[i].second,tmp[i].first);
        ans %= mod;
    }
    for(int i = 0; i < cnt; i++) {
        ans *= (N-cnt+i+1);
        ans %= mod;
    }
    cout << ans << endl;
}

