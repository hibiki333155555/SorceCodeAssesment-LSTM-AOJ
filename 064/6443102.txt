#include <bits/stdc++.h>
#define rep(i, n) for (int i = 0; i < n; ++i)
typedef long long ll;
using namespace std;

const int dx[] = {-1, 0, 1, 0};
const int dy[] = {0, -1, 0, 1};

void solve(int W, int H) {
    vector<bool> X(W), Y(H);
    vector field(W, vector<bool>(H));
    rep(i, H + W - 1) {
        int x, y, n;
        cin >> x >> y >> n;
        x--, y--;
        X[x] = Y[y] = true;
        field[x][y] = true;
    }

    rep(i, W) {
        if (!X[i]) {
            cout << "NO\n";
            return;
        }
    }
    rep(i, H) {
        if (!Y[i]) {
            cout << "NO\n";
            return;
        }
    }

    vector<bool> flag(H);
    rep(i, H) {
        if (field[0][i])
            flag[i] = true;
    }

    for (int i = 1; i < W; ++i) {
        vector<int> id;
        bool check = false;
        rep(j, H) {
            if (field[i][j]) {
                if (flag[j]) check = true;
                id.push_back(j);
            }
        }

        if (!check) {
            cout << "NO\n";
            return;
        }

        for (int j : id)
            flag[j] = true;
    }
    cout << "YES\n";
}

int main() {
    cin.tie(0);
    ios_base::sync_with_stdio(false);

    int W, H;
    while (cin >> W >> H, W)
        solve(W, H);

    return 0;
}

