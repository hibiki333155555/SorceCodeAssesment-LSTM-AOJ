#include <iostream>
#include <iomanip>
#include <cmath>
#include <vector>
#include <cctype>
#include <string>
#include <sstream>
#include <array>
#include <algorithm>
#include <math.h>

using namespace std;

//int sctoi(char c);

//struct Dice {
class Dice{
public:
    int T, S, E, W, N, B;
    void West(){
        int t = W;
        W=T, T=E, E=B, B=t;
    }
    void East(){
        int t=E;
        E=T, T=W, W=B, B=t;
  }
    void North(){
        int t=N;
        N=T, T=S, S=B, B=t;
    }
    void South(){
        int t=S;
        S=T, T=N, N=B, B=t;
    }
};

int main(){
    cout << fixed;
    cout << setprecision(10);
    //vector<vector<int>> a(n, vector<int>(m));
    //getline(cin, s);
    //array<double, 1000> s; s.fill(0.0);
    //vector<double> x(n),  y(n);   for(auto &e : x) cin >> e;
    //array<int, 6> a; a.fill(0);    for(auto &e : a) cin >> e;
    int n; cin>>n;
    int d[n][6];
    for(int i=0; i<n; i++){
        for(auto &e : d[i]) cin>>e;    
    }
    bool flg = false;
    for(int i=0; i<n-1; i++){
        Dice  ds = {d[i][0], d[i][1], d[i][2], d[i][3], d[i][4], d[i][5]};
        for(int j=i+1; j<n; j++){
            if(d[j][1] ==ds.W || d[j][1] ==ds.E){
                ds.West();
            }
            for(int k=0; k<3; k++){
                if(d[j][1] == ds.S){ break; }
                ds.South();
            }
            for(int k=0; k<3; k++){
                if(d[j][0] == ds.T){ break; }
                ds.West();
            }
            cout<<ds.T<<" "<<ds.S<<" "<<ds.E<<" "<<ds.W<<" "<<ds.N<<" "<<ds.B<<endl;    
            cout<<d[j][0]<<" "<<d[j][1]<<" "<<d[j][2]<<" "<<d[j][3]<<" "<<d[j][4]<<" "<<d[j][5]<<".."<<endl;
            if(d[j][0] == ds.T && d[j][1] == ds.S && d[j][2] == ds.E && d[j][3] == ds.W && d[j][4] == ds.N && d[j][5] == ds.B) {
                flg = true;
                break;
            } //else flg = false;
        }
        if(flg) break;
    }
    if(flg) cout<<"No"<<endl;
    else cout<<"Yes"<<endl;
    return 0;
}
//reverse(s.begin() + a, s.begin() + b + 1 );
//s = s.replace(a, b-a+1, s2);
//if((tc.at(0) - 'a') == (hc.at(0) - 'a')){
//if(tc.compare(hc) == 0){
//s = s.substr(h, ssz - h) + s.substr(0, h); 
//transform(t.begin(), t.end(), t.begin(), ::tolower);
//isalpha(c) a.at(tolower(c) - 'a');
//s.find(p) == string::npos;
/*
int sctoi(char c){
    stringstream ss;
    ss << c;
    int i;
    ss >> i;
    return i;
}
*/

