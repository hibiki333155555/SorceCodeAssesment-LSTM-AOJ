//#include "KowerKoint/base.hpp"
#include <bits/stdc++.h>
using namespace std;
using ll = long long;
using VI = vector<int>;

/* #include <atcoder/all> */
/* using namespace atcoder; */
/* #include "KowerKoint/expansion/ac-library/all.hpp" */

void solve(){
    ll n, m, v, a, b; cin >> n >> m >> v >> a >> b;
    v %= m;
    VI turn(m, -1);
    turn[v] = 1;
    ll cur = v;
    int id = 1;
    int shuki = 0;
    while(1) {
        cur = a*cur+b;
        cur %= m;
        id++;
        if(id > n) {
            cout << "No" << '\n';
            return;
        }
        if(turn[cur] != -1) {
            cout << ("Yes") << '\n';
            return;
        }
        turn[cur] = id;
    }
    /* if(shuki == 0) END("No"); */
    /* ll ans = 0; */
    /* REP(i, m) { */
    /*     if(turn[i] == -1) continue; */
    /*     ll num = (n - turn[i] + 1) / shuki; */
    /*     ans += num * (num - 1) / 2; */
    /* } */
    /* print(ans? "Yes" : "No"); */
}

// generated by oj-template v4.7.2 (https://github.com/online-judge-tools/template-generator)
int main() {
    // Fasterize input/output script
    ios::sync_with_stdio(false);
    cin.tie(nullptr);
    cout << fixed << setprecision(100);
    // scanf/printf user should delete this fasterize input/output script

    int t = 1;
    cin >> t; // comment out if solving multi testcase
    for(int testCase = 1;testCase <= t;++testCase){
        solve();
    }
    return 0;
}

