#include <bits/stdc++.h>
using namespace std;
#define rep(i,n) for(int i = 0;i < (n);i++)
using ll = long long;
using P =pair<int,int>;
ll INF = 1LL << 60;
vector<vector<int>> G;
vector<vector<int>> rG;
vector<bool> used;
vector<int> order;
vector<vector<int>> components;//同じ強連結成分の番号を集合で管理する
void dfs(int v){
  used[v] = 1;
  for(int i : G[v]){
    if(used[i] == 1)continue;
    dfs(i);
  }
  order.push_back(v);
}
void dfs2(int v,int k){
  used[v] = 1;
  components[k].push_back(v);
  for(int i : rG[v]){
    if(used[i] == 1) continue;
    dfs2(i,k);
  }
}
int main(){
  int n,m;
  cin >> n >> m;
  G.resize(n);
  rG.resize(n);
  used.resize(n,0);
  components.resize(n);
  rep(i,m){
    int u,v;
    cin >> u >> v;
    G[u].push_back(v);
    rG[v].push_back(u);
  }
  rep(i,n) if(used[i] == 0)dfs(i);
  used.assign(n,0);
  int cnt = 0;
  for(int i = n-1;i >= 0;i--){
    if(used[order[i]] == 0) dfs2(order[i],cnt);
    cnt++;
  }
  vector<int> num(n);
  for(int i = 0;i < cnt;i++){
    for(int j:components[i]){
      num[j] = i;
    }
  }
  int q;
  cin >> q;
  vector<int> ans;
  rep(i,q){
    int u,v;
    cin >> u >> v;
    if(num[u] == num[v])ans.push_back(1);
    else ans.push_back(0);
  }
  rep(i,q){
    cout << ans[i] << endl;
  }
  return 0;
}

