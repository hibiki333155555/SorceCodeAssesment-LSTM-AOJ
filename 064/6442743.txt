#include<iostream>
#include<vector>
#include<string>
using namespace std;
vector<int> back;

void backtrack(string W){
    int N = W.size();
    back.assign(N, 0);
    back[0] = -1;
    int i = 2, j = 0;
    while(i < N){
        if(W[i-1] == W[j])
            back[i++] = ++j;
        else if(j > 0) j = 0;
        else ++i;
    }
}

int main(){
    string T, P; cin >> T >> P;
    backtrack(P);
    int nt = T.size(), np = P.size();
    int start = 0, i = 0;
    while(start + i < nt){
        if(T[start+i] == P[i]){
            if(++i == np) cout << start << endl;
        }
        else{
            start += i - back[i];
            if(i > 0) i = back[i];
        }
    }

    return 0;
}

