import java.util.Scanner;

public class Main {

	public static final int BIG_NUM = 2000000000;
	public static final long HUGE_NUM = 4000000000000000000L;

	@SuppressWarnings("resource")
	public static void main(String[] args) {

		Scanner scanner = new Scanner(System.in);

		int N = scanner.nextInt();
		int A[] = new int[N];

		for(int i = 0; i < N; i++) {

			A[i] = scanner.nextInt();
		}

		int ans = 0;
		for(int base = 0; base < N-1; base++) { //最小の数を引っ張ってくる場所
			for(int i = N-1; i >= base+1; i--) {
				if(A[i] < A[i-1]) {
					int tmp = A[i];
					A[i] = A[i-1];
					A[i-1] = tmp;
					ans++;
				}
			}
		}

		System.out.printf("%d", A[0]);
		for(int i = 1; i < N; i++) {

			System.out.printf(" %d",A[i]);
		}
		System.out.println();
		System.out.printf("%d\n", ans);
	}
}


class Edge{
	Edge(int arg_to,int arg_cost){
		this.to = arg_to;
		this.cost = arg_cost;
	}
	public int to;
	public int cost;
}

class State implements Comparable<State>{
	State(int arg_node,int arg_sum_dist){
		this.node = arg_node;
		this.sum_dist = arg_sum_dist;
	}

	public int compareTo(State arg) {

		//■距離の昇順(PQ)
		if(this.sum_dist < arg.sum_dist) {

			return -1;
		}else if(this.sum_dist > arg.sum_dist) {

			return 1;

		}else {

			return 0;
		}
	}

	public int node;
	public int sum_dist;
}
