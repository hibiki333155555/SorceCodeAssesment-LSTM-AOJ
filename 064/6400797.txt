import io
import sys
import math
_INPUT = """\
0
"""
# sys.stdin = io.StringIO(_INPUT)


def separateST(p1, p2):
    perp = [0.0, 0.0]

    perp[0] = (p2[0] - p1[0]) / 3
    perp[1] = (p2[1] - p1[1]) / 3
    p = []
    for i in range(len(perp)):
        x = p1[0] + perp[0] * (i+1)
        y = p1[1] + perp[1] * (i+1)
        p.append([x, y])
    return p


def rotate(s, t):
    THETA = 60.0
    p = [t[0]-s[0], t[1]-s[1]]
    rad = math.radians(THETA)
    ux = math.cos(rad)*p[0] - math.sin(rad) * p[1]
    uy = math.sin(rad)*p[0] + math.cos(rad) * p[1]
    return [ux + s[0], uy + s[1]]


N = int(input())
# S = [33.333333333333336, 0.0]
# E = [50.00000000000001, 28.867513459481287]
S = [0.0, 0.0]
E = [100, 0.0]
print(*S)


def KochCurve(n, S, E):
    if n == 0:
        print(*E)
        return
    st = separateST(S, E)
    u = rotate(st[0], st[1])
    KochCurve(n-1, S, st[0])
    KochCurve(n-1, st[0], u)
    KochCurve(n-1, u, st[1])
    KochCurve(n-1, st[1], E)


KochCurve(N, S, E)

# x = []
# y = []
# for vertex in vertices:
#     x.append(vertex[0])
#     y.append(vertex[1])
# plt.scatter(x, y)
# plt.xlim(-50, 120)
# plt.ylim(-50, 120)
# plt.savefig("mygraph.png")

