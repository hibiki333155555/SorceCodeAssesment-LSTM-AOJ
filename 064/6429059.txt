#include <stdio.h>
#include <stdlib.h>
#include <string.h>

typedef struct Node{
      int key;
      struct Node *next, *prev;
}Node;

Node *nil;

Node* listSerch(int key){
      Node *cur = nil->next;
      while(cur != nil && cur->key != key){
            cur = cur->next;
      }
      return cur;
}

void init(){
      nil =malloc(sizeof(Node));
      nil->next = nil;
      nil->prev = nil;
}

void printList(){
      Node *cur = nil->next;
      int isf = 0;
      while(1){
            if(cur == nil) break;
            if(isf) printf(" ");
            printf("%d",cur->key);
            cur = cur->next;
      }
      printf("\n");
}

void deleteNode(Node *t){
      if(t == nil) return;
      t->prev->next = t->next;
      t->next->prev = t->prev;
      free(t);
}

void deleteFirst(){deleteNode(nil->next);}

void deleteLast(){deleteNode(nil->prev);}

void deleteKey(int key){
      deleteNode(listSerch(key));
}

void insert(int key){
      Node *x = malloc(sizeof(Node));
      x->key = key;
      x->next = nil->next;
      nil->next->prev = x;
      x->prev = nil;
      nil->next = x;
}

int main(void){
    // Your code here!
    int key,n,i;
    char com[20];
    scanf("%d",&n);
    void init();
    for(i=0 ;i<n ;i++){
          scanf("%s%d",com,&key);
          if(com[0] == 'i') insert(key);
          else if(com[0] == 'd'){
                if(strlen(com) > 6){
                      if(com[6] == 'F') deleteFirst();
                      else deleteLast();
                }
          }
    }
    
    printList();
    
    return 0;
}


