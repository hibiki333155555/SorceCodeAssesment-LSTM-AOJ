#include <bits/stdc++.h>
using namespace std;

int is_stable(vector<string> ss, vector<string> sss, int n) {
    for (int i = 0; i < n-1; i++) {
        if (ss.at(i).at(1) == ss.at(i+1).at(1)) {
            int first, second;
            for (int j = 0; j < n; j++) {
                if (sss.at(j) == ss.at(i)) {
                    first = j;
                }
                else if (sss.at(j) == ss.at(i+1)) {
                    second = j;
                }
            }
            if (first - second > 0) {
                cout << "Not stable" << endl;
                return 0;
            }
        }
    }
    cout << "Stable" << endl;
    return 0;
}

void selectionSort(vector<string> sss, int n) {
    vector<string> ss = sss;
    for ( int i = 0; i < n; i++) {
        int minj = i;
        for (int j = i; j < n; j++) {
            if (ss.at(j).at(1) < ss.at(minj).at(1)) minj = j;
        }
        if (i != minj) {
        	swap(ss.at(i), ss.at(minj));
        }
    }
    for ( int i = 0; i < n; i++) {
        if (i < n-1) cout << ss.at(i) << " ";
        else cout << ss.at(i) << endl;
    }
    is_stable(ss, sss, n);
}

void bubbleSort(vector<string> sss, int n) {
    vector<string> ss = sss;
    for (int i = 0; i < n; i++) {
        for (int j = n-1; j > i; j--) {
            if (ss.at(j).at(1) < ss.at(j-1).at(1))
                swap(ss.at(j), ss.at(j-1));
        }
    }
    for ( int i = 0; i < n; i++) {
        if (i < n-1) cout << ss.at(i) << " ";
        else cout << ss.at(i) << endl;
    }
    is_stable(ss, sss, n);
}


int main() {
    int n;
    cin >> n;
    vector<string> ss(n);

    for (int i = 0; i < n; i++) {
        string st;
        cin >> st;
        ss.at(i) = st;
    }
    bubbleSort(ss, n);
  	selectionSort(ss, n);
}
