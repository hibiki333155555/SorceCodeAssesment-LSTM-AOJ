#include<iostream>
#include<cstring>
#include<algorithm>
#include<cstdio>
#include<queue>
using namespace std;
const int N = 1010;
char g[N][N];
int h, w, n;
int d[N][N];
int sx, sy;
int dx[] = {-1,1,0,0};
int dy[] = {0,0,1,-1};
int bfs(char num)
{
	//cout << num << endl;
	memset(d, -1, sizeof d);
	queue<pair<int,int> > que;
	que.push({sx, sy});
	d[sx][sy] = 0;
	while(!que.empty())
	{
		pair<int,int> s = que.front();
		que.pop();
		int x = s.first;
		int y = s.second;
		if (g[x][y] == num)
		{
			//cout << x << " " << y << " "<< d[x][y] << endl<<"haha" << endl;
			return d[x][y];
		}
		for (int i = 0; i < 4; i++)
		{
			int xx = x + dx[i];
			int yy = y + dy[i];
			if (xx < 0 || x >= h) continue;
			if (yy < 0 || y >= w) continue;
			if (g[xx][yy] == 'X') continue;
			if (d[xx][yy] == -1)
			{
				d[xx][yy] = d[x][y] + 1;
				que.push({xx,yy});
			}
		}
	}	
}

int main()
{
	cin >> h >> w >> n;
	int ans = 0;
	for (int i = 0; i < h; i++)
		for (int j = 0; j < w; j++)
		{
			cin >> g[i][j];
			if (g[i][j] == 'S')
				sx = i, sy = j;
		}
	for (char i = '1'; i <= n + '0'; i++)
		ans += bfs(i);
	cout << ans << endl;
	return 0;
}
