from heapq import heappop, heappush, heapify

V,E,r = map(int,input().split())
G = [[] for _ in range(V)]
for _ in range(E):
    s,t,d = map(int,input().split())
    G[s].append((d,t))

def dijkstra(s):
    hq = [(0,s)]
    heapify(hq)
    cost = [10**18] * V
    cost[s] = 0
    while hq:
        c,v = heappop(hq)
        if c > cost[v]:
            continue
        for d, u in G[v]:
            tmp = d + cost[v]
            if tmp < cost[u]:
                cost[u] = tmp
                heappush(hq,(tmp,u))
    return cost

dist = dijkstra(r)
for ans in dist:
    if ans == 10**18:
        print("INF")
    else:
        print(ans)
