#pragma GCC optimize("Ofast")
#include <bits/stdc++.h>
using namespace std;
typedef long long int ll;

string s,t;

int main(){
	cin.tie(nullptr);
	ios::sync_with_stdio(false);
	int n,q; cin >> n >> q;
	queue<pair<int,string>> pq;
	auto tran=[](string s)->int{
		int res=0;
		for(char c:s){
			res=res*3+(c-'A');
		}
		return res;
	};
	vector<int> mp(1594324,-1);
	while(q--){
		string S; cin >> S;
		int Num=tran(S);
		if(mp[Num]>=0){
			cout << mp[Num] << "\n";
		}
		else{
			string T=S; sort(T.begin(), T.end());
			pq.push(make_pair(0,T));
			mp[tran(T)]=0;
			while(pq.size()){
				auto p=pq.front(); pq.pop();
				for(int i=2;i<=n;i++){
					s=p.second.substr(0,i);
					t=(i!=n?p.second.substr(i):"");
					reverse(s.begin(), s.end());
					s+=t;
					int num=tran(s);
					if(mp[num]>=0){
						continue;
					}
					else{
						mp[num]=p.first+1;
						pq.push(make_pair(p.first+1,s));
					}
				}
			}
			cout << mp[Num] << "\n";
		}
	}
}
