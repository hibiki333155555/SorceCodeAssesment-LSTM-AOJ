import sys
import random
from fractions import Fraction

# READ_FROM_FILE = True
READ_FROM_FILE = False

MOVE_FORWARD = 1
GET_MONEY = 2
LOSE_MONEY = 3


def solve0(c_list, v_list, x, y):
    dp = [{} for _ in range(y + 1)]
    dp[0] = {0: Fraction(1)}
    for i in range(y):
        for c_money, prob in dp[i].items():
            for v in v_list:
                j = i + v
                j = min(j, y)
                e, a = c_list[j]

                n_money = c_money
                if e == MOVE_FORWARD:
                    j += a
                    j = min(j, y)
                elif e == GET_MONEY:
                    n_money = c_money + a
                elif e == LOSE_MONEY:
                    n_money = max(0, c_money - a)

                if n_money not in dp[j]:
                    dp[j][n_money] = prob * Fraction(1, x)
                else:
                    dp[j][n_money] += prob * Fraction(1, x)
    expected_money = Fraction(0)
    for money, prob in dp[y].items():
        expected_money += money * prob
    return expected_money.numerator // expected_money.denominator


def solve1(c_list, v_list, x, y):
    prob_list = [Fraction(0)] * (y + 1)
    money_prob_list = []

    prob_list[0] = Fraction(1)
    c_money = 0
    for i in range(y):
        c_prob = Fraction(prob_list[i], x)
        for v in v_list:
            j = i + v
            j = min(j, y)
            e, a = c_list[j]

            money = 0
            if e == MOVE_FORWARD:
                j += a
                j = min(j, y)
            elif e == GET_MONEY:
                money = a
            elif e == LOSE_MONEY:
                money = -a

            prob_list[j] += c_prob
            if money != 0:
                money_prob_list.append([money, c_prob])
                c_money += money

    expected_money = Fraction(0)
    for money, prob in money_prob_list:
        expected_money += money * prob

    return expected_money.numerator // expected_money.denominator


def make_random_data(seed):
    random.seed(seed)

    x = 4
    v_list = []
    while True:
        if len(v_list) == x:
            break
        v = random.randint(1, 10)
        if v not in v_list:
            v_list.append(v)

    y = 50
    z = random.randint(1, y - 1)
    c_list = [(0, 0)] * (y + 1)
    n_set = set()
    while True:
        if len(n_set) == z:
            break

        n = random.randint(1, y - 1)
        if n not in n_set:
            n_set.add(n)
            e = random.randint(1, 3)
            a = random.randint(1, 100)
            c_list[n] = (e, a)

    return x, y, z, v_list, c_list


def main():
    if READ_FROM_FILE:
        f = open('test1.txt', 'r')
    else:
        f = sys.stdin
    while True:
        if 1:
            x, y, z = map(int, f.readline().split())
            if x == y == z == 0:
                break

            v_list = list(map(int, f.readline().split()))
            c_list = [(0, 0)] * (y + 1)
            for _ in range(z):
                n, e, a = map(int, f.readline().split())
                c_list[n] = (e, a)
            print(solve0(c_list, v_list, x, y))
        else:
            seed = random.randint(111111, 999999)
            x, y, z, v_list, c_list = make_random_data(seed)
            print(seed)
            print(solve0(c_list, v_list, x, y))
            # break

    if READ_FROM_FILE:
        f.close()
    return


if __name__ == '__main__':
    main()

