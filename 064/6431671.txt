#include<stdio.h>
#define MAX 1000
#define NIL -1
#include<iostream>
using namespace std;

typedef struct Node
{
	int parent;
	int left;
	int right;
};
Node T[MAX];

void preParse(int u)
{
	if (u == NIL) return;
	printf(" %d", u);
	preParse(T[u].left);
	preParse(T[u].right);
}

void InParse(int u)
{
	if (u == NIL) return;
	InParse(T[u].left);
	printf(" %d", u);
	InParse(T[u].right);
}

void postParse(int u)
{
	if (u == NIL) return;
	postParse(T[u].left);
	postParse(T[u].right);
	printf(" %d", u);
}

int main()
{
	int root = 0;
	int p, l, r, n;
	cin >> n;
	for (int i = 0; i < n; i++) T[i].parent = NIL;
	for (int i = 0; i < n; i++)
	{
		cin >> p >> l >> r;
		T[i].left = l;
		T[i].right = r;
		if (l != NIL) T[l].parent = p;
		if (r != NIL) T[r].parent = p;
	}
	for (int i = 0; i < n; i++)
		if (T[i].parent == NIL) root = i;
	printf("Preorder\n");
	preParse(root);
	printf("\nInorder\n");
	InParse(root);
	printf("\nPostorder\n");
	postParse(root);
	cout << endl;
	return 0;
}
