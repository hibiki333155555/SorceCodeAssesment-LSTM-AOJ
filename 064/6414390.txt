#include <iostream>
constexpr int LEN = 100005;
using namespace std;

class task {
public:
    string name;
    int time;
};
task Q[10000];
int head, tail, MAX = 100000;
void initialize()
{
    head = tail = 0;
}

void enqueue(task x)
{
    Q[tail] = x;
    tail = (tail + 1) % LEN;
}
task dequeue()
{
    task x = Q[head];
    head = (head + 1) % LEN;
    return x;
}
int min(int a, int b) { return a < b ? a : b; }
int main()
{
    int num = 0, slice_time = 0;
    int elaps = 0, c;
    task u;
    cin >> num >> slice_time;
    for (int i = 1; i <= num; i++)
    {
        cin >> Q[i].name >> Q[i].time;
    }
    head = 1; tail = num + 1;
    while (head != tail)
    {
        u = dequeue();
        c = min(slice_time, u.time);
        u.time -= c;
        elaps += c;
        if (u.time > 0) enqueue(u);
        else { cout << u.name << " " << elaps << endl; }

    }


}

