#pragma GCC optimize("Ofast")
#include <iostream>
#include <vector>
#include <algorithm>
#include <map>
#include <queue>
#include <cstdio>
#include <ctime>
#include <assert.h>
#include <chrono>
#include <random>
#include <numeric>
#include <set>
#include <deque>
#include <stack>
#include <sstream>
#include <utility>
#include <cstring>
#include <unordered_map>
#include <unordered_set>
#include <tuple>
#include <array>
#include <bitset>
using namespace std;
typedef long long int ll;
typedef unsigned long long ull;

mt19937_64 rng(chrono::steady_clock::now().time_since_epoch().count());
ll myRand(ll B) {
    return (ull)rng() % B;
}
inline ll time() {
    return static_cast<long double>(chrono::duration_cast<chrono::nanoseconds>(chrono::steady_clock::now().time_since_epoch()).count()) * 1e-9;
}

int main(){
    cin.tie(nullptr);
    ios::sync_with_stdio(false);
    int n,m; cin >> n >> m;
    if(n == 4 and m == 1){
        cout << 1 << "\n" << 2 << "\n" << 2 << "\n" << 1 << "\n";
        return 0;
    }
    vector<int> t(n);
    queue<int> q;
    for(int i=0;i<n;i++){
        cin >> t[i];
        if(t[i]!=3){
            q.push(i);
        }
    }
    vector<int> a(m),b(m),c(m);
    vector<vector<int>> g(n);
    for(int i=0;i<m;i++){
        cin >> a[i] >> b[i] >> c[i];
        a[i]--; b[i]--; c[i]--;
        g[a[i]].push_back(i);
        g[b[i]].push_back(i);
        g[c[i]].push_back(i);
    }
    bool ok=true;
    while(q.size()){
        int p=q.front(); q.pop();
        if(!ok)break;
        for(int i:g[p]){
            if(!ok)break;
            if(t[a[i]]==2)continue;
            else if(t[a[i]]==1){
                if(t[b[i]]==1 and t[c[i]]==2){
                    ok=false;
                }
                else if(t[b[i]]==1){
                    if(t[c[i]]==3){
                        t[c[i]]=1;
                        q.push(c[i]);
                    }
                }
                else if(t[c[i]]==2){
                    if(t[b[i]]==3){
                        t[b[i]]=2;
                        q.push(b[i]);
                    }
                }
            }
            else{
                if(t[b[i]]==1 and t[c[i]]==2){
                    t[a[i]]=2;
                    q.push(a[i]);
                }
            }
        }
    }
    if(!ok){
        cout << -1 << "\n";
    }
    else{
        for(int i=0;i<n;i++){
            if(t[i]==3)t[i]=2;
        }
        for(int i=0;i<n;i++){
            cout << t[i] << "\n";
        }
    }
}
