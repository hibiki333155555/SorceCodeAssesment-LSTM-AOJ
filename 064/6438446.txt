#include <stdio.h>
#include <stdlib.h>

int A[1000 * 1000][2];

int comp(const void *a, const void *b)
{
    return (*(int *)a - *(int *)b);
}

int main(void)
{
    int N, a, Q, T;
    int n;
    int i, j;
    int c, l, r;
    
    scanf("%d", &N);
    
    n = 0;
    for (i = 0; i < N * N; i++){
        scanf("%d", &a);
        for (j = 0; j < i; j++){
            if (A[j][0] == a){
                break;
            }
        }
        if (j == i){
            A[i][0] = a;
            A[i][1] = i;
            n++;
        }
    }
    
    qsort(A, n, sizeof(int) * 2, comp);
    
#if 0    
    for (i = 0; i < n; i++){
        printf("[%d]", A[i][0]);
    }
#endif
    
    scanf("%d", &Q);
    for (i = 0; i < Q; i++){
        scanf("%d", &T);
        l = 0; r = n - 1;
        while (l <= r){
            c = (l + r) / 2;
//printf("<%d %d %d>", l, r, A[c][0]);
            if (T < A[c][0]){
                r = c - 1;
            }
            else if (T > A[c][0]){
                l = c + 1;
            }
            else {
                printf("%d %d\n", (A[c][1] / N) + 1, (A[c][1] % N) + 1, c);
                break;
            }
        }
        if (T != A[c][0]){
            printf("-1\n");
        }
    }
    
    return (0);
}

