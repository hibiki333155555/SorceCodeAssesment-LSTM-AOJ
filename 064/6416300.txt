#include <bits/stdc++.h>

using namespace std;
using pii = pair<int,int>;

map<int,int> convert(map<int,int> a,map<int,int> b){
    map<int,int> res;
    for(auto i:a){
        res[i.first] = b[i.second];
    }
    return res;
}

map<int,int> pow(map<int,int> x,long long y){
    map<int,int> res;
    map<int,int> sum = x;
    for(auto i:x)res[i.first] = i.first;
    while(y){
        if(y & 1)res = convert(res,sum);
        sum = convert(sum,sum);
        y >>= 1;
    }
    return res;
}

map<int,int> makeConverter(stack<pii> st){
    map<int,int> res;
    stack<pii> st2;
    while(st.size()){
        st2.emplace(st.top());
        st.pop();
    }
    while(st2.size()){
        auto p = st2.top();
        st2.pop();
        int x = p.first;
        int y = p.second;
        if(not res.count(x))res[x]=x;
        if(not res.count(y))res[y]=y;
        swap(res[x],res[y]);
    }
    return res;
}

vector<int> func(){
    int n;
    cin >> n;
    vector<int> line(n);
    for(auto&i:line)cin>>i;
    int q;
    cin >> q;
    stack<pii> st;
    for(int i=0;i<q;++i){
        int t;
        cin >> t;
        if(t == 1){
            int x;
            int y;
            cin >> x >> y;
            st.emplace(x-1,y-1);
        }else if(t==2){
            st.pop();
        }else if(t==3){
            int k;
            cin >> k;
            map<int,int> converter = pow(makeConverter(st),k);
            map<int,int> values;
            for(auto i:converter)values[i.first] = line[i.first];
            values = convert(converter,values);
            for(auto i:values)line[i.first]=i.second;
        }else{
            cerr << "INVALID COMMAND" << endl;
            exit(1);
        }
    }
    return line;
}

int main(){
    bool flag = false;
    for(auto i:func()){
        if(flag)cout<<" ";
        cout << i;
        flag = true;
    }
    cout << endl;
}

