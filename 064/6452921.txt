#include<iostream>
#include<queue>
#include<algorithm>
using namespace std;
int arr[105][105];
int d[105];
const int inf=0x3f3f3f3f;
int vis[105];
int n;
void dijkstra()
{

	while(1){
	int k=-1;
	int cost=inf;
	for(int i=0;i<n;i++)//找出最小d 
	{
		if(d[i]<cost&&!vis[i])
		{
			k=i;
			cost=d[i];
		}
	}
	if(k==-1)
	break;
	vis[k]=1;
	for(int i=0;i<n;i++)
	{
		if(arr[k][i]!=inf)
		d[i]=min(d[i],arr[k][i]+d[k]);
	}
}
}
int main()
{
	cin>>n;
	for(int i=0;i<n;i++)
	for(int j=0;j<n;j++)
	arr[i][j]=inf;
	for(int i=1;i<n;i++)
	d[i]=inf;
	for(int i=0;i<n;i++)//构造边 
	{
		int u,k;
		cin>>u>>k;
		for(int i=0;i<k;i++)
		{
			int v,c;
			cin>>v>>c;
			arr[u][v]=c;
		}
	}
	dijkstra();
	for(int i=0;i<n;i++)
	{
		cout<<i<<" "<<d[i]<<endl;
	}
	return 0;
} 
