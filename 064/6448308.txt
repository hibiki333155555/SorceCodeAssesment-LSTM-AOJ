#include <stdio.h>
#include <stdlib.h>

int *cache;
int SIZE;

//list, size, 要素の開始位置
int calc(int *list, int size, int id){
	int left, right, tmp;
	int min = 1000000000;
	//要素数１のとき
	if(size == 1) return 0;
	//要素数２のとき
	if(size == 2){
		if(cache[SIZE*id + 1] == 0) cache[SIZE*id + 1] = *(list - 1) * (*list) * (*(list + 1));
		return cache[SIZE*id + 1];
	}
	//それ以上
	for(int i = 1; i < size; i++){
		left = calc(list, i, id);
		right = calc(list+i, size-i, id+i);
		tmp = *(list - 1) * (*(list + (i-1))) * (*(list + (size-1))) + left + right;
		min = (tmp < min)? tmp : min;
	}
	if(cache[SIZE*id + size] == 0) cache[SIZE*id + size] = min;
	return min;
}

int main(){
	int n, r,c, ans;
	int list[101];
	
	scanf("%d", &n);
	cache = (int *)malloc(sizeof(int) * (n+1) * (n+1));
	for(int i = 0; i < n*n; i++) cache[i] = 0;
	SIZE = n+1;
	
	for(int i = 1; i < n+1; i++){
		scanf("%d %d", &r, &c);
		if(i == 1) list[0] = r;
		list[i] = c;
	}
	printf("%d\n", calc(list + 1, n, 1));
}

