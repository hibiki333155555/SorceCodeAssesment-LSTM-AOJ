#include <bits/stdc++.h>
#define rep(i, n) for (int i = 0; i < n; ++i)
typedef long long ll;
using namespace std;

void solve(int N) {
    vector<pair<int, char>> A;
    A.emplace_back(0, '+');
    rep(i, N) {
        string S;
        cin >> S;
        A.emplace_back(S.size(), S.back());
    }
    A.emplace_back(0, '0');

    vector<int> cnt(10);
    stack<char> op;
    stack<ll> num;
    int cur_depth = 0;
    rep(i, (int)A.size()) {
        auto [depth, c] = A[i];

        if (depth < cur_depth) {
            while (cur_depth > depth) {
                char c = op.top();
                op.pop();

                ll res = 0;
                if (c == '*') {
                    res = 1;
                    rep(_, cnt[cur_depth]) {
                        res *= num.top();
                        num.pop();
                    }
                } else {
                    rep(_, cnt[cur_depth]) {
                        res += num.top();
                        num.pop();
                    }
                }
                cnt[cur_depth] = 0;
                cur_depth--;

                cnt[cur_depth]++;
                num.push(res);
            }
        }
        if (isdigit(c)) {
            cnt[depth]++;
            num.push(c - '0');
        } else
            op.push(c);
        cur_depth = depth;

        cout << "";
    }
    num.pop();
    cout << num.top() << "\n";
}

int main() {
    cin.tie(0);
    ios_base::sync_with_stdio(false);

    int N;
    while (cin >> N, N)
        solve(N);

    return 0;
}

