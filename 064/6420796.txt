
def f():return list(map(int,input().split()))

class Ftree():
    def __init__(self,n):
        self.size=n
        self.tree=[0]*(n+1)

    def add(self,i,x):
        while i<=self.size:
            self.tree[i]+=x
            i+=(i&-i)
    
    def sum(self,i):
        S=0
        while i>0:
            S+=self.tree[i]
            i-=(i&-i)
        return S

n,q=f()
BIT=Ftree(n)
for _ in range(q):
    com,x,y=f()
    if com==0:
       BIT.add(x,y)
    else:
        print(BIT.sum(y)-BIT.sum(x-1))
     

