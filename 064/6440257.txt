def getMaxRectFromHist(hist):
    max_v = 0
    h = []
    
    for x in hist:
        h.append(x)
    h.append(0)
    
    stack = []
    
    for i in range(len(h)):
        cur_h = h[i]
        
        if len(stack) == 0:
            stack.append((cur_h, i))
        elif stack[-1][0] <= cur_h:
            stack.append((cur_h, i))
        elif stack[-1][0] > cur_h:
            new_i = i
            
            while len(stack) != 0 and stack[-1][0] > cur_h:
                rect = stack.pop()
                new_i = rect[1]
                max_v = max(max_v, (i - new_i) * rect[0])
                
            stack.append((cur_h, new_i))
            
    return max_v

def main():
    h, w = map(int, input().split())
    g = [input().split() for _ in range(h)]
    
    t = []
    
    for y in range(h):
        tmp_list = []
        for x in range(w):
            if y == 0:
                if g[y][x] == "0":
                    tmp_list.append(1)
                else:
                    tmp_list.append(0)
            else:
                if g[y][x] == "0":
                    tmp_list.append(t[y-1][x] + 1)
                else:
                    tmp_list.append(0)
        
        t.append(tmp_list)
        
    # print(t)
    ans = 0
    for hist in t:
        m = getMaxRectFromHist(hist)
        ans = max(ans, m)
    
    print(ans)
    
if __name__ == "__main__":
    main()
