#include <stdio.h>
#include <unistd.h>

#include <iostream>
#include <vector>
#define N 100000

using namespace std;
vector<vector<int> > G(N);

int ok;

void dfs(int from, int tar, int visited[]) {
  visited[from] = 1;
  for (int i = 0; i < G[from].size(); i++) {
    if (ok) return;
    int next_v = G[from][i];
    if (visited[next_v]) {
      continue;
    }
    if (next_v == tar) {
      ok = 1;
      return;
    } else {
      dfs(next_v, tar, visited);
    }
  }
}

int main(void) {
  int n, m;
  cin >> n >> m;

  int a, b;
  for (int i = 0; i < m; i++) {
    cin >> a >> b;
    G[a].push_back(b);
    G[b].push_back(a);
  }
  int q;
  cin >> q;
  int x, y;
  for (int i = 0; i < q; i++) {
    cin >> x >> y;
    ok = 0;
    int visited[N] = {};
    dfs(x, y, visited);
    if (ok) {
      cout << "yes" << endl;
    } else {
      cout << "no" << endl;
    }
  }
}


