#include<stdio.h>
#include<vector>
#include<algorithm>
#include<iostream>
#include<cmath>
#include<map>
#include<set>
#include <numeric>
using namespace std;

vector<int> v(1,0);

int parent(int i){
  return i/2;
}
int left(int i){
  return 2*i;
}
int right(int i){
  return 2*i+1;
}

void maxHeapify(int i){
  int l,r;
  l = left(i);
  r = right(i);
  int largest;
  if((l <= v.size()-1)&&(v.at(i) < v.at(l))){
    largest = l;
  }
  else{
    largest = i;
  }
  if((r <= v.size()-1)&&(v.at(largest) < v.at(r))){
    largest = r;
  }
  if(largest != i){
    swap(v.at(i),v.at(largest));
    maxHeapify(largest);
  }
}        

int extract(){
  int maxv;
  maxv = v.at(1);
  v.at(1) = v.at(v.size()-1);
  v.pop_back();
  maxHeapify(1);
  return maxv;
}

void increaseKey(int i){
  while((i > 1)&&(v.at(i/2) < v.at(i))){
    swap(v.at(i),v.at(i/2));
  }
}

void insert(int key){
  v.push_back(key);
  increaseKey(v.size()-1);
}  

int main(){
  int key;
  string com;
  while(1){
    cin >> com;
    if(com == "end"){break;}
    else if(com == "insert"){
      cin >> key;
      insert(key);
    }
    else{
      cout << extract() << endl;
    }
  }

}
