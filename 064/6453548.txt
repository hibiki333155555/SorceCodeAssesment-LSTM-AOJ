import sys

# sys.setrecursionlimit(200005)
int1 = lambda x: int(x)-1
pDB = lambda *x: print(*x, end="\n", file=sys.stderr)
p2D = lambda x: print(*x, sep="\n", end="\n\n", file=sys.stderr)
def II(): return int(sys.stdin.readline())
def LI(): return list(map(int, sys.stdin.readline().split()))
def LLI(rows_number): return [LI() for _ in range(rows_number)]
def LI1(): return list(map(int1, sys.stdin.readline().split()))
def LLI1(rows_number): return [LI1() for _ in range(rows_number)]
def SI(): return sys.stdin.readline().rstrip()
dij = [(0, 1), (-1, 0), (0, -1), (1, 0)]
# dij = [(0, 1), (-1, 0), (0, -1), (1, 0), (1, 1), (1, -1), (-1, 1), (-1, -1)]
inf = (1 << 63)-1
# inf = (1 << 31)-1
# md = 10**9+7
md = 998244353

n, m = LI()
aa = LI()

dp = [0]*(n+1)
dp[0] = 1
for a in aa:
    ndp = [0]*(n+1)
    s = 0
    for i in range(n+1):
        s += dp[i]
        if i-a-1 >= 0: s -= dp[i-a-1]
        s %= md
        ndp[i] = s
    dp = ndp

ans = dp[n]
for i in range(n):
    ans = ans*(i+1)%md

print(ans)

