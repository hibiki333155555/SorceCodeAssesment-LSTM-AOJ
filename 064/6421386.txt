

#include <bits/stdc++.h>
#include <iostream>
#include <limits>
#include <numeric>
#include <type_traits>
#include <bitset>
#include <map>
#include <unordered_map>
#include <set>

using namespace std;

#define rep(i,n,m) for(ll (i)=(n);(i)<(m);(i)++)
#define rrep(i,n,m) for(ll (i)=(n);(i)>(m);(i)--)
using ll = long long;
const ll mod = 1000000007;//998244353;
const ll inf = 1e9;
const ll INF = 1e18;


void pline(vector<ll> lis){
    rep(i,0,lis.size()){
        printf ("%lld",lis[i]);
        if (i != lis.size()-1) printf(" ");
        else printf("\n");
    }
}

/*
void pmap(map<ll,mint>& lis){
    for (auto p : lis){
        printf ("%lld:%lld ,",p.first,p.second.val());
    }
    printf ("\n");
}*/

/*
void setxor(set<ll>& a,set<ll>& b){ // a ^= b
    for (ll x : b){
        if (a.count(x) > 0) a.erase(x);
        else a.insert(x);
    }
}

set<ll> setmin(set<ll> a,set<ll> b){

    auto aitr = a.begin();
    auto bitr = b.begin();

    while (aitr != a.end() && bitr != b.end()){
        if (*aitr < *bitr) return a;
        else if (*aitr > *bitr) return b;
        aitr++;
        bitr++;
    }

    if (*aitr == a.end()) return a;
    return b;

}
*/

char shift(char c , ll x){
    x %= 26;
    rep(i,0,x){
        if (c == 'z'){
            c = 'a';
        }else{
            c++;
        }
    }
    return c;
}

int main(){

    ios::sync_with_stdio(false);
    std::cin.tie(nullptr);

    ll N;
    cin >> N;
    string OriS;
    cin >> OriS;

    string S = "#";
    for (char c : OriS){
        S += c;
        S += "#";
    }

    vector<ll> R(S.size(),0);

    ll i = 0, j = 0;
    while (i < S.size()) {
        while (i-j >= 0 && i+j < S.size() && S[i-j] == S[i+j]) ++j;
        R[i] = j;
        ll k = 1;
        while (i-k >= 0 && k+R[i-k] < j) R[i+k] = R[i-k], ++k;
        i += k; j -= k;
    }

    ll ans = 0;
    rep(i,1,S.size()-1){
        if (S[i] == '#'){
            if (i - R[i] == -1 || i+R[i] == S.size()){
                ans += 1;
            }
        }
    }

    cout << ans << endl;

}

/*

J:
前半と後半で分ける？
いんや
Manacherだな


*/
