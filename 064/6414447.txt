// g++ -std=c++17 -DDEV=1 main.cpp
#include <stdio.h>
#include <cassert>
#include <iostream>
#include <fstream>
#include <vector>
#include <string>
#include <set>
#include <map>
#include <algorithm>

using std::cin;
using std::cout;
using std::endl;
using std::terminate;
using std::vector;
using std::string;
using std::set;
using std::map;
using std::sort;
using std::pair;
using std::make_pair;

#define rep(i, a, n) for (int i = (a); i < (n); ++i)
#define bit(n, k) ((n >> k) & 1)

class Program {
    struct Picture {
        int size, value;

        Picture(int size, int value): size(size), value(value) {}
    };

private:

    bool min(int &a, const int b) {
        if (a > b) {
            a = b;
            return true;
        } else {
            return false;
        }
    }

public:

    Program() {
    }

    // 額縁の大きさ: 左 <= 右
    // 価値: 左 <= 右
    void solve() {
        int n, m; cin >> n >> m;

        vector<pair<int, int>> ps;
        rep(i, 0, n) {
            int s, v; cin >> s >> v;
            ps.push_back(make_pair(v, s));
        }

        sort(ps.begin(), ps.end(), std::greater<std::pair<int,int>>());

        // for (auto [value, size] : ps) {
        //     cout << size << "," << value << endl;
        // }

        vector<int> cs;
        cs.resize(m);
        rep(i, 0, m) {
            cin >> cs[i];
        }

        sort(cs.begin(), cs.end(), std::greater<int>());

        int ans = 0;
        int k = 0;
        for (auto c : cs) {
            rep(i, k, ps.size()) {
                if (c >= ps[i].second) {
                    k = i+1;
                    ans++;
                    break;
                }
            }
        }

        cout << ans << endl;
    }
};

int main() {

#ifdef DEV
    std::ifstream in("input");
    cin.rdbuf(in.rdbuf());

    int t; cin >> t;
    for (int x = 1; x <= t; ++x) {
        Program p;
        p.solve();
    }
#else
    Program p;
    p.solve();
#endif

    return 0;
}

