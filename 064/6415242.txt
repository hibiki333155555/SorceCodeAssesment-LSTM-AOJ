#pragma GCC target("avx2")
#pragma GCC optimize("O3")
#pragma GCC optimize("unroll-loops")
#include<bits/stdc++.h> 
using namespace std;
using ll=long long;
using P=pair<ll,ll>;
template<class T> using V=vector<T>; 
#define fi first
#define se second
#define all(v) (v).begin(),(v).end()
const ll inf=(1e18);
// const ll mod=998244353;
const ll mod=1000000007;
const vector<int> dy={-1,0,1,0},dx={0,-1,0,1};
struct __INIT{__INIT(){cin.tie(0);ios::sync_with_stdio(false);cout<<fixed<<setprecision(15);}} __init;
template<class T> bool chmax(T &a, const T &b) { if (a<b) { a=b; return 1; } return 0; }
template<class T> bool chmin(T &a, const T &b) { if (a>b) { a=b; return 1; } return 0; }
template<class T>void debag(const vector<T> &a){cerr<<"debag :";for(auto v:a)cerr<<v<<" ";cerr<<"\n";}
template<class T>void print(const vector<T> &a){for(auto v:a)cout<<v<<" ";cout<<"\n";}
int main(){
    int n;
    cin>>n;
    string s;
    cin>>s;
    V<ll> a(n);
    for(int i=0;i<n;i++)cin>>a[i];
    ll ans=0;
    V<bool> used(n,false);
    {
        priority_queue<P,V<P>,greater<P>> pq;
        int cnt=0;
        for(int i=0;i<n;i++){
            if(s[i]==')'){
                if(used[i])continue;
                pq.emplace(a[i],i);
            }
            if(s[i]=='(')cnt++;
            else cnt--;
            if(cnt<0){
                auto[v,id]=pq.top();
                pq.pop();
                cnt+=2;
                s[id]='(';
                used[id]=true;
                ans+=v;
            }
        }
    }
    {
        priority_queue<P,V<P>,greater<P>> pq;
        int cnt=0;
        for(int i=n-1;i>=0;i--){
            if(s[i]=='('){
                if(used[i])continue;
                pq.emplace(a[i],i);
            }
            if(s[i]==')')cnt++;
            else cnt--;
            if(cnt<0){
                auto[v,id]=pq.top();
                pq.pop();
                cnt+=2;
                s[id]='(';
                used[id]=true;
                ans+=v;
            }
        } 
    }
    cout<<ans<<"\n";
}
