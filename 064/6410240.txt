#include <algorithm>
#include <cmath>
#include <iomanip>
#include <iostream>
#include <iterator>
#include <numeric>
#include <string>
#include <vector>
using namespace std;

class Dice
{
public:
    Dice(int t, int s, int e, int w, int n, int b) : T(t), S(s), E(e), W(w), N(n), B(b){};
    void goS()
    {
        tmp = B;
        B = S;
        S = T;
        T = N;
        N = tmp;
    }
    void goN()
    {
        tmp = B;
        B = N;
        N = T;
        T = S;
        S = tmp;
    }
    void goE()
    {
        tmp = B;
        B = E;
        E = T;
        T = W;
        W = tmp;
    }
    void goW()
    {
        tmp = B;
        B = W;
        W = T;
        T = E;
        E = tmp;
    }

    int getT() { return T; }
    int getE() {return E;}

    void setT(int a) 
    {
        if(a == T) return;
        else if(a == B) {goE();goE();}
        else if(a == N) goS();
        else if(a == S) goN();
        else if(a == E) goW();
        else goE();
    }

    void rotate()
    {
        tmp = E;
        E = S;
        S = W;
        W = N;
        N = tmp;
    }

    void setS(int a){   //CALL setT before setS
        while(S != a)
            rotate();
    }

private:
    int T, S, E, W, N, B, tmp;
};

int main()
{
    int a, b, c, d, e, f;
    cin >> a >> b >> c >> d >> e >> f;
    Dice dice(a, b, c, d, e, f);
    
    int n, t, s;
    cin >> n;
    while(n-- != 0)
    {
        cin >> t >> s;
        dice.setT(t);
        dice.setS(s);
        cout << dice.getE() << endl;
    }

    return 0;
}
