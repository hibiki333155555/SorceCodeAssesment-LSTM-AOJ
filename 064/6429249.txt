class unionfind():
    def __init__(self, N):
        self.N=N
        self.par = [i for i in range(self.N+1)]
        self.rank = [0]*(self.N+1)
  
    def find(self,x):
        if x==self.par[x]:
            return x
        else:
            self.par[x]=self.find(self.par[x])
        return self.par[x]
    
    def same(self,x,y):
        return self.find(x)==self.find(y)
  
    def union(self,x,y):
        x=self.find(x)
        y=self.find(y)
        if x==y:
            return 0
        if self.rank[x]<self.rank[y]:
            self.par[x]=y
        else:
            self.par[y]=x
            if self.rank[x]==self.rank[y]: self.rank[x]+=1

n,q=map(int,input().split())
U=unionfind(n)
for _ in range(q):
    c,x,y=map(int,input().split())
    if c==0:
        U.union(x,y)
    else:
        print(int(U.same(x,y)))
