#include <bits/stdc++.h>
using namespace std;
using ll = long long;
using ld = long double;
using vl = vector<ll>;
template<class T> using vc = vector<T>;
template<class T> using vvc = vector<vector<T>>;

#define eb emplace_back
#define all(x) (x).begin(), (x).end()
#define rep(i, n) for (ll i = 0; i < (n); i++)
#define repr(i, n) for (ll i = (n)-1; i >= 0; i--)
#define repe(i, l, r) for (ll i = (l); i < (r); i++)
#define reper(i, l, r) for (ll i = (r)-1; i >= (l); i--)
#define repa(i,n) for (auto& i: n)

template<class T1, class T2> inline bool chmax(T1 &a, const T2 &b) {if (a<b) { a=b; return 1;} return 0;}
template<class T1, class T2> inline bool chmin(T1 &a, const T2 &b) {if (b<a) { a=b; return 1;} return 0;}
struct init{init(){cin.tie(0);ios::sync_with_stdio(false);cout<<fixed<<setprecision(15);cerr<<fixed<<setprecision(15);}}init_;

#ifdef DEBUG
template <class T> void verr(const set<T> &st) { repa(a, st) cerr << a << " "; cerr << endl; }
template <class S, class T> void verr(const map<S, T> &mp) { repa(a, mp) cerr << "{" << a.first << ", " << a.second << "} "; cerr << endl; }
template <class S, class T, class N> void verr(const vector<pair<S,T>>& a, const N& n) { rep(i, n) cerr << "{" << a[i].first << ", " << a[i].second << "} "; cerr << endl; }
template <class T, class N> void verr(const vector<T>& a, const N& n) { rep(i, n) cerr << a[i] << " "; cerr << endl; }
ll dbgt = 1; void err() { cerr << "passed " << dbgt++ << endl; }
template<class H, class... T> void err(H&& h,T&&... t){ cerr<< h << (sizeof...(t)?" ":"\n") << flush; if(sizeof...(t)>0) err(forward<T>(t)...); }
#endif

const ll INF = 4e18;
const ld EPS = 1e-11;
const ld PI = acos(-1.0L);
// const ll MOD = 1e9 + 7;
const ll MOD = 998244353;
//--------------------------------------------------------------------------------//

int I[101][101][101];

int main() {
    ll N;
    cin >> N;
    vc<string> S(N), T(N), U(N);
    rep(i, N) cin >> S[i];
    rep(i, N) cin >> T[i];
    rep(i, N) cin >> U[i];

    rep(i, N) rep(j, N) rep(k, N) I[i][j][k] = 1;

    rep(i, N) {
        rep(j, N) {
            if(S[i][j] == '0') {
                rep(k, N) I[k][j][N - i - 1] = 0;
            }
            if(T[i][j] == '0') {
                rep(k, N) I[N - i - 1][k][j] = 0;
            }
            if(U[i][j] == '0') {
                rep(k, N) I[j][N - i - 1][k] = 0;
            }
        }
    }

    bool ok = true;
    int iv;
    rep(i, N) rep(j, N) {
        bool sv = S[i][j] - '0';
        iv = 0;
        rep(k, N) if (I[k][j][N - i - 1]) iv = 1;
        if (!iv and sv) ok = false;

        bool tv = T[i][j] - '0';
        iv = 0;
        rep(k, N) if (I[N - i - 1][k][j]) iv = 1;
        if (!iv and tv) ok = false;

        bool uv = U[i][j] - '0';
        iv = 0;
        rep(k, N) if (I[j][N - i - 1][k]) iv = 1;
        if (!iv and uv) ok = false;
    }

    cout << (ok ? "Yes" : "No") << endl;
}
