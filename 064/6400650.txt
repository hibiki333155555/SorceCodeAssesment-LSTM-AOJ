#include <bits/stdc++.h>
using namespace std;
#define rep(i, n) for (int i = 0; i < (int)(n); i++)
using i64 = long long;
constexpr int INF=1234567890;

int main() {
    ios::sync_with_stdio(false);
    cin.tie(nullptr);
    
    int V,E;
    cin >> V >> E;

    vector<vector<i64>> DP(V,vector<i64>(V,INF));
    rep(i,V)DP[i][i]=0;
    //与えられた辺のコストをDPテーブルに入力する
    int s,t,d;
    rep(i,E){
        cin >> s >> t >> d ;        
        DP[s][t]=d;
    }


    rep(k,V)rep(i,V)rep(j,V) DP[i][j]=min(DP[i][j],DP[i][k]+DP[k][j]);


    //負閉路がないか確認する
    //DP[i][i]<0となっている辺があれば負閉路が存在する
    rep(i,V)if (DP[i][i]<0){
        cout << "NEGATIVE CYCLE\n";
        return 0;
    }


    rep(i,V)rep(j,V){
        if (DP[i][j]==INF) cout << "INF";
        else cout << DP[i][j] ;
        cout << (j<V-1?" ":"\n");
    }

}
