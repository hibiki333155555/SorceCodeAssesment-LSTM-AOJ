import java.io.PrintWriter;
import java.util.Arrays;
import java.util.Scanner;


public class Main {
    public static void main(String[] args) throws Exception {
        Scanner sc = new Scanner(System.in);
        PrintWriter pw = new PrintWriter(System.out);
        solve(sc, pw);
        sc.close();
        pw.flush();
        pw.close();
    }

    public static void solve(Scanner sc, PrintWriter pw) {
        long mod = Const.MOD1000000007;
        int n = sc.nextInt();
        int k = sc.nextInt();
        n -= k;
        k = Math.min(k, n);
        if (n < 0) {
            pw.println(0);
            return;
        }
        long[][] p = new long[n + 1][k + 1];
        Arrays.fill(p[0], 1);
        for (int i = 1; i <= n; i++) {
            for (int j = 1; j <= k; j++) {
                p[i][j] = p[i][j - 1];
                if (i >= j) {
                    p[i][j] += p[i - j][j];
                    if (p[i][j] >= mod) p[i][j] -= mod;
                }
            }
        }
        pw.println(p[n][k]);
    }
}

class Const {
    public static final long   LINF   = 1l << 59;
    public static final int    IINF   = (1  << 30) - 1;
    public static final double DINF   = 1e150;
    
    public static final double SMALL  = 1e-12;
    public static final double MEDIUM = 1e-9;
    public static final double LARGE  = 1e-6;

    public static final long MOD1000000007 = 1000000007;
    public static final long MOD998244353  = 998244353 ;
    public static final long MOD754974721  = 754974721 ;
    public static final long MOD167772161  = 167772161 ;
    public static final long MOD469762049  = 469762049 ;

    public static final int[] dx8 = {1, 0, -1, 0, 1, -1, -1, 1};
    public static final int[] dy8 = {0, 1, 0, -1, 1, 1, -1, -1};
    public static final int[] dx4 = {1, 0, -1, 0};
    public static final int[] dy4 = {0, 1, 0, -1};
}


