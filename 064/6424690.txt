#include<bits/stdc++.h>
using namespace std;
typedef long long ll;

//イテレーション
#define REP(i,n) for(ll i=0;i<ll(n);i++)
#define REPD(i,n) for(ll i=n-1;i>=0;i--)
#define FOR(i,a,b) for(ll i=a;i<=ll(b);i++)
#define FORD(i,a,b) for(ll i=a;i>=ll(b);i--)
#define FORA(i,I) for(const auto& i:I)
//x:コンテナ
#define ALL(x) x.begin(),x.end() 
#define SIZE(x) ll(x.size()) 
//定数
#define INF32 2147483647 //2.147483647×10^{9}:32bit整数のinf
#define INF64 9223372036854775807 //9.223372036854775807×10^{18}:64bit整数のinf
#define MOD 1000000007 //問題による
//略記
#define F first
#define S second
//出力(空白区切りで昇順に)
#define coutALL(x) for(auto i=x.begin();i!=--x.end();i++)cout<<*i<<" ";cout<<*--x.end()<<endl;

//aをbで割る時の繰上げ,繰り下げ
ll myceil(ll a,ll b){return (a+(b-1))/b;}
ll myfloor(ll a,ll b){return a/b;}

#define MAX 1000005

signed main(){
    vector<int> cnt(MAX,0);
    vector<bool> isprime(MAX,true);
    isprime[0] = false; isprime[1] = false;
    for (int i = 2; i < MAX; i++) {
        if (!isprime[i]) continue;
        for(int p = i*2; p < MAX; p += i) {
            isprime[p] = false;
        }
    }
    for (int i = 2; i < MAX; i++){
        if(isprime[i]){
            cnt[i] = 1;
        }
        cnt[i] += cnt[i-1];
    }
    ll N = 0;
    while(scanf("%d",&N) != EOF){
        cout << cnt[N] << endl;
    }
}

