using System;
using System.Linq;

internal class Program
{
    public static void Main()
    {
        if (new System.Diagnostics.StackFrame(1).GetMethod() == null)
            Console.SetOut(new System.IO.StreamWriter(Console.OpenStandardOutput()) { AutoFlush = false });

        var n = Console.ReadLine().ParseInt();
        var A = Console.ReadLine().Split().Select(x => x.ParseInt()).Zip(Enumerable.Repeat(0, n), (a, z) => new int[] { z, a }).ToArray();
        Console.ReadLine();
        var m = Console.ReadLine().Split().Select(x => x.ParseInt());
        var pattern = 1 << n;
        var maxmi = 2000;
        var match = new bool[maxmi + 1];
        for (int i = 1; i < pattern; i++)
        {
            var sum = 0;
            var p = i;
            foreach (var Ai in A)
            {
                sum += Ai[p & 1];
                if (sum > maxmi)
                    break;
                p >>= 1;
            }
            if (sum <= maxmi)
                match[sum] = true;
        }

        foreach (var mi in m)
        {
            Console.WriteLine(match[mi] ? "yes" : "no");
        }

        Console.Out.Flush();
    }
}

internal static class Extensions
{
    public static int ParseInt(this string s) => int.Parse(s);
}
