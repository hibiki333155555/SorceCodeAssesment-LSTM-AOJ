#include<bits/stdc++.h>
using namespace std;

#define WHITE 1
#define GRAY 2
#define BLACK 3

/*int stack[100];
int posotionOfStack = 1;
stack[0] = -1;*/
int G[100][100];
int findTime[100], finishTime[100];
int color[100];

/*void push(int k){
    stack[posotionOfStack] = k
    posotionOfStack++;
}

int pop(){
    posotionOfStack--;
    return stack[posotionOfStack];
}*/

void initColor(int n){
    for(int i = 0; i < n; i++){
        color[i] = WHITE;
    }
}

void depthFirstSearch(int i, int n, int *time){
    color[i] = GRAY;
    (*time)++;
    if(findTime[i] == -1){
        findTime[i] = (*time);
    }
    for(int j = 0; j < n; j++){
        if(G[i][j] == 1 && color[j] == WHITE){
            depthFirstSearch(j, n, time);
        }
    }
    color[i] = BLACK;
    (*time)++;
    finishTime[i] = (*time);
}

int main(){
    int n, u, k, v;
    int time = 0;
    cin >> n;
    for(int i = 0; i < n; i++){
        findTime[i] = finishTime[i] = -1;
        for(int j = 0; j < n; j++){
            G[i][j] = 0;
        }
    }
    for(int i = 0; i < n; i++){
        cin >> u >> k;
        u--;
        for(int j = 0; j < k; j++){
            cin >> v;
            v--;
            G[u][v] =1;
        }
    }

    initColor(n);
    depthFirstSearch(0, n, &time);
    for(int i = 0; i < n; i++){
        cout << i + 1 << " " << findTime[i] << " " << finishTime[i] << endl;
    }
}
