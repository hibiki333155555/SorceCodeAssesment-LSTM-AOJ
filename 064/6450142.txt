#include <bits/stdc++.h>
using namespace std;
using ll = long long;
using vll = vector<ll>;
using vvll = vector<vll>;
using vvvll = vector<vvll>;

using vb = vector<bool>;
using vvb = vector<vb>;
using vvvb = vector<vvb>;

#define all(A) A.begin(),A.end()
#define rep(i, n) for (ll i = 0; i < (ll) (n); i++)

vvll G;
vll A;
ll mod = 998244353;
vector<bool> seen;
vll mi;
vll nu;
vll T(2e6);
ll an = 0;
void dfs(ll n) {
    seen[n] = true;
    ll res = 1;
    ll m = 0;
    bool C = true;
    for (auto v : G[n]) {
        if (seen[v])continue;
        dfs(v);
        C = false;
        m += mi[v];
        res *= (nu[v]);
        res %= mod;
    }
    if (C) {
        nu[n] = 1;
        mi[n] = A[n];
        an += mi[n];
        an %= mod;
    }
    else {
        nu[n] += res;
        mi[n] = min(A[n], m);
        an += res * mi[n];
        an %= mod;
    }

}

ll inva(ll N) {
    ll a = N, b = mod, c = 1, d = 0;
    while (b > 0) {
        ll t = a / b;
        a -= t * b;
        swap(a, b);
        c -= t * d;
        swap(c, d);

    }
    c %= mod;
    if (c < 0)c += mod;
    return c;

}

int main() {
   ll A,B;
   cin>>A>>B;
   if(A<B)swap(A,B);
   ll k=0;
   if(A==B&&A==0){
       cout<<1<<endl;
       return 0;
   }
   ll P=A;
   while(P>0){
       k++;
       P/=2;
   }
   //cout<<k<<endl;
   rep(j,k){
       ll i=k-j-1;
       bool AC=(A&(1<<i));
       bool BC=(B&(1<<i));
       if(AC!=BC){
           cout<<j<<endl;
           return 0;
       }
   }
   cout<<k<<endl;
}
