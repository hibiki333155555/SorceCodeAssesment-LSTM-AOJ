#define _USE_MATH_DEFINES
#include <algorithm>                        // min, max, swap, lower_bound, upper_bound
#include <bitset>                           // bitset
#include <cassert>                          // assert
#include <cmath>                            // sin(rad),cos,tan, abs, pow, sqrt, cbrt,  exp, log, log10, log2
#include <cstdio>                           // printf, scanf
#include <ctime>                            // clock
#include <deque>                            // deque
#include <iostream>                         // cout, endl, cin
#include <list>                             // list
#include <map>                              // map
#include <queue>                            // queue, priority_queue
#include <random>                           // rand, srand
#include <set>                              // set
#include <stack>                            // stack
#include <string>                           // string, to_string, stoi
#include <tuple>                            // tuple
#include <utility>                          // pair, make_pair
#include <vector>                           // vector

using namespace std;

typedef long long               ll;
typedef unsigned long long      ull;
typedef vector<int>             vi;
typedef vector<string>          vs;
typedef vector<pair<int, int>>  vpii;
typedef pair<int, int>          pii;
typedef pair<string, int>       psi;
typedef pair<int, string>       pis;
typedef set<int>                si;
typedef map<int, int>           mii;
typedef map<string, int>        msi;
typedef map<string, bool>       msb;
typedef priority_queue<int>     pqi;
typedef stack<int>              sti;
typedef queue<int>              qi;

#define infi 2147483647
#define infl 9223372036854775806
#define MOD  1000000007
#define EPS  0.0000000001

#define rep(i,n) for(int i=0;i<(int)n;i++)
#define repa(i,n) for(int i=1;i<=(int)n;i++)
#define irep(i,n) for(int i=(int)n-1;i>=0;i--)

using namespace std;
/*
...orders of STL...
sort: O(NlogN)  reverse: O(N)  lower_bound: O(logN)  set data structure: O(logN)
bit data structure: O(N/32)

output of clock method [seconds] ... clock() / CLOCKS_PER_SEC
tuple input format ... cin >> get<i>(MYTUPLE[j])  
*/

//---------------------------------------------------


int main() {


	/*
	(void)scanf("%d", &);
	(void)scanf("%d %d", & ,& );
	*/
	
	int n; cin >> n;
	
	vector<int> vec;
	rep(i, n) {
		int x; (void)scanf("%d", &x);
		vec.push_back(x);
	}

	rep(i, n) {
		int v = vec[i], j = i - 1;
		while (j >= 0 && vec[j] > v) {
			vec[j + 1] = vec[j];
			j--;
		}
		vec[j + 1] = v;

		rep(k, n - 1) printf("%d ", vec[k]);
		printf("%d\n", vec[n - 1]);
	}
	

	return 0;
}
