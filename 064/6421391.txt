from collections import deque


H, W = map(int, input().split())
sentinels = ['#'] * (W + 2)
Gs = [sentinels]
for _ in range(H):
    Gs.append(list('#' + input() + '#'))
Gs.append(sentinels)
M = int(input())
abts = [tuple(map(int, input().split())) for _ in range(M)]

INF = 10 ** 9

timelimits = [[INF] * (W + 2) for _ in range(H + 2)]
for i in range(H + 2):
    for j in range(W + 2):
        if Gs[i][j] == '#':
            timelimits[i][j] = 0
        if Gs[i][j] == 'S':
            si, sj = i, j
            Gs[i][j] = '.'
        if Gs[i][j] == 'V':
            vi, vj = i, j
            Gs[i][j] = '.'

for a, b, t in abts:
    timelimits[a][b] = t

times = [[[INF] * (W + 2) for _ in range(H + 2)] for _ in range(2)]
times[0][si][sj] = 0

dis = [-1, 0, 1, 0]
djs = [0, 1, 0, -1]

q = deque([(0, si, sj)])
while q:
    f, i, j = q.popleft()
    if f == 0 and i == vi and j == vj:
        times[1][i][j] = times[0][i][j]
        q.append((1, i, j))
    for di, dj in zip(dis, djs):
        new_time = times[f][i][j] + 1
        ni = i + di
        nj = j + dj
        if times[f][ni][nj] > new_time and timelimits[ni][nj] > new_time:
            times[f][ni][nj] = new_time
            q.append((f, ni, nj))

print("Yes" if times[1][si][sj] < timelimits[i][j] else "No")
# for f in range(2):
#     for row in times[f]:
#         print(row)
#     print()

