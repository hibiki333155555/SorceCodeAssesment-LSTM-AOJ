#include <bits/stdc++.h>
using namespace std;
const long long MOD = 998244353;
pair<long long, long long> composition(pair<long long, long long> f, pair<long long, long long> g){
  return make_pair(f.first * g.first % MOD, (f.first * g.second + f.second) % MOD);
}
long long number(string &S, int &p){
  long long ans = 0;
  while (isdigit(S[p]) != 0){
    ans *= 10;
    ans += S[p] - '0';
    ans %= MOD;
    p++;
  }
  return ans;
}
long long expression(vector<long long> &var, string &S){
  if (S[0] != '-'){
    S.insert(S.begin(), '+');
  }
  int N = S.size();
  int p = 0;
  long long ans = 0;
  while (p < N){
    int sign = 1;
    if (S[p] == '-'){
      sign = -1;
    }
    p++;
    long long value;
    if (isalpha(S[p]) != 0){
      value = var[S[p] - 'a'];
      p++;
    } else {
      value = number(S, p);
    }
    if (sign == -1){
      value = MOD - value;
    }
    ans += value;
    ans %= MOD;
  }
  return ans;
}
pair<long long, long long> expression2(vector<long long> &var, string &S, char c){
  if (S[0] != '-'){
    S.insert(S.begin(), '+');
  }
  int N = S.size();
  int p = 0;
  pair<long long, long long> ans = make_pair(0, 0);
  while (p < N){
    int sign = 1;
    if (S[p] == '-'){
      sign = -1;
    }
    p++;
    pair<long long, long long> value;
    if (isalpha(S[p]) != 0){
      if (S[p] == c){
        value = make_pair(1, 0);
      } else {
        value = make_pair(0, var[S[p] - 'a']);
      }
      p++;
    } else {
      value = make_pair(0, number(S, p));
    }
    if (sign == -1){
      value.first = MOD - value.first;
      value.second = MOD - value.second;
    }
    ans.first += value.first;
    ans.first %= MOD;
    ans.second += value.second;
    ans.second %= MOD;
  }
  return ans;
}
void parse_for(vector<pair<long long, int>> &ans, vector<long long> &var, string &S){
  int rep = 1;
  int p = 0;
  while (true){
    if (S.substr(p, 2) == "fo"){
      p += 4;
      string T;
      while (S[p] != ')'){
        T += S[p];
        p++;
      }
      rep *= expression(var, T);
      p++;
    } else {
      break;
    }
  }
  string T = S.substr(p);
  if (T.substr(0, 2) == "pr"){
    string X = T.substr(6, T.size() - 7);
    long long res = expression(var, X);
    if (rep != 0){
      ans.push_back(make_pair(res, rep));
    }
  } else {
    int id = T[0] - 'a';
    T = T.substr(3);
    pair<long long, long long> f = expression2(var, T, (char) ('a' + id));
    pair<long long, long long> ans = make_pair(1, 0);
    while (rep > 0){
      if (rep % 2 == 1){
        ans = composition(ans, f);
      }
      f = composition(f, f);
      rep /= 2;
    }
    var[id] = (ans.first * var[id] + ans.second) % MOD;
  }
}
vector<pair<long long, int>> program(int N, vector<string> &S){
  vector<pair<long long, int>> ans;
  vector<long long> var(26, 0);
  for (int i = 0; i < N; i++){
    if (S[i].size() == 1){
      //declaration
    } else if (S[i].substr(1, 2) == "<-"){
      //assignment
      int id = S[i][0] - 'a';
      string T = S[i].substr(3);
      long long res = expression(var, T);
      var[id] = res;
    } else if (S[i].substr(0, 2) == "pr"){
      //print
      string T = S[i].substr(6, S[i].size() - 7);
      long long res = expression(var, T);
      ans.push_back(make_pair(res, 1));
    } else {
      //for
      parse_for(ans, var, S[i]);
    }
  }
  return ans;
}
vector<pair<long long, long long>> rle(vector<pair<long long, int>> A){
  int N = A.size();
  vector<pair<long long, long long>> ans;
  if (N >= 1){
    ans.push_back(make_pair(A[0].first, A[0].second));
  }
  for (int i = 1; i < N; i++){
    if (A[i].first == A[i - 1].first){
      ans.back().second += A[i].second;
    } else {
      ans.push_back(make_pair(A[i].first, A[i].second));
    }
  }
  return ans;
}
int main(){
  while (true){
    int N, M;
    cin >> N >> M;
    if (N == 0 & M == 0){
      break;
    }
    vector<string> S(N);
    for (int i = 0; i < N; i++){
      cin >> S[i];
    }
    vector<string> T(M);
    for (int i = 0; i < M; i++){
      cin >> T[i];
    }
    vector<pair<long long, int>> res1 = program(N, S);
    vector<pair<long long, int>> res2 = program(M, T);
    vector<pair<long long, long long>> ans1 = rle(res1);
    vector<pair<long long, long long>> ans2 = rle(res2);
    if (ans1 == ans2){
      cout << "Yes" << endl;
    } else {
      cout << "No" << endl;
    }
  }
}
