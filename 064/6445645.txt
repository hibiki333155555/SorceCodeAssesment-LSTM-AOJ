#include<bits/stdc++.h>
//#include<iostream>
//#include<math.h>
//#include<string.h>
//#include<stdio.h>
//#include<cstring>
using namespace std;
//分析见书《挑战程序设计竞赛2》上P48

struct card{
	char sui;
	int num;
};

struct card a[50],b[50];

void bubble(struct card A[],int N)
{
	int i,j;
	struct card t;
	
	for(i=0;i<N-1;i++)
	{
		for(j=0;j<N-1-i;j++)
		{
			if(A[j].num>A[j+1].num)
			{
				t=A[j];
				A[j]=A[j+1];
				A[j+1]=t;
			}
		}
	}
}
void select(struct card A[],int N)
{
	int i,j,mi,flag,k;
	struct card t;
	for(i=0;i<N-1;i++)
	{
		mi=A[i].num;
		flag=0;
		for(j=i+1;j<N;j++)
		{
			if(A[j].num<mi)
			{
				
				mi=A[j].num;
				flag=1;
				k=j;
			}
		
		}
		if(flag)
		{
			t=A[k];
			A[k]=A[i];
			A[i]=t;
		}
	
	}
	
}

int main()
{	
	int n,i;
	//初始化 
	cin>>n;
	for(i=0;i<n;i++)
	{
		cin>>a[i].sui;
		b[i].sui=a[i].sui;
		cin>>a[i].num;
		b[i].num=a[i].num;
	}
	//排序 
	bubble(a,n);
	select(b,n); 
	
	//输出 
	for(i=0;i<n;i++)
	{
		if(i==n-1)
			cout<<a[i].sui<<a[i].num<<endl;
		else
		 	cout<<a[i].sui<<a[i].num<<" ";
	}
	cout<<"Stable"<<endl;//冒泡一定稳定 
	
	for(i=0;i<n;i++)
	{
		
		if(i==n-1)
			cout<<b[i].sui<<b[i].num<<endl;
		else
		 	cout<<b[i].sui<<b[i].num<<" ";
	}
	for(i=0;i<n;i++)
	{
		if(a[i].sui!=b[i].sui)
		{
			cout<<"Not stable"<<endl;	
			break;
		}
	} 
	if(i==n)
		cout<<"Stable"<<endl;
	
return 0;
}

