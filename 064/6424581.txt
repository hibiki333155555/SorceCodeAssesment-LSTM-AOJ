#include <iostream>
#include <queue>
using namespace std;
static const int N = 100;
static const int infty = (1<<21);

int n, m[N][N],d[N];

void bfs(int s){
    queue<int> q;
    q.push(s);
    for(int i = 0; i < n; i++)d[i] = infty;
    d[s] = 0;
    int u;
    while(!q.empty()){
        u = q.front();
        q.pop();
        for(int i = 0; i < n; i++){
            if(m[u][i] == 0) continue;
            if(d[i] != infty) continue;
            d[i] = d[u] + 1;
            q.push(i);
        }
    }
    for(int i = 0; i < n; i++){
        cout << i+1 << " " << ((d[i] == infty) ? (-1) : d[i]) << endl;
    }
}


int main(void){
    int u,k,v;
    cin >> n;
    
    for(int i = 0; i < n; i++){
        for(int j = 0; j < n; j++) m[i][j] = 0;
    }
    
    for(int i = 0; i < n; i++){
        cin >> u >> k;
        u--;
        for(int j = 0; j < k; j++){
            cin >> v;
            v--;
            m[u][v] = 1;
        }
    }
    
    bfs(0);
    
    return 0;
}
