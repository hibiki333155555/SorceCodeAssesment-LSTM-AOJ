n = int(input())
#1始まり
inf = float('INF')
matrix = [[]]
p = [0]
for i in range(n):
    rc = list(map(int, input().split()))
    matrix.append(rc)
    #p.append(rc[0])
#print(matrix)
dp = [[inf]*(n+1) for _ in range(n+1)]

for i in range(1,n+1):
    dp[i][i] = 0
    if not i==n:
        mat1, mat2 = matrix[i], matrix[i+1]
        dp[i][i+1] = mat1[0] * mat1[1] * mat2[1] #(r1,c1)*(r2,c2)=(r1, c2), c1==r2


##注意: dp[1][n]は他のマスが全て埋まった後に計算される必要がある

for l in range(2, n+1):
    for start_id in range(1, n-l+2):
        last_id = start_id+l-1
        for k in range(start_id, last_id):
            
            additional = matrix[start_id][0]*matrix[k][1]*matrix[last_id][1]
            dp[start_id][last_id] = min(dp[start_id][last_id], 
                                 dp[start_id][k]+dp[k+1][last_id]+additional)

print(dp[1][n])
