inf=10**18
def main():
    N, M = map(int, input().split())
    G = [[0]*N for _ in range(N)]
    for _ in range(M):
        s,t,d = map(int,input().split())
        G[s][t] = d
    
    dp = [[inf]*N for _ in range(1<<N)]
    for i in range(N): dp[0][i] = 0
    x = 0
    #does not matter where to start
    for i in range(1<<N):
        for f in range(N):
            for t in range(N):
                #visited or there is no edge or not visited u
                if not G[f][t] or i>>t&1 or (not i>>f&1 and i!=0): continue
                dp[1<<t|i][t]=min(dp[1<<t|i][t], dp[i][f]+G[f][t])
    #print(dp)
    print(-1 if dp[-1][0]==inf else dp[-1][0])
main()
