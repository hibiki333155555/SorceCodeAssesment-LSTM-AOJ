#include<bits/stdc++.h>
using namespace std;

//#define int long long
//#define lson (rt<<1)
//#define rson ((rt<<1)+1)
//#define mid ((l+r)>>1)
#define mst(a) memset(a,0,sizeof(a))
#define cf int Tcodeforces, Tcodeforce;cin>>Tcodeforces;for(Tcodeforce = 1; Tcodeforce <= Tcodeforces; Tcodeforce++)
typedef long long ll;
typedef unsigned long long ull;
const ll maxn = 2e5 +7;
const ll maxm = 2e5 +7;
const ll inf = 0x3f3f3f3f;
const ll mod = 1e9 +7;

int n;
int sib[maxn];
int fa[maxn], deg[maxn], lc[maxn], rc[maxn], dep[maxn], hei[maxn];

string tpye(int p) {
    if(fa[p] == -1) return "root";
    else if(deg[p] == 0) return "leaf";
    else return "internal node";
}

void dfs(int rt) {
    if(lc[rt] != -1) {
        dep[lc[rt]] = dep[rt] + 1;
        dfs(lc[rt]);
        hei[rt] = hei[lc[rt]] + 1;
    }
    if(rc[rt] != -1) {
        dep[rc[rt]] = dep[rt] + 1;
        dfs(rc[rt]);
        hei[rt] = max(hei[rc[rt]] + 1,hei[rt]);
    }
}

signed main() {
    #ifdef moyi_qwq
        freopen("D:/source file/intxt/in.txt","r",stdin);
    #endif
    
    cin>>n;
    for(int i = 0; i < n; i++) {
        fa[i] = -1;
        deg[i] = 0;
        lc[i] = -1;
        rc[i] = -1;
        dep[i] = 0;
        hei[i] = 0;
        sib[i] = -1;
    }
    for(int i = 0; i < n; i++) {
        int p, l, r; cin>>p>>l>>r;
        lc[p] = l;
        rc[p] = r;
        if(l>=0) sib[l] = r;
        if(r>=0) sib[r] = l;
        if(l>=0) fa[l] = p;
        if(r>=0) fa[r] = p;
        deg[p] = (l!=-1)+(r!=-1);
    }
    for(int i = 0; i < n; i++) {
        if(fa[i] == -1)
            dfs(i);
    }
    for(int i = 0; i < n; i++) {
        printf("node %d: parent = %d, sibling = %d, degree = %d, depth = %d, height = %d, ",i,fa[i],sib[i],deg[i],dep[i],hei[i]);
        cout<<tpye(i)<<endl;
    }
    
    //cerr<<"Time : "<<1000*((double)clock())/(double)CLOCKS_PER_SEC<<"ms";
    return (0);
}

