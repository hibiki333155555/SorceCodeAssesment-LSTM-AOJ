import sys
from bisect import bisect_left

# READ_FROM_FILE = True
READ_FROM_FILE = False


def make_sum_list(max_w, w_list, v_list):
    sum_dic = {0: 0}
    for w, v in zip(w_list, v_list):
        tmp_sum_dic = dict(sum_dic)
        for sum_w, sum_v in sum_dic.items():
            sum_w += w
            if sum_w > max_w:
                continue
            if sum_w in tmp_sum_dic:
                tmp_sum_dic[sum_w] = min(tmp_sum_dic[sum_w], sum_v - v)
            else:
                tmp_sum_dic[sum_w] = sum_v - v
        sum_dic = tmp_sum_dic

    tmp_sum_list = []
    for sum_w, sum_v in sum_dic.items():
        tmp_sum_list.append((sum_w, sum_v))

    tmp_sum_list.sort()
    sum_list = [(tmp_sum_list[0][0], -tmp_sum_list[0][1])]
    for i in range(1, len(tmp_sum_list)):
        p_sum_v = sum_list[-1][1]
        sum_w = tmp_sum_list[i][0]
        sum_v = -tmp_sum_list[i][1]
        if p_sum_v < sum_v:
            sum_list.append((sum_w, sum_v))

    return sum_list


def main():
    if READ_FROM_FILE:
        f = open('test0.txt', 'r')
    else:
        f = sys.stdin

    n, max_w = map(int, f.readline().split())
    w_list = []
    v_list = []
    for _ in range(n):
        v, w = map(int, f.readline().split())
        w_list.append(w)
        v_list.append(v)

    if n == 1:
        if w_list[0] <= max_w:
            print(v_list[0])
        else:
            print(0)
    else:
        n2 = n // 2
        sum0_list = make_sum_list(max_w, w_list[:n2], v_list[:n2])
        sum1_list = make_sum_list(max_w, w_list[n2:], v_list[n2:])
        max_v = 0
        for sum0_w, sum0_v in sum0_list:
            res_w = max_w - sum0_w + 1
            idx = bisect_left([w for w, _ in sum1_list], res_w)
            idx -= 1
            max_v = max(max_v, sum0_v + sum1_list[idx][1])

        print(max_v)

    if READ_FROM_FILE:
        f.close()
    return


if __name__ == '__main__':
    main()

