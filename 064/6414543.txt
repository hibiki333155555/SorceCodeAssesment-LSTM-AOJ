#pragma GCC target("avx2")
#pragma GCC optimize("O3")
#pragma GCC optimize("unroll-loops")
#include <bits/stdc++.h>
using namespace std;
const long long MOD1 = 1000000007;
const long long MOD2 = 998244353;
typedef long long ll;
typedef pair<ll, ll> P;
const long long INF = 1e17;
template <typename T>
void input_arr(vector<T>& A, ll N) {
    for (ll i = 0; i < N; i++) {
        cin >> A[i];
    }
}
void solve() {
    ll M, N; cin >> M >> N;
    vector<string>S(M); input_arr(S,M);
    ll ans = INF;
    for (ll i = 0; i < M - 1; i++) {
        ll o1 = 0, x1 = 0, o2 = 0, x2 = 0;
        for (ll j = 0; j <= i; j++) {
            for (ll k = 0; k < N; k++) {
                if (S[j][k] = 'o') o1++;
                else x1++;
            }
        }
        for (ll j = i + 1; j < M; j++) {
            for (ll k = 0; k < N; k++) {
                if (S[j][k] = 'o') o2++;
                else x2++;
            }
        }
        ans = min(ans, min(o1 + x2, o2 + x1));
    }
    for (ll i = 0; i < N - 1; i++) {
        ll o1 = 0, x1 = 0, o2 = 0, x2 = 0;
        for (ll j = 0; j <= i; j++) {
            for (ll k = 0; k < M; k++) {
                if (S[k][j] = 'o') o1++;
                else x1++;
            }
        }
        for (ll j = i + 1; j < N; j++) {
            for (ll k = 0; k < M; k++) {
                if (S[k][j] = 'o') o2++;
                else x2++;
            }
        }
        ans = min(ans, min(o1 + o2, x2 + x1));
    }
    cout << ans << endl;
}
int main() {
    ll T=1;//cin>>T;
    while(T--)solve();
}
