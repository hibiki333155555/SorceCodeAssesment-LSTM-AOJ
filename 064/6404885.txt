#include<deque>
#include<queue>
#include<vector>
#include<algorithm>
#include<iostream>
#include<set>
#include<cmath>
#include<tuple>
#include<string>
#include<chrono>
#include<functional>
#include<iterator>
#include<random>
#include<unordered_set>
#include<array>
#include<map>
#include<iomanip>
#include<assert.h>
#include<list>
#include<bitset>
#include<stack>
#include<memory>
#include<numeric>
#include<complex>
using namespace std;
using namespace std::chrono;
typedef long long int llint;
typedef long double lldo;
#define mp make_pair
#define mt make_tuple
#define pub push_back
#define puf push_front
#define pob pop_back
#define pof pop_front
#define fir first
#define sec second
#define res resize
#define ins insert
#define era erase

/*cout<<fixed<<setprecision(20);cin.tie(0);ios::sync_with_stdio(false);*/
const llint mod=1000000007;
const llint inf=2.19e15+1;
const long double pai=3.141592653589793238462643383279502884197;
const long double eps=1e-10;
template <class T,class U>bool chmin(T& a,U b){if(a>b){a=b;return true;}return false;}
template <class T,class U>bool chmax(T& a,U b){if(a<b){a=b;return true;}return false;}
llint gcd(llint a,llint b){if(a%b==0){return b;}else return gcd(b,a%b);}
llint lcm(llint a,llint b){if(a==0){return b;}return a/gcd(a,b)*b;}
template<class T> void SO(T& ve){sort(ve.begin(),ve.end());}
template<class T> void REV(T& ve){reverse(ve.begin(),ve.end());}
template<class T>llint LBI(const vector<T>&ar,T in){return lower_bound(ar.begin(),ar.end(),in)-ar.begin();}
template<class T>llint UBI(const vector<T>&ar,T in){return upper_bound(ar.begin(),ar.end(),in)-ar.begin();}


int main(void){
	int x,y,z,n;cin>>n;
	static int cube[100][100][100];
	vector<string> yz(n),zx(n),xy(n);
	for(x=0;x<n;x++){
		for(y=0;y<n;y++){
			for(z=0;z<n;z++){
				cube[x][y][z]=1;
			}
		}
	}
	for(z=n-1;z>=0;z--){
		cin>>yz[z];
		for(y=0;y<n;y++){
			if(yz[z][y]=='1'){continue;}
			for(x=0;x<n;x++){
				cube[x][y][z]=0;
			}
		}
	}
	for(x=n-1;x>=0;x--){
		cin>>zx[x];
		for(z=0;z<n;z++){
			if(zx[x][z]=='1'){continue;}
			for(y=0;y<n;y++){
				cube[x][y][z]=0;
			}
		}
	}
	for(y=n-1;y>=0;y--){
		cin>>xy[y];
		for(x=0;x<n;x++){
			if(xy[y][x]=='1'){continue;}
			for(z=0;z<n;z++){
				cube[x][y][z]=0;
			}
		}
	}
	
	for(z=0;z<n;z++){
		for(y=0;y<n;y++){
			if(yz[z][y]=='0'){continue;}
			bool dame=true;
			for(x=0;x<n;x++){
				if(cube[x][y][z]){dame=false;break;}
			}
			if(dame){cout<<"No"<<endl;return 0;}
		}
	}
	for(x=0;x<n;x++){
		for(z=0;z<n;z++){
			if(zx[x][z]=='0'){continue;}
			bool dame=true;
			for(y=0;y<n;y++){
				if(cube[x][y][z]){dame=false;break;}
			}
			if(dame){cout<<"No"<<endl;return 0;}
		}
	}
	for(y=0;y<n;y++){
		for(x=0;x<n;x++){
			if(xy[y][x]=='0'){continue;}
			bool dame=true;
			for(z=0;z<n;z++){
				if(cube[x][y][z]){dame=false;break;}
			}
			if(dame){cout<<"No"<<endl;return 0;}
		}
	}
	cout<<"Yes"<<endl;
	return 0;
}
