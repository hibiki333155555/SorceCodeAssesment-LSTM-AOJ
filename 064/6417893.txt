#define rep(i,n) for(int i=0;i<(int)(n);i++)
#define ALL(v) v.begin(),v.end()
typedef long long ll;
 
#include<bits/stdc++.h>
using namespace std;

int h,w,n;
int dh[4]={1,0,-1,0};
int dw[4]={0,1,0,-1};
void dfs(int x,int y,vector<vector<int>>&G){
  G[x][y]=1;
  rep(i,4){
    int nx=x+dh[i],ny=y+dw[i];
    if(nx+ny<w || nx+ny>2*h+w || nx-ny<-w || nx-ny>w-2) continue;
    if(G[nx][ny]) continue;
    dfs(nx,ny,G);
  }
}
 
int main(){
  ios::sync_with_stdio(false);
  std::cin.tie(nullptr);
  
  cin>>h>>w>>n;
  int sx,sy,gx,gy;
  cin>>sx>>sy>>gx>>gy;
  sx--,sy--,gx--,gy--;
  vector<int> X(n),Y(n),K(n);
  rep(i,n){
    cin>>X[i]>>Y[i]>>K[i];
    X[i]--,Y[i]--;
  }
  
  int ssx=sx+sy,ssy=sx-sy+w,ggx=gx+gy,ggy=gx-gy+w;
  vector<int> XX(n),YY(n);
  rep(i,n) XX[i]=X[i]+Y[i],YY[i]=X[i]-Y[i]+w;
  vector<vector<int>> G(h+w+2,vector<int> (h+w+2));
  rep(i,n){
    G[XX[i]-K[i]][YY[i]-K[i]]+=1,G[XX[i]+K[i]+1][YY[i]+K[i]+1]+=1;
    G[XX[i]+K[i]+1][YY[i]-K[i]]+=-1,G[XX[i]-K[i]][YY[i]+K[i]+1]+=-1;
  }
  rep(i,h+w+1){
    for(int j=1;j<h+w+1;j++) G[i][j]+=G[i][j-1];
  }
  rep(j,h+w+1){
    for(int i=1;i<h+w+1;i++) G[i][j]+=G[i-1][j];
  }
  dfs(ssx,ssy,G);
  if(G[ggx][ggy]) cout<<"Yes"<<endl;
  else cout<<"No"<<endl;
  
  return 0;
}

