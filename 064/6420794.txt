#include <bits/stdc++.h>
using namespace std;
vector<int> dx = {1, 0, -1, 0};
vector<int> dy = {0, 1, 0, -1};
int main(){
  int H, W;
  cin >> H >> W;
  vector<vector<char>> c(H, vector<char>(W));
  for (int i = 0; i < H; i++){
    for (int j = 0; j < W; j++){
      cin >> c[i][j];
    }
  }
  int sx, sy, gx, gy;
  for (int i = 0; i < H; i++){
    for (int j = 0; j < W; j++){
      if (c[i][j] == 'S'){
        sx = i;
        sy = j;
        c[i][j] = '.';
      }
      if (c[i][j] == 'G'){
        gx = i;
        gy = j;
        c[i][j] = '.';
      }
    }
  }
  vector<vector<int>> d(H, vector<int>(W, -1));
  deque<tuple<int, int, int>> dq;
  dq.push_back(make_tuple(0, sx, sy));
  while (!dq.empty()){
    int p = get<0>(dq.front());
    int x = get<1>(dq.front());
    int y = get<2>(dq.front());
    dq.pop_front();
    if (d[x][y] == -1 && c[x][y] != '#'){
      d[x][y] = p;
      if (c[x][y] == '.'){
        for (int i = 0; i < 4; i++){
          int x2 = x + dx[i];
          int y2 = y + dy[i];
          if (0 <= x2 && x2 < H && 0 <= y2 && y2 < W){
            if (c[x2][y2] != '#'){
              dq.push_back(make_tuple(p + 1, x2, y2));
            }
          }
        }
      }
      if (c[x][y] == 'U' && x > 0){
        dq.push_front(make_tuple(p, x - 1, y));
      }
      if (c[x][y] == 'D' && x < H - 1){
        dq.push_front(make_tuple(p, x + 1, y));
      }
      if (c[x][y] == 'L' && y > 0){
        dq.push_front(make_tuple(p, x, y - 1));
      }
      if (c[x][y] == 'R' && x > 0){
        dq.push_front(make_tuple(p, x, y + 1));
      }
    }
  }
  cout << d[gx][gy] << endl;
}
