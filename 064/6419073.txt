#include <bits/stdc++.h>

using namespace std;
using ll = long long;

int t;
map<int, int> d, f;
map<int, vector<int>> adj_list;
set<int> visited;

void dfs(int node) {
   if (visited.count(node)) {
      return;
   }

   visited.insert(node);

   d[node] = t;

   for (auto v : adj_list[node]) {
      if (visited.count(v)) {
         continue;
      }

      t++;
      dfs(v);
   }

   t++;

   f[node] = t;
}

int main() {
   cout << fixed << setprecision(15);

   int n;
   cin >> n;

   for (size_t i = 0; i < n; i++) {
      int v, k;
      cin >> v >> k;

      for (size_t j = 0; j < k; j++) {
         int x;
         cin >> x;

         adj_list[v].emplace_back(x);
      }
   }

   t = 0;

   for (int i = 1; i <= n; i++) {
      if (visited.count(i)) {
         continue;
      }

      t++;
      dfs(i);
   }

   for (size_t i = 1; i <= n; i++) {
      cout << i << " " << d[i] << " " << f[i] << endl;
   }

   return 0;
}

