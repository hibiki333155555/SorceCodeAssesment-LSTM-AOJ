import sys

# sys.setrecursionlimit(200005)
int1 = lambda x: int(x)-1
pDB = lambda *x: print(*x, end="\n", file=sys.stderr)
p2D = lambda x: print(*x, sep="\n", end="\n\n", file=sys.stderr)
def II(): return int(sys.stdin.readline())
def LI(): return list(map(int, sys.stdin.readline().split()))
def LLI(rows_number): return [LI() for _ in range(rows_number)]
def LI1(): return list(map(int1, sys.stdin.readline().split()))
def LLI1(rows_number): return [LI1() for _ in range(rows_number)]
def SI(): return sys.stdin.readline().rstrip()
dij = [(0, 1), (-1, 0), (0, -1), (1, 0)]
# dij = [(0, 1), (-1, 0), (0, -1), (1, 0), (1, 1), (1, -1), (-1, 1), (-1, -1)]
inf = (1 << 63)-1
# inf = (1 << 31)-1
# md = 10**9+7
md = 998244353

from collections import deque

n, m = LI()

man = [0]*(m+1)
mon = [0]*(m+1)
mxr = [-1]*(m+1)
abc = []
for _ in range(n):
    a, b, c = LI()
    b -= 1
    abc.append((a, b, c))
    man[b] += a
    man[c] -= a
    mxr[b] = max(mxr[b], c)
q = II()
for _ in range(q):
    d, e = LI()
    e -= 1
    mon[e] += d

pot = [0]*(m+1)
ans = 0
for i in range(m):
    man[i+1] += man[i]
    mxr[i+1] = max(mxr[i+1], mxr[i])
    if mon[i] and man[i] == 0:
        print(-1)
        exit()
    if mon[i] > man[i]+pot[i]:
        d = mon[i]-(man[i]+pot[i])
        ans += d
        pot[i] += d
        r = mxr[i]
        pot[r] -= d
    pot[i+1] += pot[i]

print(ans)

