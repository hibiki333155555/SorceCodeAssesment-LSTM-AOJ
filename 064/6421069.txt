#include "bits/stdc++.h"
using namespace std;

typedef string::const_iterator State;
#define eps 1e-8L
#define MAX_MOD 1000000007LL
#define GYAKU 500000004LL
#define MOD 998244353LL
#define pb push_back
#define mp make_pair
typedef long long ll;
typedef long double ld;
#define REP(a, b) for (long long(a) = 0; (a) < (b); ++(a))
#define ALL(x) (x).begin(), (x).end()

#define int long long
vector<string> inputs;
pair<int, int> moves[2000][2000];
int dp[2000][2000];
int h, w;
pair<int, int> reach(pair<int, int> now)
{
  if (now.first < 0 or now.first > h or now.second < 0 or now.second > w)
    return {-1, -1};
  if (moves[now.first][now.second] == now)
    return now;
  pair<int, int> x = moves[now.first][now.second];
  moves[now.first][now.second] = {-1, -1};
  return moves[now.first][now.second] = reach(x);
}
void solve()
{
  cin >> h >> w;
  queue<pair<int, int>> nexts;
  pair<int, int> finals;
  REP(i, h)
  {
    string s;
    cin >> s;
    REP(q, w)
    {
      dp[i][q] = 1e9;
      moves[i][q] = {i, q};
      if (s[q] == 'U')
      {
        moves[i][q] = {i - 1, q};
      }
      else if (s[q] == 'D')
      {
        moves[i][q] = {i + 1, q};
      }
      else if (s[q] == 'R')
      {
        moves[i][q] = {i, q + 1};
      }
      else if (s[q] == 'L')
      {
        moves[i][q] = {i, q - 1};
      }
      else if (s[q] == 'S')
      {
        nexts.push({i, q});
        dp[i][q] = 0;
      }
      else if (s[q] == 'G')
      {
        finals = {i, q};
      }
      else if (s[q] == '#')
      {
        moves[i][q] = {-1, -1};
      }
    }
  }
  while (!nexts.empty())
  {
    pair<int, int> now = nexts.front();
    nexts.pop();
    const int dx[4] = {1, -1, 0, 0};
    REP(t, 4)
    {
      pair<int, int> A = now;
      A.first += dx[t];
      A.second += dx[3 - t];
      A = reach(A);
      if (A != pair<int, int>{-1, -1})
      {
        if (dp[A.first][A.second] == 1e9)
        {
          dp[A.first][A.second] = dp[now.first][now.second] + 1;
          nexts.push(A);
        }
      }
    }
  }
  if (dp[finals.first][finals.second] == 1e9)
  {
    dp[finals.first][finals.second] = -1;
  }
  cout << dp[finals.first][finals.second] << endl;
}
#undef int

// generated by oj-template v4.7.2
// (https://github.com/online-judge-tools/template-generator)
int main()
{
  // Fasterize input/output script
  ios::sync_with_stdio(false);
  cin.tie(nullptr);
  cout << fixed << setprecision(100);
  // scanf/printf user should delete this fasterize input/output script

  int t = 1;
  // cin >> t; // comment out if solving multi testcase
  for (int testCase = 1; testCase <= t; ++testCase)
  {
    solve();
  }
  return 0;
}

