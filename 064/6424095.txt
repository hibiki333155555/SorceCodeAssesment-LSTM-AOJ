N, M = map(int, input().split())
g = [[] for _ in range(N)]
gr = [[] for _ in range(N)]
for _ in range(M):
    s, t, d = map(int, input().split())
    g[s].append((t, d))
    gr[t].append((s, d))

def tsp(f):
    dp = [[float('inf')]*N for _ in range(1<<N)]
    dp[1<<f][0] = 0

    for s in range(1<<N):
        for u in range(N):
            if s & (1<<u):
                for v, d in g[u]:
                    if not (s & (1<<v)):
                        dp[s|(1<<v)][v] = min(dp[s|(1<<v)][v], dp[s][u]+d)

    ret = float('inf')
    for v, d in gr[f]:
        ret = min(ret, dp[(1<<N)-1][v]+d)
    return ret

ans = float('inf')
for s in range(N):
    ans = min(ans, tsp(s))
if ans == float('inf'):
    print(-1)
else:
    print(ans)

