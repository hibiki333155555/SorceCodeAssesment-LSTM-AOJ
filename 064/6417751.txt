#!usr/bin/env python3
from collections import defaultdict, deque
from heapq import heappush, heappop
from itertools import permutations, accumulate
import sys
import math
import bisect
def LI(): return [int(x) for x in sys.stdin.readline().split()]
def I(): return int(sys.stdin.readline())
def IR(n):
    return [I() for _ in range(n)]
def LIR(n):
    return [LI() for _ in range(n)]

sys.setrecursionlimit(1000000)
mod = 1000000007

def main():
    x,y,z = LI()
    a,b,c = LI()
    d = [a-x,b-y,c-z]
    s = sum(d)
    p = s-d[2]
    q = s-d[0]
    r = s-d[1]
    if p&1 or q&1 or r&1:
        print("No")
        return
    p >>= 1
    q >>= 1
    r >>= 1
    a_,b_,c_ = x+p-q+r,y+p+q-r,z-p+q+r
    if (a,b,c) == (a_,b_,c_):
        print("Yes")
    else:
        print("No")
    return


if __name__ == "__main__":
    main()

