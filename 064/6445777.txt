/**
 *  author: hanyu
**/
#include <bits/stdc++.h>
using namespace std;

vector<string> get(string &s) {
  bool under = false;
  for (int i = 0; i < s.size(); i++) {
    if (s[i] == '_') under = true;
  }
  vector<string> x;
  if (under) {
    string tmp = "";
    s += '_';
    for (int i = 0; i < s.size(); i++) {
      if (s[i] == '_') {
        x.emplace_back(tmp);
        tmp = "";
      }
      else {
        tmp += s[i];
      }
    }
  }
  else {
    string tmp = "";
    tmp += s[0];
    if (isupper(s[0])) tmp = s[0] - ('A' - 'a');
    for (int i = 1; i < (int) s.size(); i++) {
      if (isupper(s[i])) {
        x.emplace_back(tmp);
        tmp = s[i] - ('A' - 'a');
      }
      else {
        tmp += s[i];
      }
    }
    x.emplace_back(tmp);
  }
  return x;
}

void print_U(vector<string> &x) {
  for (int i = 0; i < x.size(); i++) {
    x[i][0] += 'A' - 'a';
    cout << x[i];
  }
  cout << '\n';
}

void print_L(vector<string> &x) {
  for (int i = 0; i < x.size(); i++) {
    if (i != 0) x[i][0] += 'A' - 'a';
    cout << x[i];
  }
  cout << '\n';
}

void print_D(vector<string> &x) {
  for (int i = 0; i < x.size(); i++) {
    if (i) cout << '_';
    cout << x[i];
  }
  cout << '\n';
}

int main() {
  cin.tie(0);
  ios::sync_with_stdio(false);

  while (true) {
    string s;
    char t;
    cin >> s >> t;
    if (t == 'X') break;

    vector<string> x = get(s);

    if (t == 'U') print_U(x);
    if (t == 'L') print_L(x);
    if (t == 'D') print_D(x);
  }
}
