
import java.util.*;
public class Main {

	static int N;
	static int arr[];
	static int comparisions = 0;
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		N = sc.nextInt();
		arr = new int[N];
		for(int i=0;i<N;i++) {
			arr[i] = sc.nextInt();
		}
		MergeSorting(arr, 0, N-1);
		for(int num:arr) {
			System.out.print(num+" ");
		}
		System.out.println();
		System.out.println(comparisions);
	}
	public static void Merge(int[] arr, int left, int mid, int right) {
		int[] temp = new int[right-left+1];
		int k=0, lin=left, rin=mid+1;
		while( lin<=mid && rin<=right  ) {
			comparisions++;
			if( arr[lin] <= arr[rin]) { temp[k]=arr[lin]; lin++; k++;}
			else { temp[k]=arr[rin]; rin++; k++;} 
		}
		while(lin<=mid){ temp[k]=arr[lin]; lin++; k++;}
		while(rin<=right){ temp[k]=arr[rin]; rin++; k++;} 
		int d=left;
		for(int va : temp) { arr[d] = va; d++;}
	
	}
	
	
	/*	int n1 = mid-left;
		int n2 = right-mid;

		int[] L = new int[n1];
		int[] R = new int[n2];
		
		for(int i=0;i<n1;i++) {
			L[i] = arr[left+i];
		}
		for(int i=0;i<n2;i++) {
			R[i] = arr[mid+i];
		}
		L[n1] = 1000000001;
		R[n2] = 1000000001;
		
		int i = 0;
		int j = 0;
		
		for(int k=left;k<right;i++) {
			comparisions++;
			if(L[i]<=R[j]) {
				arr[k] = L[i];
				i++;
			}
			else {
				arr[k] = R[j];
				j++;
			}
		}
	}*/
	
	public static void MergeSorting(int[] arr, int left, int right) {
			if(left>=right) return;
			int mid = (left+right)/2;
			MergeSorting(arr, left, mid);	//left side
			MergeSorting(arr, mid+1, right);	//right side
			Merge(arr, left, mid, right);	//together
		
	}

}

