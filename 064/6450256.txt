#include<bits/stdc++.h>
namespace {
using namespace std;
#define rep(i,n) for(int i = 0; i < (int)(n); i++)
#define rrep(i,n) for(int i = (int)(n) - 1; i >= 0; i--)
#define all(x) begin(x), end(x)
#define rall(x) rbegin(x), rend(x)
template<class T> bool chmax(T& a, const T& b) { if (a < b) { a = b; return true; } else return false; }
template<class T> bool chmin(T& a, const T& b) { if (b < a) { a = b; return true; } else return false; }
using ll = long long;
using P = pair<int,int>;
using VI = vector<int>;
using VVI = vector<VI>;
using VL = vector<ll>;
using VVL = vector<VL>;

} int main() {
  ios::sync_with_stdio(false);
  cin.tie(0);
  int n, m;
  cin >> n >> m;
  vector<vector<P>> to(n);
  rep(_, m) {
    int a, b, c;
    cin >> a >> b >> c;
    to[a - 1].emplace_back(b - 1, c);
  }
  vector<unordered_set<int>> added(n);
  queue<P> q;
  auto push = [&](int v, int l) {
    if (added[v].count(l)) return;
    q.emplace(v, l);
    added[v].insert(l);
  };
  push(0, 1);
  while(q.size()) {
    auto [u, l] = q.front(); q.pop();
    for(auto [v, c]: to[u]) push(v, lcm(l, c));
  }
  if (added[n - 1].empty()) {
    cout << "IMPOSSIBLE\n";
  } else {
    int mn = 1001001001, mx = 0;
    for(int x: added[n - 1]) chmin(mn, x), chmax(mx, x);
    cout << mn << ' ' << mx << '\n';
  }
}
