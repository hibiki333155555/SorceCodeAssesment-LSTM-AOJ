#include <iostream>
#include <list>

using namespace std;

bool canLoad(list<int> weights, int weights_size, int trucks_size, int P)
{
  int trucks_i = 0;
  int trucks_sum = 0;
  for (int i = 0; i < weights_size; i++)
  {
    if (trucks_sum + weights.front() > P)
    {
      trucks_i++;
      trucks_sum = weights.front();
      weights.pop_front();
    }
    else if (trucks_sum + weights.front() == P)
    {
      trucks_i++;
      trucks_sum = 0;
      weights.pop_front();
    }
    else
    {
      trucks_sum += weights.front();
      weights.pop_front();
    }
  }
  
  return (trucks_i == trucks_size - 1 && weights.size() == 0) ? true : false;
}

int main(int argc, char const *argv[])
{
  int n, k;
  cin >> n >> k;

  list<int> weights;
  int sum = 0;;

  for (int i = 0; i < n; i++)
  {
    int w;
    cin >> w;
    weights.push_back(w);
    sum += w;
  }
  
  int P = 0;

  int left = 0;
  int right = sum;

  while (left < right)
  {
    int mid = (left + right) / 2;
    if (canLoad(weights, n, k, mid))
    {
      P = mid;
      right = mid;
    }
    else left = mid + 1;
  }
  
  cout << P << endl;

  return 0;
}

