#include <iostream>
#include <algorithm>
#include <vector>
#include <set>
#define int long long
#define rep(i, n) for(i = 0; i < n; i++)
using namespace std;
typedef pair<int, int> P;

int n, m;
vector<P> rval[100000];
int q, oni[100000];

signed main() {
	int i, j;
	
	cin >> n >> m;
	rep(i, n) {
		int a, b, c;
		cin >> a >> b >> c; b--; c--;
		rval[b].push_back(P(c, a));
	}
	
	cin >> q;
	rep(i, q) {
		int d, e;
		cin >> d >> e; e--;
		oni[e] += d;
	}
	
	multiset<P> dict;
	int dsum = 0;
	int ans = 0;
	rep(i, m) {
		rep(j, rval[i].size()) {
			P val = rval[i][j];
			dict.insert(val);
			dsum += val.second;
		}
		if (dsum < oni[i]) {
			if (dict.size() == 0) { cout << -1 << endl; return 0; }
			else {
				P res = *dict.rbegin();
				int diff = oni[i] - dsum;
				dict.erase(prev(dict.end()));
				ans += diff;
				dsum = oni[i];
				dict.insert(P(res.first, res.second + diff));
			}
		}
		
		set<P>::iterator it = dict.begin();
		while (it != dict.end()) {
			if (it->first == i) {
				dsum -= it->second;
				it = dict.erase(it);
			}
			else {
				break;
			}
		}
	}
	
	cout << ans << endl;
	return 0;
}
