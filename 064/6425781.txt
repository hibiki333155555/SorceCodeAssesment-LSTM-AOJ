#include <iostream>
using namespace std;
#include <cstdio>
#include <cstdlib>
#include <cstring>

struct Node {
    int key;
    Node *next,*prev;
};

Node *nil;
void init(){
    nil=(Node*)malloc(sizeof(Node));
    nil->next=nil;
    nil->prev=nil;
};
Node* listSearch(int key){
    Node *cur=nil->next;
    while (cur->key!=key && cur!=nil){
        cur=cur->next;
    }
    return cur;
};

void printList(){
    Node *cur=nil->next;
    int isf=0;
    while(1){
        if (cur==nil) break;
        if (isf++)printf(" ");
        printf("%d",cur->key);
        cur=cur->next;
    }
    printf("\n");
    
};


void insertNode(int key){
    Node *t=(Node*)malloc(sizeof(Node));
    t->key=key;
    t->next=nil->next;
    nil->next->prev=t;
    t->prev=nil;
    nil->next=t;
};

void deleteNode(Node *t){
    t->next->prev=t->prev;
    t->prev->next=t->next;
    free(t);
};
void deleteFirst(){
    deleteNode(nil->next);
};
void deleteLast(){
    deleteNode(nil->prev);
};
void deleteKey(int key){
    deleteNode(listSearch(key));
};


int main(void){
    // Your code here!
    int n;
    cin>>n;
    char command[20];
    int key;
    
    init();
    for(int i=0;i<n;i++){
        cin>>command>>key;
        if (!strcmp(command,"insert")){
            insertNode(key);
        }else if (!strcmp(command,"delete")){
            deleteKey(key);
        }else if (!strcmp(command,"deleteFirst")){
           deleteFirst();
        }else if (!strcmp(command,"deleteLast")){
           deleteLast();
        }
    }
    printList();
    
    return 0;
}

