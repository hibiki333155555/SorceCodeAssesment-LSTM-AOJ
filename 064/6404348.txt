#include <bits/stdc++.h>
#pragma GCC optimize("Ofast")
#define _GLIBCXX_DEBUG
using namespace std;
using std::cout;
using std::cin;
using std::endl;
using ll=long long;
using ld=long double;
ll ILL=1167167167167167167;
const int INF=2100000000;
const ll mod=1e9+7;
#define rep(i,a) for (ll i=0;i<a;i++)
#define all(p) p.begin(),p.end()
template<class T> using _pq = priority_queue<T, vector<T>, greater<T>>;
template<class T> ll LB(vector<T> &v,T a){return lower_bound(v.begin(),v.end(),a)-v.begin();}
template<class T> ll UB(vector<T> &v,T a){return upper_bound(v.begin(),v.end(),a)-v.begin();}
template<class T> bool chmin(T &a,const T &b){if(a>b){a=b;return 1;}else return 0;}
template<class T> bool chmax(T &a,const T &b){if(a<b){a=b;return 1;}else return 0;}
template<class T> void So(vector<T> &v) {sort(v.begin(),v.end());}
template<class T> void Sore(vector<T> &v) {sort(v.begin(),v.end(),[](T x,T y){return x>y;});}
void yneos(bool a){if(a) cout<<"Yes\n"; else cout<<"No\n";}
template<class T> void vec_out(vector<T> &p){for(int i=0;i<(int)(p.size());i++){if(i) cout<<" ";cout<<p[i];}cout<<"\n";}

bool _2d_comp(pair<ll,ll> &l,pair<ll,ll> &r){
	if(l.first==0&&r.first==0) return l.second>r.second;
	if(l.first==0){
		return l.second>0||r.first<0;
	}
	if(r.first==0){
		return !(r.second>0||l.first<0);
	}
	if((l.first<0)^(r.first<0)) return l.first>0;
	return l.first*r.second<l.second*r.first;
}

ll score(pair<ll,ll> a,pair<ll,ll> b){
	return abs(a.first*b.second-a.second*b.first);
}
void solve();
// oddloop
int main() {
	ios::sync_with_stdio(false);
	cin.tie(nullptr);
	
	int t=1;
	//cin>>t;
	rep(i,t) solve();
}
bool det(pair<ll,ll> a,pair<ll,ll> b,pair<ll,ll> c);
ll f(int N,vector<pair<ll,ll>> &p);
void solve(){
	int N;
	cin>>N;
	vector<ll> A(N);
	vector<ll> X(N),Y(N);
	rep(i,N) cin>>A[i];
	rep(i,N) cin>>X[i]>>Y[i];
	if(N==3){
		rep(j,2) X[j]-=X[2],Y[j]-=Y[2];
		rep(j,3){
			cout<<A[0]*A[1]*A[2]*score({X[0],Y[0]},{X[1],Y[1]})<<endl;
		}
		return ;
	}
	rep(i,N){
		vector<pair<ll,ll>> n_X;
		rep(j,N){
			if(i==j) continue;
			n_X.push_back({A[j]*(X[j]-X[i]),A[j]*(Y[j]-Y[i])});
		}
		cout<<A[i]*f(N-1,n_X)<<"\n";
	}
}

bool det(pair<ll,ll> a,pair<ll,ll> b,pair<ll,ll> c){
	a.first-=b.first;
	a.second-=b.second;
	b.first-=c.first;
	b.second-=c.second;
	return (0<=a.first*b.second-a.second*b.first);
}

ll f(int N,vector<pair<ll,ll>> &p){
	So(p);
	int k=0;
	vector<pair<ll,ll>> q(N*2);
	rep(i,N){
		while(k>1&&det(q[k-2],q[k-1],p[i])) k--;
		q[k]=p[i];
		k++;
	}
	int t=k;
	rep(j,N-1){
		int i=N-2-j;
		while(k>t&&det(q[k-2],q[k-1],p[i])) k--;
		q[k]=p[i];
		k++;
	}
	k--;
	q.resize(k);
	//for(auto x:q) cout<<x.first<<" "<<x.second<<endl;
	rep(i,k*6) q.push_back(q[i]);
	int left=0;
	int right=0;
	while(q[right].first<=q[right+1].first&&right<3*k) right++;
	vector<int> order(N+2*k);
	rep(i,N+2*k) order[i]=i;
	rep(i,k) p.push_back({q[i+1].first-q[i].first,q[i+1].second-q[i].second});
	rep(i,k) p.push_back({q[i].first-q[i+1].first,q[i].second-q[i+1].second});
	sort(all(order),[&](int L,int R){
		pair<ll,ll> l=p[L],r=p[R];
		return _2d_comp(l,r);
	});
	ll ans=0;
	for(auto a:order){
		if(a>=N+k) right=a-N+1-k;
		else if(a>=N) left=a-N+1;
		if(a>=N) continue;
		//chmax(ans,max(score(p[a],q[left-1]),score(p[a],q[right+1])));
		chmax(ans,max(score(p[a],q[left]),score(p[a],q[right])));
		//chmax(ans,max(score(p[a],q[left+1]),score(p[a],q[right-1])));
		//for(auto x:q) chmax(ans,score(p[i],x));
	}
	return ans;
}


