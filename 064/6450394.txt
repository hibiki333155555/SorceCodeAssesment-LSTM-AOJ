#include <bits/stdc++.h>
#define rep(i,n) for(int i = 0; i < (int)(n); i++)

using namespace std;
using LL = long long;
using P = pair<int,int>;
using vv = vector<vector<int>>;
const int INF = (int)1e9;
const LL LINF = (LL)1e18;

int main(){
	int N, M;
	cin >> N >> M;
	vector<LL> a(N);
	vector<int> b(N), c(N);
	rep(i,N) cin >> a[i] >> b[i] >> c[i];
	rep(i,N) b[i]--;
	int Q;
	cin >> Q;
	vector<LL> d(Q);
	vector<int> e(Q);
	rep(i,Q) cin >> d[i] >> e[i];
	rep(i,Q) e[i]--;

	vector<LL> train(M);
	rep(i,Q) train[e[i]] += d[i];
	vector<LL> sum(M+1);
	rep(i,N) sum[b[i]] += a[i], sum[c[i]] -= a[i];
	rep(i,M) sum[i+1] += sum[i];
	rep(i,M) train[i] -= sum[i];

	vector<int> r(M+1, -1);
	rep(i,N) r[b[i]] = max(r[b[i]], c[i]);
	int now_r = -1;
	rep(i,M){
		if(r[i] <= now_r) r[i] = -1;
		else now_r = r[i];
	}

	LL ans = 0;
	vector<LL> p(M+1);
	int i = 0;
	while(i < M){
		if(r[i] == -1){
			cout << -1 << endl;
			return 0;
		}
		LL res = 0;
		int j = i + 1;
		while(j < r[i] and r[j] == -1) j++;
		for(int k = i; k < j; k++){
			if(k > 0) p[k] += p[k-1];
			train[k] -= p[k];
		}
		for(int k = i; k < j; k++){
			res = max(res, train[k]);
		}
		p[j] += res, p[r[i]] -= res;
		ans += res;
		i = j;
	}
	cout << ans << endl;

	return 0;
}

