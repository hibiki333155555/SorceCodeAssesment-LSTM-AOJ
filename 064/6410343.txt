// g++ -std=c++14 -DDEV=1 main.cpp
#include <stdio.h>
#include <cassert>
#include <iostream>
#include <fstream>
#include <vector>
#include <string>

using std::cin;
using std::cout;
using std::endl;
using std::terminate;
using std::vector;
using std::string;

#define rep(i, a, n) for (int i = (a); i < (n); ++i)
#define bit(n, k) ((n >> k) & 1)

// W:     E:     S:     N:
//   1->3   1->4   1->5   1->2
//  [2->2] [2->2]  2->1   2->6
//   3->6   3->1  [3->3] [3->3]
//   4->1   4->6  [4->4] [4->4]
//  [5->5] [5->5]  5->6   5->1
//   6->4   6->3   6->2   6->5

class Dice {
private:

    vector<int> v;

public:

    Dice() {
        v.resize(7);

        rep(i, 1, 7) {
            cin >> v[i];
        }
    }

    Dice(int v1, int v2, int v3, int v4, int v5, int v6) {
        v.resize(7);

        v[1] = v1;
        v[2] = v2;
        v[3] = v3;
        v[4] = v4;
        v[5] = v5;
        v[5] = v5;
        v[6] = v6;
    }

    int get() { return v[1]; }

    Dice rotate(char direction) {
        if (direction == 'W') {
            return Dice(v[3], v[2], v[6], v[1], v[5], v[4]);
        } else if (direction == 'E') {
            return Dice(v[4], v[2], v[1], v[6], v[5], v[3]);
        } else if (direction == 'S') {
            return Dice(v[5], v[1], v[3], v[4], v[6], v[2]);
        } else {
            return Dice(v[2], v[6], v[3], v[4], v[1], v[5]);
        }
    }

    void debug() {
        printf("%d,%d,%d,%d,%d,%d\n", v[1], v[2], v[3], v[4], v[5], v[6]);
    }
};

class Program {
private:

public:

    Program() {
    }

    void solve() {
        Dice d;

        string s;
        cin >> s;

        for (auto c : s) {
            // d.debug();
            d = d.rotate(c);
        }

        cout << d.get() << endl;
    }
};

int main() {

#ifdef DEV
    std::ifstream in("input");
    cin.rdbuf(in.rdbuf());

    int t; cin >> t;
    for (int x = 1; x <= t; ++x) {
        Program p;
        p.solve();
    }
#else
    Program p;
    p.solve();
#endif

    return 0;
}

