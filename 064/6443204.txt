use std::io::Read;

fn main() {
    let mut input = String::new();
    std::io::stdin().read_to_string(&mut input).unwrap();
    let mut stk = Vec::<i64>::new();

    input.trim().split(' ').for_each(|e| {
        match e {
            "+" => {
                let l = stk.len();
                if l >= 2 {
                    stk[l - 2] += stk.pop().unwrap();
                }
            }
            "-" => {
                let l = stk.len();
                if l >= 2 {
                    stk[l - 2] -= stk.pop().unwrap();
                }
            }
            "*" => {
                let l = stk.len();
                if l >= 2 {
                    stk[l - 2] *= stk.pop().unwrap();
                }
            }
            "/" => {
                let l = stk.len();
                if l >= 2 {
                    stk[l - 2] /= stk.pop().unwrap();
                }
            }
            _ => {
                if let Ok(n) = e.parse::<i64>() {
                    stk.push(n);
                } else {
                    println!("{}", e);
                    panic!("invalid number");
                }
            }
        }
    });
    if stk.len() == 1 {
        println!("{}", stk[stk.len() - 1]);
    } else {
        panic!("invalid expression");
    }
}

