import sys
#input = sys.stdin.readline
#input = sys.stdin.buffer.readline #文字列はダメ
sys.setrecursionlimit(1000000)
#import bisect
#import itertools
#import random
#from heapq import heapify, heappop, heappush
#from collections import defaultdict 
#from collections import deque
#import copy
#import math
from functools import lru_cache
#@lru_cache(maxsize=None)
#MOD = pow(10,9) + 7
#MOD = 998244353
#dx = [1,0,-1,0]
#dy = [0,1,0,-1]
#dx8 = [1,1,0,-1,-1,-1,0,1]
#dy8 = [0,1,1,1,0,-1,-1,-1]

#この盤面で自分が勝つならTrue、負けならFalse
@lru_cache(maxsize=None)
def solve(a,b,m): #2個の山がa,1個の山がb,今m回目(mod3)
    #print(a,b,m)
    if a == b == 0:
        return False
    nm = (m+1)%3
    ret = False
    if a >= 1:
        #追加無し
        if m != 0:
            ret |= not solve(a-1,b,nm) #2個取る
            ret |= not solve(a-1,b+1,nm) #1個取る
        #追加あり
        else:
            ret |= not solve(a-1+1,b,nm)
            ret |= not solve(a-1+1,b+1,nm)
    if b >= 1:
        if m != 0:
            ret |= not solve(a,b-1,nm)
        else:
            ret |= not solve(a+1,b-1,nm)
    return ret

def main():
    N = int(input())
    if N%3 == 2:
        print("Bob")
    else:
        print("Alice")
    exit()
    for i in range(1,20):
        ans = solve(i,0,1)
        print(i)
        if ans:
            print("Alice")
        else:
            print("Bob")


if __name__ == '__main__':
    main()
