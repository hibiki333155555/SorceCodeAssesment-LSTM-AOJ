#include<bits/stdc++.h>
using namespace std;

#define NIL -1

struct Node{
    int parent, left, right;
};

struct Node T[25];

void preorder(int root){
    cout << " " << root;
    if(T[root].left != NIL){
        preorder(T[root].left);
    }
    if(T[root].right != NIL){
        preorder(T[root].right);
    }
}

void inorder(int root){
    if(T[root].left != NIL){
        inorder(T[root].left);
    }

    cout << " " << root;

    if(T[root].right != NIL){
        inorder(T[root].right);
    }
}

void postorder(int root){
    if(T[root].left != NIL){
        postorder(T[root].left);
    }   
    if(T[root].right != NIL){
        postorder(T[root].right);
    }
    cout << " " << root;
}

int main(){
    int n, root = 0, id;
    cin >> n;
    for(int i = 0; i < n; i++){
        T[i].parent = NIL;
    }
    for(int i = 0; i < n; i++){
        cin >> id;
        cin >> T[id].left >> T[id].right;
        int left = T[id].left, right = T[id].right;
        //cout << left << " " << right << endl;
        if(left != NIL){
            T[left].parent = id;
        }
        if(right != NIL){
            T[right].parent = id;
        }
    }
    for(int i = 0; i < n; i++){
        if(T[i].parent == NIL){
            root = i;
            break;
        }
    }

    cout << "Preorder" << endl;
    preorder(root);
    cout << endl;

    cout << "Inorder" << endl;
    inorder(root);
    cout << endl;

    cout << "Postorder" << endl;
    postorder(root);
    cout << endl;
}
