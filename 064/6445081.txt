using System;
using System.Linq;

internal class Program
{
    public static void Main()
    {
        if (new System.Diagnostics.StackFrame(1).GetMethod() == null)
            Console.SetOut(new System.IO.StreamWriter(Console.OpenStandardOutput()) { AutoFlush = false });

        var n = Console.ReadLine().ParseInt();
        var A = Console.ReadLine().Split().Select(x => x.ParseInt()).Zip(Enumerable.Repeat(0, n), (a, z) => new int[] { z, a }).ToArray();
        Console.ReadLine();
        var m = Console.ReadLine().Split().Select(x => x.ParseInt());
        var pattern = Math.Pow(2, n);
        foreach (var q in m)
        {
            var flag = false;
            for (int i = 1; i < pattern; i++)
            {
                var sum = 0;
                var p = i;
                foreach (var Ai in A)
                {
                    var b = p & 1;
                    sum += Ai[b];
                    if (sum > q)
                        break;
                    p >>= 1;
                }
                if (sum == q)
                {
                    flag = true;
                    break;
                }
            }
            Console.WriteLine(flag ? "yes" : "no");
        }

        Console.Out.Flush();
    }
}

internal static class Extensions
{
    public static int ParseInt(this string s) => int.Parse(s);
}
