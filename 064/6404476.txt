#include <iostream>
#include <vector>
#include <cmath>
using namespace std;

struct Solver{
    vector<bool> isf;
    vector<vector<vector<int>>> dp;
    Solver(vector<int> &ls): isf(vector<bool>(13, false)),
    dp(vector<vector<vector<int>>>(2, vector<vector<int>>(14, vector<int>(14, -1)))){
        for(auto &it: ls) isf[it-1] = true;
    }

    int f(int turn, int s, int t){
        if(dp[turn][s][t] != -1) return dp[turn][s][t];
        int fcards = 0, scards = 0;
        for(int i = 0; i < s; i++){
            if(isf[i]) fcards++;
            else scards++;
        }
        for(int i = t; i < 13; i++){
            if(isf[i]) fcards++;
            else scards++;
        }

        if(fcards == 0 && scards > 0) dp[turn][s][t] = 0;
        else if(fcards > 0 && scards == 0) dp[turn][s][t] = 1;
        else if(0 == s && 13 == t){
            dp[turn][s][t] = (turn+1)%2;
        }else if(turn == 0){
            int zcnt = 0, ocnt = 0;
            if(s-1 >= 0 && isf[s-1]){
                if(f(1, s-1, t) == 0) zcnt++;
                else ocnt++;
            }
            if(t < 13 && isf[t]){
                if(f(1, s, t+1) == 0) zcnt++;
                else ocnt++;
            }
            if(zcnt == 0 && ocnt == 0){
                if(f(1, s, t) == 0) zcnt++;
                else ocnt++;
            }
            dp[turn][s][t] = (zcnt > 0) ? 0 : 1;
        }else{
            int zcnt = 0, ocnt = 0;
            if(s-1 >= 0 && !isf[s-1]){
                if(f(0, s-1, t) == 0) zcnt++;
                else ocnt++;
            }
            if(t < 13 && !isf[t]){
                if(f(0, s, t+1) == 0) zcnt++;
                else ocnt++;
            }
            if(zcnt == 0 && ocnt == 0){
                if(f(0, s, t) == 0) zcnt++;
                else ocnt++;
            }
            dp[turn][s][t] = (ocnt > 0) ? 1 : 0;
        }
        // cerr << turn << " " << s << " " << t << " : " << dp[turn][s][t] << endl;
        return dp[turn][s][t];
    }

    void solve(){
        if(f(0, 6, 7) == 0) cout << "yes" << '\n';
        else cout << "no" << '\n';
    }
};

int main(){
    int n; cin >> n;
    while(n--){
        vector<int> ls(6);
        for(auto &it: ls) cin >> it;
        Solver sol(ls);
        sol.solve();
    }
    return 0;
}
