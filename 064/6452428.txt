import copy

N = int(input())
vs_origin = input().split()
vs = copy.deepcopy(vs_origin)

def is_stable(vs, vs_origin):
    state = True
    for i in range(1, 10):
        chars1 = []
        for v in vs:
            if int(v[1]) == i:
                chars1.append(v[0])
        chars2 = []
        for v in vs_origin:
            if int(v[1]) == i:
                chars2.append(v[0])
        if chars1 != chars2:
            state = False
            break
    return state

for i in range(0, N):
    for j in range(N-1, i, -1):
        if vs[j][1] < vs[j-1][1]:
            vs[j-1], vs[j] = vs[j], vs[j-1]
print(' '.join(vs))
print('Stable' if is_stable(vs, vs_origin) else 'Not stable')

vs = copy.deepcopy(vs_origin)
for i in range(0, N):
    min_idx = i
    for j in range(i+1, N):
        if vs[j][1] < vs[min_idx][1]:
            min_idx = j
    if vs[min_idx][1] != vs[i][1]:
        vs[min_idx], vs[i] = vs[i], vs[min_idx]

print(' '.join(vs))
print('Stable' if is_stable(vs, vs_origin) else 'Not stable')
