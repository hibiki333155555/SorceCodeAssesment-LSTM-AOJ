#include <bits/stdc++.h>
using namespace std;

int solve(vector<vector<int>> &dp, vector<vector<int>> &dist, int bit, int v, int N){
  if (dp.at(bit).at(v) != -1) return dp.at(bit).at(v);
  
  if (bit == (1<<v) ){
    dp.at(bit).at(v) = 0;
    return 0;
  }
  
  int prev_bit = bit & ~(1<<v);
  
  int res = -1;
  for(int i=0; i<N; i++){
    if( (prev_bit & (1<<i)) && (dist.at(i).at(v) != -1)){
      int d = solve(dp,dist,prev_bit,i,N);
      if (d == -1) continue;
      if (res == -1) res = d + dist.at(i).at(v);
      else res = min(res, d + dist.at(i).at(v));
    }
  }
  if (res == -1) return -1;
    
  dp.at(bit).at(v) = res;
  return res;
}
    

int main(){
  int V,E;
  cin >> V >> E;
  vector<vector<int>> dist(V,vector<int>(V,-1));
  
  for(int i=0; i<E; i++){
    int s,t,d;
    cin >> s >> t >> d;
    dist.at(s).at(t) = d;
  }
  
  vector<vector<int>> dp((1<<V),vector<int>(V,-1));
  
  int ans, md=-1;
  ans = solve(dp,dist,(1<<V)-1,0,V);
  for(int i=1; i<V; i++){
    if(dist.at(0).at(i) != -1){
      if(md == -1) md = dist.at(0).at(i);
      else md = min(md, dist.at(0).at(i));
    }
  }
  if (md == -1 || ans == -1) cout << -1 << endl;
  else cout << ans+md << endl;
  return 0;  
}
