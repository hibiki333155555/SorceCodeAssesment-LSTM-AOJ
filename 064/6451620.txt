//lcmの種類数は960しかない
#include <iostream>
#include <queue>
#include <set>
#define rep(i, n) for(i = 0; i < n; i++)
using namespace std;

int gcd(int a, int b) {
	if (b == 0) return a;
	return gcd(b, a % b);
}

int lcm(int a, int b) {
	return a / gcd(a, b) * b;
}

int n, m;
vector<int> et[1000];
vector<int> ec[1000];
set<int> dp[1000];

int main() {
	int i;
	
	cin >> n >> m;
	rep(i, m) {
		int a, b, c;
		cin >> a >> b >> c;
		a--; b--;
		et[a].push_back(b);
		ec[a].push_back(c);
	}
	
	typedef pair<int, int> P;
	queue<P> que;
	que.push(P(0, 1));
	dp[0].insert(1);
	
	while (!que.empty()) {
		P now = que.front();
		que.pop();
		int pos = now.first;
		int val = now.second;
		rep(i, et[pos].size()) {
			int nv = et[pos][i];
			int nc = lcm(val, ec[pos][i]);
			if (dp[nv].find(nc) == dp[nv].end()) {
				dp[nv].insert(nc);
				que.push(P(nv, nc));
			}
		}
	}
	
	if (dp[n - 1].size() == 0) { cout << "IMPOSSIBLE" << endl; }
	else { cout << *dp[n - 1].begin() << " " << *dp[n - 1].rbegin() << endl; }
	return 0;
}
