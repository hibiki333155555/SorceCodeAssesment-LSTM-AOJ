#include<stdio.h>
#include<vector>
#include<algorithm>
#include<iostream>
#include<cmath>
#include<map>
#include<set>
#include <numeric>
using namespace std;
          
class Node{
public:
  int parent;
  int left;
  int right;
  Node();
};

Node::Node() : parent(-1),left(-1),right(-1){}

Node T[100005];

void preParse(int u){
  if(u == -1){return;}
  else{
    cout << " "<< u ;
    preParse(T[u].left);
    preParse(T[u].right);
  }
}

void inParse(int u){
  if(u == -1){return;}
  else{
    inParse(T[u].left);
    cout << " "<< u;
    inParse(T[u].right);
  }
}

void postParse(int u){
  if(u == -1){return;}
  else{
    postParse(T[u].left);
    postParse(T[u].right);
    cout << " "<< u;
  }
}

int main(){
  int n;
  scanf("%d",&n);
  for(int i = 0; i < n; i++){
    int id;
    scanf("%d",&id);
    int l,r;
    scanf("%d%d",&l,&r);
    T[id].left = l;
    if(l!=-1){
      T[l].parent = id;
    }
    T[id].right = r;
    if(r!=-1){
      T[r].parent = id;
    }
  }
  int root = 0;
  for(int i = 0; i < n; i++){
    if(T[i].parent == -1){root = i;}
  }

  cout << "Preorder" << endl;
  preParse(root);
  cout << endl;
  cout << "Inorder" << endl;
  inParse(root);
  cout << endl;
  cout << "Postorder" << endl;
  postParse(root);
  cout << endl;
}

