#include<iostream>
#include<algorithm>
#include<cmath>
#include<map>
#include<stdio.h>
#include<vector>
#include<queue>
#include<math.h>
#include<deque>
#include<set>
#include<tuple>
#include<string>
using namespace std;
#define ll long long
#define int long long
#define double long double
#define rep(s,i,n) for(int i=s;i<n;i++)
#define rrep(s,i,n) for(int i=n;i>=s;i-=1)
#define c(n) cout<<n<<endl;
#define ic(n) int n;cin>>n;
#define sc(s) string s;cin>>s;
#define mod 1000000007
#define inf 100000000000000007
#define f first
#define s second
#define mini(c,a,b) *min_element(c+a,c+b)
#define maxi(c,a,b) *max_element(c+a,c+b)
#define pi 3.141592653589793238462643383279
#define e_ 2.718281828459045235360287471352
#define P pair<int,int>
#define upp(a,n,x) upper_bound(a,a+n,x)-a;
#define low(a,n,x) lower_bound(a,a+n,x)-a;
#define UF UnionFind 
#define pb push_back
#define ep emplace_back
//printf("%.12Lf\n",);
int a[2145],b[2145],c[2145];
vector<P> e[2145];
int lc[2145],lc2[2145];
int gg(int x,int y){
	if(x==0||y==0)return x+y;
	int aa=x,bb=y;
	while(true){
		aa=aa%bb;
		if(aa==0)return bb;
		bb=bb%aa;
		if(bb==0)return aa;
	}
}
signed main(){
	ic(n) ic(m)
	rep(0,i,m){
		cin>>a[i]>>b[i]>>c[i];
		a[i]-=1,b[i]-=1;
		e[a[i]].pb({b[i],c[i]});
	}	
	rep(0,i,n)lc[i]=0;
	queue<P> q;
	lc[0]=1;
	q.push({0,1});
	while(!q.empty()){
		P p=q.front();q.pop();
		for(auto g:e[p.f]){
			int t=lc[g.f];
			int gc=gg(p.s,g.s);
			int l=p.s/gc*g.s;
			if(l>t){
				lc[g.f]=l;
				q.push({g.f,l});
			}
		}
	}
	rep(0,i,n)lc2[i]=inf;
	lc2[0]=1;
	q.push({0,1});
	while(!q.empty()){
		P p=q.front();q.pop();
		for(auto g:e[p.f]){
			int t=lc2[g.f];
			int gc=gg(p.s,g.s);
			int l=p.s/gc*g.s;
			if(l<t){
				lc2[g.f]=l;
				q.push({g.f,l});
			}
		}
	}
	if(lc2[n-1]==inf)c("IMPOSSIBLE")
	else cout<<lc2[n-1]<<" "<<lc[n-1]<<endl;
}

