#define READ_FROM_FILE 0

#if READ_FROM_FILE
#include <fstream>
#endif

#include <iostream>
#include <vector>
#include <unordered_map>

using namespace std;

const int move_forward = 1;
const int get_money = 2;
const int lose_money = 3;


int solve(const vector<pair<int, int>>& c_vec, const vector<int>& v_vec, const int x, const int y) {
	vector<unordered_map<int, double>> dp(y + 1);
	double expected_money = 0.0;

	dp[0][0] = 1.0;

	for (int i = 0; i < y; i++) {
		for (const auto &m : dp[i]) {
			int c_money = m.first;
			double prob = m.second;
			
			for (const int& v : v_vec) {
				int j = i + v;
				int e = -1;
				int a = -1;
				int n_money = c_money;

				j = min(j, y);
				e = c_vec[j].first;
				a = c_vec[j].second;

				if (e == move_forward) {
					j += a;
					j = min(j, y);
				}
				else if (e == get_money) {
					n_money += a;
				}
				else if (e == lose_money) {
					n_money = max(0, n_money - a);
				}

				if (dp[j].count(n_money) == 0) {
					dp[j][n_money] = prob / x;
				}
				else {
					dp[j][n_money] += prob / x;
				}
			}
		}
	}

	for (auto it = dp[y].begin(); it != dp[y].end(); it++) {
		expected_money += it->first * it->second;
	}

	return int(expected_money);
}


int main(int argc, char** argv) {
#if READ_FROM_FILE
	ifstream ifs("test0.txt");
	cin.rdbuf(ifs.rdbuf());
#endif
	while (true) {
		int x = -1;
		int y = -1;
		int z = -1;
		int v = -1;
		int n = -1;
		int e = -1;
		int a = -1;
		vector<pair<int, int>> c_vec;
		vector<int> v_vec;

		if (true) {
		//if (false) {
			cin >> x >> y >> z;
			if (x == 0 && y == 0 && z == 0) {
				break;
			}

			for (int i = 0; i < x; i++) {
				cin >> v;
				v_vec.push_back(v);
			}

			c_vec.resize(y + 1, pair<int, int>(0, 0));
			for (int i = 0; i < z; i++) {
				cin >> n >> e >> a;
				c_vec[n].first = e;
				c_vec[n].second = a;
			}
		}

		cout << solve(c_vec, v_vec, x, y) << endl;
	}

	return 0;
}

