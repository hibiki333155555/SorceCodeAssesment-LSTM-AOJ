#include <bits/stdc++.h>
using namespace std;

int main(){
  int V,E;
  cin >> V >> E;
  
  vector<vector<int>> edge(E);
  for(int i=0; i<E; i++){
    int s,t,w;
    cin >> s >> t >> w;
    edge.at(i) = {w, s, t};
  }
  sort(edge.begin(),edge.end());
  
  
  //for(int i=0; i<E; i++){
  //  cout << edge.at(i).at(0) << " " << edge.at(i).at(1) << " " << edge.at(i).at(2) << endl;
  //}
  
  
  vector<set<int>> tree(V);
  vector<int> parent(V);
  for(int i=0; i<V; i++){
    parent.at(i) = i;
    tree.at(i).insert(i);
  }
  
  int sum=0;
  for(int i=0; i<E; i++){
    int s=edge.at(i).at(1),t=edge.at(i).at(2);
    int sp=parent.at(s),tp=parent.at(t);
    while(sp != parent.at(sp)){
      sp = parent.at(sp);
    }
    while(tp != parent.at(tp)){
      tp = parent.at(tp);
    }
    int p=min(sp,tp),c=max(sp,tp);
    parent.at(s) = p;
    parent.at(t) = p;
    if(p == c){
      continue;
    }

    //cout << p << " " << c << endl;
    for(int x : tree.at(c)){
      tree.at(p).insert(x);
    }
    sum += edge.at(i).at(0);
    //cout << tree.at(0).size() << endl;
    if(tree.at(0).size() == V) break;
  }
  
  cout << sum << endl;
  return 0;
  
}
