import sys
readline = sys.stdin.readline
write = sys.stdout.write
def solve():
    W, H = map(int, readline().split())
    if W == H == 0:
        return False
    f, m, o = map(int, readline().split())
    C = [list(map(int, readline().split())) for i in range(H)]
    INF = 10**18
    memo = [[{} for i in range(m+1)] for i in range(H+1)]
    def dfs(i, j, a, l, r):
        key = (j, l, r)
        if key in memo[i][a]:
            return memo[i][a][key]
        if a <= 1:
            memo[i][a][key] = INF
            return INF
        if not l <= j < r:
            if C[i][j] < 0:
                c0 = -C[i][j]
                a0 = a-1
            else:
                c0 = 0
                a0 = min(a-1 + C[i][j], m)
            l0 = min(l, j)
            r0 = max(r, j+1)
        else:
            c0 = 0
            a0 = a-1
            l0 = l
            r0 = r
        if r0 > f:
            memo[i][a][key] = INF
            return INF
        if i == H-1:
            memo[i][a][key] = c0
            return c0
        c1 = dfs(i+1, j, a0, j, j)
        if j > 0:
            c1 = min(c1, dfs(i, j-1, a0, l0, r0))
        if j < W-1:
            c1 = min(c1, dfs(i, j+1, a0, l0, r0))
        memo[i][a][key] = c0 + c1
        return c0 + c1
    ans = INF
    for j in range(W):
        ans = min(ans, dfs(0, j, o, j, j))
    if ans < INF:
        write("%d\n" % ans)
    else:
        write("NA\n")
    return True
while solve():
    ...

