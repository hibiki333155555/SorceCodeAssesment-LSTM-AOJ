#include<iostream>
#include<stdio.h>
#include<string.h>
using namespace std;
struct Edge{
    int to,next;
}edge[100010];
int head[100010],dfn[10010],low[100010],vis[100010],cnt,scc_cnt,top,t;
int skt[100010],id[100010];
bool in_skt[100010];
int m,n,root;
void add(int a,int b){
    edge[cnt].to=b;
    edge[cnt].next=head[a];
    head[a]=cnt++;
}
void tarjan(int u,int pre){
    //cout<<"------now="<<u<<endl;
    dfn[u]=low[u]=++t;
    skt[++top]=u,in_skt[u]=true;
    for(int i=head[u];i>=0;i=edge[i].next){
        int j=edge[i].to;
        //cout<<"      j="<<j<<endl;
        if(dfn[j]==0){
            tarjan(j,u);
            low[u]=min(low[u],low[j]);
        }else if(in_skt[j]==true&&pre!=j){
            //cout<<"   new pre="<<pre<<" u="<<u<<endl;
            low[u]=min(low[u],low[j]);
        }
    }if(dfn[u]==low[u]){
        int y;
        ++scc_cnt;
        //cout<<"----------u="<<u<<endl;
        do{
            y=skt[top--];
            //cout<<"----y="<<y<<endl;
            in_skt[y]=false;
            id[y]=scc_cnt;
        }while(y!=u);
    }
}
int main(){
    memset(vis,0,sizeof(vis));
    memset(head,-1,sizeof(head));
    memset(dfn,0,sizeof(dfn));
    cnt=0,top=0,scc_cnt=0,t=0;
    cin>>n>>m;
    for(int i=0;i<m;i++){
        int a,b;
        cin>>a>>b;
        add(a,b);
        add(b,a);
        //cout<<"***"<<a<<"***"<<b<<endl;
    }
    for(int i=0;i<n;i++)if(dfn[i]==0)tarjan(i,-1);
    for(int i=0;i<n;i++){
        //cout<<"***id["<<i<<"]="<<id[i]<<endl;
        for(int j=head[i];j>=0;j=edge[j].next){
            if(id[i]!=id[edge[j].to]&&i<edge[j].to){
                cout<<i<<" "<<edge[j].to<<endl;
            }
        }
    }
    return 0;
}

