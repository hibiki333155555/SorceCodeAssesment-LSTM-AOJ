#include <bits/stdc++.h>
using namespace std;

int main() {
    int N;
    cin >> N;
    vector<int>p(N);
    for(int i = 0; i < N; i++) {
        cin >> p[i];
    }
    vector<int>dist(N,-1);
    dist[0] = 0;
    vector<int>now = {0};
    for(int i = 0; i < N; i++) {
        queue<int>que;
        vector<int>nxt;
        for(int j = 0; j < now.size(); j++) {
            for(int k = 1; k <= 6; k++) {
                if(now[j]+k < N && dist[now[j]+k] == -1) {
                    dist[now[j]+k] = i+1;
                    if(p[now[j]+k] == 0) {
                        nxt.push_back(now[j]+k);
                    }
                    que.push(now[j]+k);
                }
            }
        }
        while (!que.empty()) {
            int x = que.front();
            que.pop();
            if(dist[x+p[x]] == -1) {
                dist[x+p[x]] = i+1;
                if(p[x+p[x]] == 0) {
                    nxt.push_back(x+p[x]);
                }
                que.push(x+p[x]);
            }
        }
        now = nxt;
        if(dist.back() != -1) {
            cout << dist.back() << endl;
            return 0;
        }
    }
}
