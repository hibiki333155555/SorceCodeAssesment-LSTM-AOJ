#include<bits/stdc++.h>
using namespace std;

inline int in() { int x; scanf("%d", &x); return x; }
inline long long inll() { long long x; scanf("%lld", &x); return x; }
inline double indb() { double x; scanf("%lf", &x); return x; }
inline void printline(int x) { printf("%d\n", x); }
inline void printline(long long x) { printf("%lld\n", x); }
inline void printline(double x) { printf("%lf\n", x); }
inline void printline(string str) { cout << str << "\n"; }

struct SCC {
    int n;
    vector<vector<int>> G, rG, scclist;
    vector<int> order, component;
    vector<bool> used;

    SCC() {}
    SCC(const vector<vector<int>> &G) { calculate(G); }

    void dfs(int v) {
        used[v] = true;
        for ( auto nv : G[v] ) {
            if ( !used[nv] ) { dfs(nv); }
        }
        order.emplace_back(v);
    }

    void rdfs(int v, int k) {
        component[v] = k;
        scclist[k].emplace_back(v);
        for ( auto nv : rG[v] ) {
            if ( component[nv] == -1 ) { rdfs(nv, k); }
        }
    }

    int calculate(const vector<vector<int>> &G_) {
        n = (int)G_.size();
        G = G_;
        rG.resize(n);
        scclist.resize(0);
        order.resize(0);
        component.assign(n, -1);
        used.assign(n, false);
        for ( int v = 0; v < n; ++v ) {
            for ( auto nv : G[v] ) {
                rG[nv].emplace_back(v);
            }
        }

        for ( int v = 0; v < n; ++v ) {
            if ( !used[v] ) { dfs(v); }
        }
        reverse(order.begin(), order.end());
        int k = 0;
        for ( auto v : order ) {
            if ( component[v] == -1 ) { 
                scclist.emplace_back();
                rdfs(v, k++); 
            }
        }
        return k;
    }
};

int main() {
    int N = in(), M = in();
    vector<vector<int>> G(N);
    for ( int i = 0; i < M; ++i ) {
        int s = in(), t = in();
        G[s].emplace_back(t);
    }

    SCC scc(G);
    int Q = in();
    for ( int i = 0; i < Q; ++i ) {
        int u = in(), v = in();
        if ( scc.component[u] == scc.component[v] ) {
            printline(1);
        } else {
            printline(0);
        }
    }
    return 0;
}

// https://judge.u-aizu.ac.jp/onlinejudge/description.jsp?id=GRL_3_C&lang=ja
