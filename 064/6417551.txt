#!usr/bin/env python3
from collections import defaultdict, deque
from heapq import heappush, heappop
from itertools import permutations, accumulate
import sys
import math
import bisect
def LI(): return [int(x) for x in sys.stdin.readline().split()]
def I(): return int(sys.stdin.readline())
def IR(n):
    return [I() for _ in range(n)]
def LIR(n):
    return [LI() for _ in range(n)]

sys.setrecursionlimit(1000000)
mod = 1000000007

def main():
    n,m,v,a,b = LI()
    v %= m
    a %= m
    b %= m
    f = [0]*m
    for i in range(min(n-1,m+10)):
        f[v] = 1
        v = (a*v+b)%m
        if f[v]:
            print("Yes")
            return
    print("No")
    return


if __name__ == "__main__":
    for _ in range(I()):
       main()

