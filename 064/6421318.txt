#include <stdio.h>

// rad[i] = max radius of palindrome with center between s[i-1] and s[i]
void Manacher_even(int N, char s[], int rad[])
{
	int i, j, l, r;
	for (i = 1, rad[0] = 0, rad[1] = 0, rad[N] = 0; i < N; i = r) {
		for (l = i - rad[i] - 1, r = i + rad[i]; l >= 0 && r < N && s[l] == s[r]; l--, r++);
		rad[i] = r - i;
		for (l = i - 1, r = i + 1; r - i < rad[i] && l > 0 && r < N; l--, r++) {
			if (l - rad[l] == i - rad[i]) {
				rad[r] = i + rad[i] - r;
				break;
			} else if (l - rad[l] > i - rad[i]) rad[r] = rad[l];
			else rad[r] = i + rad[i] - r;
		}
	}
}

int main()
{
	int N;
	char S[1000001];
	scanf("%d", &N);
	scanf("%s", S);

	int i, rad[1000001], ans = 0;
	Manacher_even(N, S, rad);
	for (i = 1; i < N; i++) if (rad[i] == i || rad[i] == N - i) ans++;
	printf("%d\n", ans);
	fflush(stdout);
	return 0;
}
