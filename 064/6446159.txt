#include<cctype>
#include<cstdio>
#include<cmath>
#include<cstdlib>
#include<climits>
#include<cstring>
#include<iostream>
#include<algorithm>
#include<vector>
#include<string>
#include<queue>
#include<set>
#include<map>
#include<unordered_map>
#include<unordered_set>
#define ALL(x) x.begin(),x.end()
#define x first
#define y second
using namespace std;
const int N=100;
char g[N][N];
bool vis[N][N];
int d[4][2]={{1,0},{-1,0},{0,-1},{0,1}};
int h,w;

void bfs(int x,int y){
    queue<pair<int,int>> q;
    vis[x][y]=true;
    q.push({x,y});
    while(!q.empty()){
        auto crt=q.front();
        q.pop();
        for(int i=0;i<4;i++){
            int nx=crt.x+d[i][0];
            int ny=crt.y+d[i][1];
            if(nx>=0&&nx<h&&ny>=0&&ny<w&&!vis[nx][ny]&&g[nx][ny]==g[crt.x][crt.y]){
                q.push({nx,ny});
                vis[nx][ny]=true;
            }
        }
    }
}

int main(){
    while(scanf("%d%d\n",&h,&w),h&&w){
        for(int i=0;i<h;i++){
            for(int j=0;j<w;j++){
                g[i][j]=getchar();
            }
            getchar();
        }
        memset(vis,0,sizeof(vis));
        int cnt=0;
        for(int i=0;i<h;i++){
            for(int j=0;j<w;j++){
                if(!vis[i][j]){
                    cnt++;
                    bfs(i,j);
                }    
            }
            
        }
        printf("%d\n",cnt);
    }
    return 0;
}
