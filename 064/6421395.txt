#pragma GCC optimize("Ofast")
#include <bits/stdc++.h>
using namespace std;

#define REP(i,n) for(int i=0;i<(n);i++)
#define ALL(v) v.begin(),v.end()
#define debug(a) cerr<<#a<<":"<<a<<endl;
#define debug2(a,b) cerr<<"("<<#a<<","<<#b<<"):("<<a<<","<<b<<")"<<endl;
#define debug3(a,b,c) cerr<<"("<<#a<<","<<#b<<","<<#c<<"):("<<a<<","<<b<<","<<c<<")"<<endl;
#define debug4(a,b,c,d) cerr<<"("<<#a<<","<<#b<<","<<#c<<","<<d<<"):("<<a<<","<<b<<","<<c<<","<<d<<")"<<endl;

template<typename T>
istream& operator>>(istream&is,vector<T>&v){
  for(T&p:v)is>>p;
  return is;
}
template<typename T>
ostream& operator<<(ostream&os,const vector<T>&v){
  if(&os==&cerr)os<<"[";
  for(int i=0;i<v.size();i++){
    os<<v[i];
    if(i+1<v.size())os<<(&os==&cerr?",":" ");
  }
  if(&os==&cerr)os<<"]";
  return os;
}

int nxt[30][1000];

int main(){
  ios::sync_with_stdio(false);
  cin.tie(nullptr);

  int n;cin>>n;
  vector<int> a(n);
  cin>>a;
  int q;cin>>q;
  deque<pair<int,int>> qu;
  REP(_,q){
    int t;cin>>t;
    if(t==1){
      int x,y;cin>>x>>y;x--;y--;
      qu.push_back({x,y});
    }
    if(t==2)qu.pop_back();
    if(t==3){
      vector<int> pre(n);
      REP(i,n)pre[i]=i;
      for(const auto&[x,y]:qu){
        swap(pre[x],pre[y]);
      }
      REP(i,n)nxt[0][pre[i]]=i;
      for(int j=1;j<30;j++)REP(i,n)nxt[j][i]=nxt[j-1][nxt[j-1][i]];
      int k;cin>>k;
      for(int j=0;j<30;j++){
        if(k&(1<<j)){
          vector<int> b(n);
          REP(i,n)b[nxt[j][i]]=a[i];
          a=b;
        }
      }
    }
  }
  cout<<a<<endl;
}
