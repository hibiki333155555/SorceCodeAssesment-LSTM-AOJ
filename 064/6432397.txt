#include<bits/stdc++.h>
#include<ext/pb_ds/assoc_container.hpp>
#include<ext/pb_ds/tree_policy.hpp>
#define i64 int64_t
#define pb push_back
#define pf push_front
#define ff first
#define ss second
#define sz size()
#define mp make_pair
#define pii pair<int, int>
#define pi64 pair<i64, i64>
#define pi 3.141592653589793238
#define inf INT_MAX
#define snf LLONG_MAX
#define mnf INT_MIN
#define cnf LLONG_MIN
#define mod 1000000007
#define all(b) b.begin(), b.end()
#define rall(b) b.rbegin(), b.rend()
#define ordered_set tree<int, null_type, less<int>, rb_tree_tag, tree_order_statistics_node_update>
using namespace std;
using namespace __gnu_pbds;
void solve(){
    i64 q; cin >> q;
    set<i64> hesh;
    while(q--){
        int x; cin >> x;
        if(!x){
            i64 a; cin >> a;
            hesh.insert(a);
            cout << hesh.sz << '\n';
        }
        else if(x == 1){
            i64 a; cin >> a;
            if(hesh.count(a)){
                cout << 1 << '\n';
            }
            else{
                cout << 0 << '\n';
            }
        }
        else if(x == 2){
            i64 a; cin >> a;
            hesh.erase(a);
        }
        else{
            i64 d, p;
            cin >> d >> p;
            auto it_a = hesh.lower_bound(d);
            auto it_b = hesh.upper_bound(p);
            for(auto it = it_a; it != it_b; it++){
                cout << *it << '\n';
            }
        }
    }
}
int main(){
    ios_base::sync_with_stdio(false);
    cin.tie(0); cout.tie(0);
    int tc; tc = 1;
    while(tc--){
        solve();
    }
    return 0;
}

