#include<bits/stdc++.h>
namespace {
using namespace std;
#define rep(i,n) for(int i = 0; i < (int)(n); i++)
#define rrep(i,n) for(int i = (int)(n) - 1; i >= 0; i--)
#define all(x) begin(x), end(x)
#define rall(x) rbegin(x), rend(x)
template<class T> bool chmax(T& a, const T& b) { if (a < b) { a = b; return true; } else return false; }
template<class T> bool chmin(T& a, const T& b) { if (b < a) { a = b; return true; } else return false; }
using ll = long long;
using P = pair<int,int>;
using VI = vector<int>;
using VVI = vector<VI>;
using VL = vector<ll>;
using VVL = vector<VL>;

} int main() {
  ios::sync_with_stdio(false);
  cin.tie(0);
  int n, m;
  cin >> n >> m;
  VI right(m, -1);
  VL add(m + 1);
  VL attack(m);
  rep(_, n) {
    int a, b, c;
    cin >> a >> b >> c;
    b--;
    add[b] += a;
    add[c] -= a;
    chmax(right[b], c);
  }
  int q;
  cin >> q;
  rep(_, q) {
    int d, e;
    cin >> d >> e;
    e--;
    attack[e] += d;
  }
  ll ans = 0;
  ll now = 0;
  int mxright = -1;
  rep(i, m) {
    if (i == mxright) mxright = -1;
    now += add[i];
    chmax(mxright, right[i]);
    if (attack[i] > now) {
      if (mxright == -1) {
        cout << -1 << '\n';
        return 0;
      }
      ll diff = attack[i] - now;
      now += diff;
      ans += diff;
      add[mxright] -= diff;
    }
  }
  cout << ans << '\n';
}
