#![allow(dead_code)]
fn input_line() -> String {
    let mut buf = String::new();

    std::io::stdin().read_line(&mut buf).unwrap();

    buf = buf.trim().to_string();

    return buf;
}

fn n_th_input_line(n: i32) -> Vec<String> {
    let mut v: Vec<String> = Vec::new();
    for _ in 0..n {
        let s = input_line();
        // println!("{:?}", s);
        v.push(s);
    }
    return v;
}

fn input_line_until_zero() -> Vec<String> {
    let mut v: Vec<String> = Vec::new();
    loop {
        let s = input_line();
        if s.parse::<i32>().unwrap() == 0 {
            break;
        }
        v.push(s);
    }
    return v;
}

fn main() {
    let v = input_line_until_zero();

    for (i, x) in v.iter().enumerate() {
        // println!("Case {}: {:?}", i, x);
        println!("Case {}: {}", i, x.parse::<i32>().unwrap());
    }
}

