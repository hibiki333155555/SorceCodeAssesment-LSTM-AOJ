import sys

# sys.setrecursionlimit(200005)
int1 = lambda x: int(x)-1
pDB = lambda *x: print(*x, end="\n", file=sys.stderr)
p2D = lambda x: print(*x, sep="\n", end="\n\n", file=sys.stderr)
def II(): return int(sys.stdin.readline())
def LI(): return list(map(int, sys.stdin.readline().split()))
def LLI(rows_number): return [LI() for _ in range(rows_number)]
def LI1(): return list(map(int1, sys.stdin.readline().split()))
def LLI1(rows_number): return [LI1() for _ in range(rows_number)]
def SI(): return sys.stdin.readline().rstrip()
dij = [(0, 1), (-1, 0), (0, -1), (1, 0)]
# dij = [(0, 1), (-1, 0), (0, -1), (1, 0), (1, 1), (1, -1), (-1, 1), (-1, -1)]
# inf = (1 << 63)-1
inf = (1 << 31)-1
md = 10**9+7
# md = 998244353

def p(u, v): return u*m+v

m = 50
m2 = 2500
n, k = LI()
aa = LI1()

ss = [0]*m2
tt = [0]*m2
for a in aa:
    for u in range(a+1):
        s = t = 0
        for v in range(u, a+1):
            s += ss[p(u, v)]
            t += tt[p(u, v)]
            s %= md
            t %= md
        ss[p(u, a)] += s+t
        tt[p(u, a)] += t
        ss[p(u, a)] %= md
        tt[p(u, a)] %= md
    ss[p(a, a)] += 1
    tt[p(a, a)] += 1

def p2(aa):
    for i in range(50):
        print(aa[i*50:i*50+50])
    print()

# p2(ss)
# p2(tt)

def merge(ss1, tt1, ss2, tt2):
    ss, tt = [0]*m2, [0]*m2
    for u in range(m):
        for w in range(u, m):
            ss[p(u, w)] += ss1[p(u, w)]+ss2[p(u, w)]
            tt[p(u, w)] += tt1[p(u, w)]+tt2[p(u, w)]
            s = t = 0
            for v in range(u, w+1):
                s += ss1[p(u, v)]
                t += tt1[p(u, v)]
                s %= md
                t %= md
                ss[p(u, w)] += s*tt2[p(v, w)]%md+ss2[p(v, w)]*t%md
                ss[p(u, w)] %= md
                tt[p(u, w)] += t*tt2[p(v, w)]%md
                tt[p(u, w)] %= md
    return ss, tt

xx = yy = None
while k:
    if k & 1:
        if xx:
            xx, yy = merge(xx, yy, ss, tt)
        else:
            xx, yy = ss[:], tt[:]
    ss, tt = merge(ss, tt, ss, tt)
    k >>= 1

ans = 0
for x in xx:
    ans += x
    ans %= md

print(ans)

