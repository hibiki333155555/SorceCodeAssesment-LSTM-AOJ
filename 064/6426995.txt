#include<bits/stdc++.h>
using namespace std;
#define rep(i,n) for(ll i=0;i<n;i++)
#define repl(i,l,r) for(ll i=(l);i<(r);i++)
#define per(i,n) for(ll i=(n)-1;i>=0;i--)
#define perl(i,r,l) for(ll i=r-1;i>=l;i--)
#define fi first
#define se second
#define pb push_back
#define ins insert
#define pqueue(x) priority_queue<x,vector<x>,greater<x>>
#define all(x) (x).begin(),(x).end()
#define CST(x) cout<<fixed<<setprecision(x)
#define rev(x) reverse(x);
using ll=long long;
using vl=vector<ll>;
using vvl=vector<vector<ll>>;
using pl=pair<ll,ll>;
using vpl=vector<pl>;
using vvpl=vector<vpl>;
const ll MOD=1000000007;
const ll MOD9=998244353;
const int inf=1e9+10;
const ll INF=4e18;
const ll dy[8]={1,0,-1,0,1,1,-1,-1};
const ll dx[8]={0,1,0,-1,1,-1,1,-1};
template <typename T> inline bool chmax(T &a, T b) {
  return ((a < b) ? (a = b, true) : (false));
}
template <typename T> inline bool chmin(T &a, T b) {
  return ((a > b) ? (a = b, true) : (false));
}
vl noshi(vl a){
  vl base;
  for(auto p:a){
    for(auto b:base){
      chmin(p,b^p);
    }
    if(p)base.emplace_back(p);
  }
  return base;
}
vl merge(vl base,vl b){//baseとbの共通空間をとる
  vl res;
  vpl base_p;
  for(auto v:base){
    base_p.emplace_back(v,0);
  }
  for(auto v:b){
    ll x=v;
    for(auto [u,t]:base_p){
      if(chmin(v,v^u)){
        x^=t;
      }
    }
    if(v)base_p.emplace_back(v,x);
    else res.emplace_back(x);
  }
  return res;
}
int main(){
  ll n;cin >> n;
  vl m(n);rep(i,n)cin >> m[i];
  vvl dp(1<<n);
  rep(i,n){
    vl a;
    rep(_,m[i]){
      ll b;cin >> b;
      a.emplace_back(b);
    }
    dp[1<<i]=noshi(a);
  }
  __int128_t ans=0;
  repl(bit,1,1<<n){
    if(__builtin_popcount(bit)==1){
      ans+=1LL<<dp[bit].size();
      continue;
    }
    ll x=bit&(-bit);
    dp[bit]=merge(dp[bit^x],dp[x]);
    ans+=(1LL<<dp[bit].size())*(__builtin_popcount(bit)%2? 1:-1);
  }
  cout << (ll)ans << endl;
} 
