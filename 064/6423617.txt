#include<iostream>
using namespace std;
struct Card{char suit,value;};
void bubble(struct Card A[],int N){
    for (int i=0;i<N;i++){
        for (int j=N-1;j>=i+1;j--){
            if (A[j].value<A[j-1].value){
                swap(A[j],A[j-1]);
            }
        }
    }
}
void selection(struct Card A[],int N){
    for (int i=0;i<N;i++){
        int minj=i;
        for (int j=i+1;j<N;j++){
            if (A[minj].value>A[j].value){
                minj=j;
            }
        }
        swap(A[minj],A[i]);
    }
}

void print_Card(struct Card A[],int N){
    for (int i=0;i<N;i++){
        if (i)cout<<" ";
        cout <<A[i].suit<<A[i].value;
    }
    cout<<endl;
}

void isStable(struct Card C_B[],Card C_S[],int N){
    for (int i=0;i<N;i++){
        if (C_B[i].suit!= C_S[i].suit) {
            cout<<"Not stable"<<endl;
            return ;
        }
    }
    cout <<"Stable"<<endl;
    
}

int main(){
    int N;
    char ch;
    
    cin >>N;
    struct Card C_B[N],C_S[N];
    for (int i=0;i<N;i++){
        cin>>C_B[i].suit>>C_B[i].value;
    }
    for (int i=0;i<N;i++) C_S[i]=C_B[i];
    
    bubble(C_B,N);
    selection(C_S,N);
    
    print_Card(C_B,N);
    cout<<"Stable"<<endl;
    print_Card(C_S,N);
    isStable(C_B,C_S,N);
}
