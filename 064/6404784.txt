#include <stdio.h>
#include <stdlib.h>

int g[1024], ed[10240][3];

int cmp1(const void* a, const void* b) {
    int ai = *(int*)a;
    int bi = *(int*)b;
    return ai > bi ? 1 : ai == bi ? 0 : -1;
}

int find(int x) {
    if (!g[x]) return x;
    else return g[x] = find(g[x]);
}

void uni(int x, int y) {
    if (find(x) == find(y)) return;
    g[find(y)] = find(x);
}

int main(void) {
    int n, m, cnt;
    while (1) {
        scanf("%d %d", &n, &m);
        if (n == 0) break;
        for (int i = 0; i < m; i++) {
            scanf("%d %d %d", &ed[i][1], &ed[i][2], &ed[i][0]);
        }
        for (int i = 0; i <= n; i++) g[i] = 0;
        cnt = 0;
        qsort(ed, m, sizeof(int) * 3, cmp1);
        for (int i = 0; i < m; i++) {
            if (find(ed[i][1]) != find(ed[i][2])) {
                cnt++;
                uni(ed[i][1], ed[i][2]);
                if (cnt * 2 == n) {
                    printf("%d\n", ed[i][0]);
                    break;
                }
            }
        }
    }
    return 0;
}
