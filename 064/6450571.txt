#!usr/bin/env python3
from collections import defaultdict, deque
from heapq import heappush, heappop
from itertools import permutations, accumulate
import sys
import math
import bisect
def LI(): return [int(x) for x in sys.stdin.readline().split()]
def I(): return int(sys.stdin.readline())
def IR(n):
    return [I() for _ in range(n)]
def LIR(n):
    return [LI() for _ in range(n)]

sys.setrecursionlimit(1000000)
mod = 1000000007

def main():
    a,b = LI()
    if a == b == 0:
        print(1)
        return
    ans = 0
    for i in reversed(range(max(a,b).bit_length())):
        if (a>>i) != (b>>i):
            break
        ans += 1
    print(ans)
    return


if __name__ == "__main__":
    main()

