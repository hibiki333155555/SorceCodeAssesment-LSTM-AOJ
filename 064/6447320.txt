#include <iostream>
#include <vector>
#include <algorithm>
#include <climits>
using namespace std;

class Solution {
public:
    int maxWidthRamp(vector<int>& A) {
        int n = A.size();
        vector<vector<int>> dp(n, vector<int>(n, -INT_MAX));
        for (int i = 0; i < n; ++i) {
            dp[i][i] = 0;
        }
        for (int width = 2; width <= n; ++width) {
            for (int i = 0; i + width - 1 < n; ++i) {
                if (abs(A[i] - A[i + width - 1]) <= 1) {
                    dp[i][i + width - 1] = max(dp[i][i + width - 1], dp[i + 1][i + width - 1] + 1);
                }
                for (int j = i + 1; j < i + width; ++j) {
                    dp[i][i + width - 1] = max(dp[i][i + width - 1], dp[i][j] + dp[j][i + width - 1]);
                }
            }
        }
        int ans = 0;
        for (int width = 2; width <= n; ++width) {
            for (int i = 0; i + width - 1 < n; ++i) {
                ans = max(ans, dp[i][i + width - 1] + dp[i + 1][i + width - 1]);
            }
        }
        return ans;
    }
};
