#include <iostream>
#include<vector>
using namespace std;
const int MAX=100;
const int INF=0x3f3f3f3f;
vector<int> Graph[MAX];
int used[MAX],d[MAX];
int shortest=0;

int prim(int sum){
    for(int i=0;i<sum;i++){
        d[i]=INF;
    }
    d[0]=0;
    while(1){
        int u=-1,du=INF;//du是最小节点
        for(int j=0;j<sum;j++){
            if(used[j]==0&&d[j]<du){
                u=j;
                du=d[j];
            }
        }
        if(u==-1){
            break;
        }
        used[u]=true;
        shortest+=du;
        for(int i=0;i<sum;i++){
            if(used[i]==0&&Graph[u][i]!=-1){
                d[i]=min(d[i],Graph[u][i]);
            }
        }
    }
        for(int i=0;i<sum;i++){
            if(used[i]==0){
                return -1;
            }
        }
        return 0;
}

int main()
{
   int sum,temp;
   cin>>sum;
   for(int i=0;i<sum;i++){
        for(int j=0;j<sum;j++){
            cin>>temp;
            Graph[i].push_back(temp);
        }

   }
   for(int i=0;i<sum;i++){
        used[i]=0;
   }
   int temp1=prim(sum);
   if(temp1!=-1){
    cout<<shortest<<endl;
   }

}

