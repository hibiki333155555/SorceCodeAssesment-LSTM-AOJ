#pragma GCC optimize("O3")
#include<bits/stdc++.h> 
using namespace std;
using ll=long long;
using P=pair<ll,ll>;
template<class T> using V=vector<T>; 
#define fi first
#define se second
#define all(v) (v).begin(),(v).end()
const ll inf=(1e18);
// const ll mod=998244353;
const ll mod=1000000007;
const vector<int> dy={-1,0,1,0},dx={0,-1,0,1};
struct __INIT{__INIT(){cin.tie(0);ios::sync_with_stdio(false);cout<<fixed<<setprecision(15);}} __init;
template<class T> bool chmax(T &a, const T &b) { if (a<b) { a=b; return 1; } return 0; }
template<class T> bool chmin(T &a, const T &b) { if (a>b) { a=b; return 1; } return 0; }
template<class T>void debag(const vector<T> &a){cerr<<"debag :";for(auto v:a)cerr<<v<<" ";cerr<<"\n";}
template<class T>void print(const vector<T> &a){for(auto v:a)cout<<v<<" ";cout<<"\n";}
int main(){
    int n,m;
    cin>>n>>m;
    V<ll> c(n);
    set<tuple<int,int,int>> s;
    V<int> R(n);
    for(int i=0;i<n;i++){
        int a,b;
        cin>>c[i]>>a>>b;
        a--;b--;
        s.emplace(a,1,i);
        s.emplace(b+1,-1,i);
        R[i]=b;
    }
    V<ll> d(m,0);
    int  q;cin>>q;
    for(int i=0;i<q;i++){
        ll l,r;
        cin>>l>>r;
        r--;
        d[r]+=l;
    }
    ll sum=0;
    set<pair<int,int>> r;
    ll ans=0;
    for(int i=0;i<m;i++){
        while(s.size()){
            auto [a,b,id]=*s.begin();
            if(a!=i)break;
            if(b==-1){
                sum-=c[id];
                r.erase(make_pair(R[id],id));
            }else{
                sum+=c[id];
                r.emplace(R[id],id);
            }
            s.erase(s.begin());
        }
        if(d[i]>sum){
            if(r.empty()){
                cout<<-1<<"\n";
                return 0;
            }
            auto [ma,id]=*r.rbegin();
            ans+=d[i]-sum;
            c[id]+=d[i]-sum;
            sum=d[i];
        }
    }
    cout<<ans<<"\n";
}
