#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
template<class T>bool chmax(T &a, const T &b) { if (a<b) { a=b; return true; } return false; }
template<class T>bool chmin(T &a, const T &b) { if (b<a) { a=b; return true; } return false; }
#define all(x) (x).begin(),(x).end()
#define fi first
#define se second
#define mp make_pair
#define si(x) int(x.size())
const int mod=998244353,MAX=2005;
const ll INF=1LL<<60;

ll gcd(ll a,ll b){
    if(b==0) return a;
    return gcd(b,a%b);
}

ll lcm(ll a,ll b){
    ll g=gcd(a,b);
    return a/g*b;
}

vector<pair<int,ll>> G[MAX];

set<ll> SE[MAX];

int main(){
    
    std::ifstream in("text.txt");
    std::cin.rdbuf(in.rdbuf());
    cin.tie(0);
    ios::sync_with_stdio(false);
    
    int N,M;cin>>N>>M;
    for(int i=0;i<M;i++){
        int a,b,c;cin>>a>>b>>c;a--;b--;
        G[a].push_back(mp(b,c));
    }
    
    queue<pair<int,ll>> Q;
    Q.push(mp(0,1));
    SE[0].insert(1);
    
    while(!Q.empty()){
        auto u=Q.front();Q.pop();
        for(auto to:G[u.fi]){
            ll x=lcm(u.se,to.se);
            if(!SE[to.fi].count(x)){
                SE[to.fi].insert(x);
                Q.push(mp(to.fi,x));
            }
        }
    }
    
    if(SE[N-1].empty()){
        cout<<"IMPOSSIBLE\n";
    }else{
        cout<<*SE[N-1].begin()<<" "<<*SE[N-1].rbegin()<<endl;
    }
}

