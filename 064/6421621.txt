A = [0]
H = 0
out = []

def Insert(i):
    A.append(i)
    global H
    H = H + 1
    parent = H //2
    while(parent >= 1 and A[parent < A[i]]):
        ex = A[parent]
        A[parent] = A[i]
        A[i] = ex
        parent = parent//2

def maxHeapify(i):
    l = 2*i
    r = 2*i + 1

    if l <= H and A[l] > A[i]:
        largest = l
    else:
        largest = i
    if r <= H and A[r] > A[largest]:
        largest = r
    if largest != i:
        inter = A[i]
        A[i] = A[largest]
        A[largest] = inter
        maxHeapify(largest)

def Extract():
    out.append(str(A[1]))
    global H
    if H == 1:
        H = H - 1
        return
    A[1] = A[H]
    A.pop()
    H = H - 1
    maxHeapify(1)

while True:
    command = input().split()
    if command == ['end']:
        break
    if command[0] == 'insert':
        Insert(int(command[1]))
    elif command[0] == 'extract':
        Extract()

print(('\n').join(out))
