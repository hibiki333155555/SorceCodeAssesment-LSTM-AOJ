def partition(A, p, r):
    x = A[r][1]
    i = p
    for j in range(p, r):
        if A[j][1] <= x:
            A[i], A[j] = A[j], A[i]
            i += 1
    A[i], A[r] = A[r], A[i]
    return i


def quicksort(A, p, r):
    if p < r:
        q = partition(A, p, r)
        quicksort(A, p, q-1)
        quicksort(A, q+1, r)


from sys import stdin 
input = stdin.readline 

n = int(input())
A = []
for _ in range(n):
    suit, num = input().split()
    A.append((suit, int(num)))
    
B = A.copy()
quicksort(B, 0, n - 1)

from collections import defaultdict 
order_A = defaultdict(list)
for s, num in A:
    order_A[num].append(s)
    
order_B = defaultdict(list)
for s, num in B:
    order_B[num].append(s)
    
stable = True 
for num in order_A:
    if order_A[num] != order_B[num]:
        stable = False 
        break 
    
if stable:
    print('Stable')
else:
    print('Not stable')
    
for b in B:
    print(*b)
