from collections import deque

Directions = [(1, 0), (0, 1), (-1, 0), (0, -1)]
n = int(input())
for i in range(n):
    input()
    F = [list(map(int, list(input()))) for _ in range(8)]
    sj = int(input())
    sj -= 1
    si = int(input())
    si -= 1
    Que = deque([(si, sj)])
    while Que:
        ci, cj = Que.popleft()
        if F[ci][cj] == 0:
            continue
        F[ci][cj] = 0
        for di, dj in Directions:
            for cnt in range(1, 4):
                ni = ci + di * cnt
                nj = cj + dj * cnt
                if 0 <= ni < 8 and 0 <= nj < 8 and F[ni][nj] == 1:
                    Que.append((ni, nj))
    print(f"Data {i + 1}:")
    for i in range(8):
        print(''.join(map(str, F[i])))

