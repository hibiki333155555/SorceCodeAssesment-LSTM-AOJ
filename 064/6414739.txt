import sys

sys.setrecursionlimit(200005)
int1 = lambda x: int(x)-1
pDB = lambda *x: print(*x, end="\n", file=sys.stderr)
p2D = lambda x: print(*x, sep="\n", end="\n\n", file=sys.stderr)
def II(): return int(sys.stdin.readline())
def LI(): return list(map(int, sys.stdin.readline().split()))
def LLI(rows_number): return [LI() for _ in range(rows_number)]
def LI1(): return list(map(int1, sys.stdin.readline().split()))
def LLI1(rows_number): return [LI1() for _ in range(rows_number)]
def SI(): return sys.stdin.readline().rstrip()
dij = [(0, 1), (-1, 0), (0, -1), (1, 0)]
# dij = [(0, 1), (-1, 0), (0, -1), (1, 0), (1, 1), (1, -1), (-1, 1), (-1, -1)]
# inf = (1 << 63)-1
inf = (1 << 31)-1
md = 10**9+7
# md = 998244353

h, w = LI()
ss = [[c == "o" for c in SI()] for _ in range(h)]

tot = sum(sum(row) for row in ss)

ans = inf
for _ in range(2):
    s = 0
    for i, row in enumerate(ss[:-1]):
        s += sum(row)
        c1 = s+h*w-tot-((i+1)*w-s)
        c2 = (i+1)*w-s+tot-s
        ans = min(ans, c1, c2)
    ss = [col for col in zip(*ss)]
    h, w = w, h

print(ans)

