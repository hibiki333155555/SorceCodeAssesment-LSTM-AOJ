#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

int N, S;
int A[200009][4];

vector<int> Random_Generate(int H, int W) {
	vector<vector<int>> vec(H * W, vector<int>(4, 1));

	// 横方向
	for (int i = 0; i < H; i++) {
		for (int j = 0; j < W - 1; j++) {
			int idx1 = i * W + j;
			int idx2 = i * W + (j + 1);
			int v = rand() % 2;
			if (v == 0) { vec[idx1][0] = 2; vec[idx2][2] = 3; }
			if (v == 1) { vec[idx1][0] = 3; vec[idx2][2] = 2; }
		}
	}

	// 縦方向
	for (int i = 0; i < H - 1; i++) {
		for (int j = 0; j < W; j++) {
			int idx1 = i * W + j;
			int idx2 = (i + 1) * W + j;
			int v = rand() % 2;
			if (v == 0) { vec[idx1][1] = 2; vec[idx2][3] = 3; }
			if (v == 1) { vec[idx1][1] = 3; vec[idx2][3] = 2; }
		}
	}

	// ランダム生成
	int num = rand() % (H * W);
	N = H * W - 1; vector<int> Ans;
	for (int i = 0; i < H * W; i++) {
		if (i == num) { Ans = vec[i]; continue; }
		int idx = i; if (i >= num) idx -= 1;
		for (int j = 0; j < 4; j++) A[idx][j] = vec[i][j];
	}

	// 正規化
	vector<int> V1 = vector<int>{ Ans[0], Ans[1], Ans[2], Ans[3] };
	vector<int> V2 = vector<int>{ Ans[1], Ans[2], Ans[3], Ans[0] };
	vector<int> V3 = vector<int>{ Ans[2], Ans[3], Ans[0], Ans[1] };
	vector<int> V4 = vector<int>{ Ans[3], Ans[0], Ans[1], Ans[2] };
	vector<int> V5 = vector<int>{ Ans[0], Ans[3], Ans[2], Ans[1] };
	vector<int> V6 = vector<int>{ Ans[1], Ans[0], Ans[3], Ans[2] };
	vector<int> V7 = vector<int>{ Ans[2], Ans[1], Ans[0], Ans[3] };
	vector<int> V8 = vector<int>{ Ans[3], Ans[2], Ans[1], Ans[0] };
	vector<int> Ret = min({ V1, V2, V3, V4, V5, V6, V7, V8 });
	if (Ret[0] == Ret[2] && Ret[1] == Ret[3]) S = 1;
	else S = 0;
	return Ret;
}

vector<int> Solve() {
	// Step #1. 凹凸の差を数える
	int SA = 0, SA2 = 0;
	for (int i = 0; i < N; i++) {
		for (int j = 0; j < 4; j++) {
			if (A[i][j] == 2) SA += 1;
			if (A[i][j] == 3) SA -= 1;
		}
		vector<int> v(4, 0);
		if (A[i][0] == 1 && A[i][1] == 1) { v[2] = 1; v[3] = 1; }
		else if (A[i][0] == 1 && A[i][2] == 1) { v[1] = 1; v[3] = 1; }
		else if (A[i][0] == 1 && A[i][3] == 1) { v[1] = 1; v[2] = 1; }
		else if (A[i][1] == 1 && A[i][2] == 1) { v[0] = 1; v[3] = 1; }
		else if (A[i][1] == 1 && A[i][3] == 1) { v[0] = 1; v[2] = 1; }
		else if (A[i][2] == 1 && A[i][3] == 1) { v[0] = 1; v[1] = 1; }
		else if (A[i][0] == 1) { v[1] = 1; v[3] = 1; }
		else if (A[i][1] == 1) { v[2] = 1; v[0] = 1; }
		else if (A[i][2] == 1) { v[3] = 1; v[1] = 1; }
		else if (A[i][3] == 1) { v[0] = 1; v[2] = 1; }
		for (int j = 0; j < 4; j++) {
			if (v[j] == 1 && A[i][j] == 2) SA2 += 1;
			if (v[j] == 1 && A[i][j] == 3) SA2 -= 1;
		}
	}

	// Step #2. 角の数を数える
	int Kado = 4, Kado2 = 0;
	for (int i = 0; i < N; i++) {
		int ret = 0;
		if (A[i][0] == 1 && A[i][1] == 1) ret += 1;
		if (A[i][1] == 1 && A[i][2] == 1) ret += 1;
		if (A[i][2] == 1 && A[i][3] == 1) ret += 1;
		if (A[i][3] == 1 && A[i][0] == 1) ret += 1;
		Kado -= ret;
		if (ret >= 2) Kado2 = 1;
	}

	// Step #3. 場合分け（N=0 の場合）
	if (N == 0) {
		return vector<int>{1, 1, 1, 1};
	}

	// Step #4. 場合分け（H=1 の場合）
	if (Kado2 == 1) {
		if (SA ==  2) return vector<int>{1, 3, 1, 3};
		if (SA == -2) return vector<int>{1, 2, 1, 2};
		if (SA ==  1) return vector<int>{1, 1, 1, 3};
		if (SA == -1) return vector<int>{1, 1, 1, 2};
		return vector<int>{1, 2, 1, 3};
	}

	// Step #5. そうでない場合
	if (Kado2 == 0) {
		if (SA ==  4) return vector<int>{3, 3, 3, 3};
		if (SA == -4) return vector<int>{2, 2, 2, 2};
		if (SA ==  3) return vector<int>{1, 3, 3, 3};
		if (SA == -3) return vector<int>{1, 2, 2, 2};
		if (SA ==  2 && Kado == 0) return vector<int>{2, 3, 3, 3};
		if (SA ==  2 && Kado == 1) return vector<int>{1, 1, 3, 3};
		if (SA == -2 && Kado == 0) return vector<int>{2, 2, 2, 3};
		if (SA == -2 && Kado == 1) return vector<int>{1, 1, 2, 2};
		if (SA ==  1 && SA2 != 0) return vector<int>{1, 3, 2, 3};
		if (SA ==  1 && SA2 == 0) return vector<int>{1, 2, 3, 3};
		if (SA == -1 && SA2 != 0) return vector<int>{1, 2, 3, 2};
		if (SA == -1 && SA2 == 0) return vector<int>{1, 2, 2, 3};
		if (SA == 0 && Kado == 1) return vector<int>{1, 1, 2, 3};
		if (SA == 0 && S == 0) return vector<int>{2, 2, 3, 3};
		return vector<int>{2, 3, 2, 3};
	}

	// エラー
	return vector<int>{-1, -1, -1, -1};
}

int main() {
	int T;
	cin >> T;
	for (int i = 0; i < T; i++) {
		cin >> N >> S;
		for (int j = 0; j < N; j++) cin >> A[j][0] >> A[j][1] >> A[j][2] >> A[j][3];
		vector<int> Answer = Solve();
		cout << Answer[0] << " " << Answer[1] << " " << Answer[2] << " " << Answer[3] << endl;
	}
	return 0;
}
