#include <bits/stdc++.h>
#define rep(i, n) for (int i = 0; i < n; i++)
using namespace std;

int dx[8] = {1, 1, 1, 0, -1, -1, -1, 0};
int dy[8] = {-1, 0, 1, 1, 1, 0, -1, -1};

void dfs(
	int h,
	int w,
	vector<vector<int>>& c,
	vector<vector<int>>& mp,
	int cur_x, 
	int cur_y, 
	int id
) {
	mp[cur_y][cur_x] = id;
	rep(i, 8) {
		int next_x = cur_x + dx[i];
		int next_y = cur_y + dy[i];
		if (next_x < 0 || w <= next_x) continue;
		if (next_y < 0 || h <= next_y) continue;
		if (c[next_y][next_x] == 0) continue;
		if (mp[next_y][next_x] != -1) continue;
		dfs(h, w, c, mp, next_x, next_y, id);
	}
}

int main() {
	while (1) {
		int h, w; scanf("%d %d", &w, &h);
		if (!h && !w) break;

		vector<vector<int>> c(h, vector<int>(w, -1));
		vector<vector<int>> mp(h, vector<int>(w, -1));		
		rep(i, h) {
			rep(j, w) {
				scanf("%d", &c[i][j]);
			}
		}

		int ans = 0;
		rep(i, h) {
			rep(j, w) {
				if (c[i][j] == 0) continue;
				if (mp[i][j] != -1) continue;
				dfs(h, w, c, mp, j, i, ans);
				ans++;
			}
		}
		
		printf("%d\n", ans);
	}
}


